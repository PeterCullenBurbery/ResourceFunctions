Notebook[{

Cell[CellGroupData[{
Cell["PhysicalQuantityData", "Title",
 Deletable->False,
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.864143609076166*^9, 3.86414361259085*^9}},
 CellTags->{"Name", "TabNext", "TemplateCell", "Title"},
 CellID->863144461,ExpressionUUID->"c1c7f369-e745-4b56-9ca6-494108695229"],

Cell["Calculate data related to physical quantities", "Text",
 Deletable->False,
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.86414362273337*^9, 3.864143634929884*^9}},
 CellTags->{"DefaultContent", "Description", "TabNext", "TemplateCell"},
 CellID->660820806,ExpressionUUID->"7fdd1f59-32a4-481e-9507-923493d92e66"],

Cell[CellGroupData[{

Cell[TextData[{
 "Definition",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Function", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Define your function using the name you gave in the Title line \
above. You can add input cells and extra code to define additional input \
cases or prerequisites. All definitions, including dependencies, will be \
included in the generated resource function.\n\nThis section should be \
evaluated before creating the Examples section below.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoFunction"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "899d74cd-1efc-420b-b435-7d4c6bb89364"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Function"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Definition", "Function", "TemplateCellGroup"},
 CellID->292731158,ExpressionUUID->"3f6d489e-df5d-48d1-9d0f-103077610e15"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "PhysicalQuantityData", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PhysicalQuantityData", "[", "]"}], ":=", 
  RowBox[{
  "EntityList", "[", "\"\<PhysicalQuantity\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PhysicalQuantityData", "[", 
   RowBox[{
    RowBox[{"name_", "?", "StringQ"}], ",", "property_"}], "]"}], ":=", 
  RowBox[{"EntityValue", "[", 
   RowBox[{
    RowBox[{"Entity", "[", 
     RowBox[{"\"\<PhysicalQuantity\>\"", ",", "name"}], "]"}], ",", 
    "property"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PhysicalQuantityData", "[", 
   RowBox[{"name_Entity", ",", "property_"}], "]"}], ":=", 
  RowBox[{"EntityValue", "[", 
   RowBox[{"name", ",", "property"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"PhysicalQuantityData", ",", "Listable"}], "]"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.864143614043824*^9, {3.8641443681081915`*^9, 3.864144384688192*^9}, {
   3.871396685341197*^9, 3.8713967428902397`*^9}, {3.871396980524611*^9, 
   3.871396992026945*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[324]:=",
 CellID->876320555,ExpressionUUID->"ba735c12-2742-43c0-bd49-332c1424589d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Documentation", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Documentation"},
 CellTags->{"Documentation", "TemplateSection"},
 CellID->337507785,ExpressionUUID->"0762f16f-5129-4262-81a9-be361165f0a2"],

Cell[CellGroupData[{

Cell[TextData[{
 "Usage",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Usage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Document input usage cases by first typing an input structure, \
then pressing ", 
           Cell[
            BoxData[
             StyleBox[
              DynamicBox[
               ToBoxes[
                
                If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                 "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
               Evaluator -> "System"], ShowStringCharacters -> False]]], 
           " to add a brief explanation of the function\[CloseCurlyQuote]s \
behavior for that structure. Pressing ", 
           Cell[
            BoxData[
             StyleBox[
              DynamicBox[
               ToBoxes[
                
                If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                 "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
               Evaluator -> "System"], ShowStringCharacters -> False]]], 
           " repeatedly will create new cases as needed. Every input usage \
case defined above should be demonstrated explicitly here.\n\nSee existing \
documentation pages for examples."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoUsage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "824291c7-54d5-4fd4-836b-10c037c02c24"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Usage"},
 DefaultNewCellStyle->{"UsageInputs", FontFamily -> "Source Sans Pro"},
 CellTags->{"TemplateCellGroup", "Usage"},
 CellID->38054786,ExpressionUUID->"e5c56b93-b730-44c6-9792-0d3e66417890"],

Cell["\<\
Why is this function more convenient than using the Entity framework \
directly? It's a pretty trivial function, is the motivation for it?\
\>", "ReviewerComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "Signature" -> 
   "OEM6eJxLYywWcMlMzyxJzAnOTM9LLCktSnVk0w1mCaksSA3mdc3JySwoyUx2Li0qS9UN5gTTfo\
m5qcGcxanJBUamZtmGusG8cK1gXQJ++XkuqSWpRbmZeZnFQN1AFR6JxRmZeem+qSUZ+\
SnBbMEejkC9usGMQU4KIkpb4jNMA8zP6l1XnCbQXxQuJZfBJfLQZvG88gRfVcd5QFXBTgpsf5Q3fOC\
TVBFg4D8g9USods0H/5ifzvJ6fn9ir+ztKfICACCeRtA="},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
         TemplateBox[{"\"WFR Team B\""}, "ReviewerCommentLabelTemplate"], 
         ShowStringCharacters -> False, StripOnInput -> False], 
        3.865087632497272`16.339734334213407*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.865087633341597*^9, 3.865087687758568*^9}},
 CellTags->{"CommentCell", "ReviewerComment"},
 CellID->1671147167,ExpressionUUID->"8b8ae12b-f18e-4dc0-8c24-223a871cb108"],

Cell["\<\
Please use the \"Template Input\" button above instead of italics to add \
formatting to the variable names below. Also, please use shorter variable \
names without spaces.\
\>", "ReviewerComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "Signature" -> 
   "OEM6eJxLYywWcMlMzyxJzAnOTM9LLCktSnVk0w1mCaksSA3mdc3JySwoyUx2Li0qS9UN5gTTfo\
m5qcGcxanJBUamZtmGusG8cK1gXQJ++XkuqSWpRbmZeZnFQN1AFR6JxRmZeem+qSUZ+\
SnBbMEejkC9usGMQU4KT1n+pfRUei1fHy4QKHQi5JTpUfZ06c6I3w4Z24qm1Sz+CFQV7KSQt2nBqs+\
zTNgZGtSuqopPe2n40WiPgkzy2qSi+zvFOWaeAwAR/EuN"},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
         TemplateBox[{"\"WFR Team B\""}, "ReviewerCommentLabelTemplate"], 
         ShowStringCharacters -> False, StripOnInput -> False], 
        3.86508769150111`16.33973434084328*^9}, "CommentCellLabelTemplate"]], 
     Background -> None]}, {None, None}},
 CellChangeTimes->{{3.865087692350814*^9, 3.865087736019326*^9}},
 CellTags->{"CommentCell", "ReviewerComment"},
 CellID->1612421682,ExpressionUUID->"1814f13a-6e09-4b58-bf86-ec10915498c6"],

Cell["\<\
I prefer using named functions than Ctrl and equals and the built in \
Interpreter.\
\>", "AuthorComment",
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
        "\"burbery1@marshall.edu\"", ShowStringCharacters -> False, 
         StripOnInput -> False], 3.8713964605093949`17.34044263782195*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.871396464358062*^9, 3.871396481493022*^9}},
 CellTags->{"AuthorComment", "CommentCell"},
 CellID->27891889,ExpressionUUID->"9c8513cb-3d42-4df5-9763-d37c18d38ca5"],

Cell["\<\
I also added a function PhysicalQuantityData[] that adds functionality to the \
function.\
\>", "AuthorComment",
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
        "\"burbery1@marshall.edu\"", ShowStringCharacters -> False, 
         StripOnInput -> False], 3.8713970334811277`17.3404427020981*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.8713970345127373`*^9, 3.871397051803057*^9}},
 CellTags->{"AuthorComment", "CommentCell"},
 CellID->215065606,ExpressionUUID->"67d42203-5547-4bb0-8ca2-345c63e11461"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PhysicalQuantityData", "[", 
  StyleBox[
   RowBox[{
    StyleBox["physicalquantity", "TI"], ",", " ", 
    StyleBox["property", "TI"]}],
   FontSlant->"Plain"], "]"}]], "UsageInputs",
 TaggingRules->{},
 CellChangeTimes->{{3.8641436425558896`*^9, 3.864143704765524*^9}, {
  3.871396484917647*^9, 3.871396505087922*^9}},
 FontFamily->"Source Sans Pro",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->67839508,ExpressionUUID->"077df82e-610b-4b53-afb2-2ae8ad85045c"],

Cell[TextData[{
 "calculate the value of the ",
 Cell[BoxData[
  StyleBox["property", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7724bec0-0152-4fe8-acd1-946f441b58a8"],
 " for ",
 Cell[BoxData[
  StyleBox["physicalquantity", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "90d27190-2c36-4f04-a6c6-24b20c22fd79"],
 "."
}], "UsageDescription",
 TaggingRules->{},
 CellChangeTimes->{{3.8641437082065296`*^9, 3.8641437173255186`*^9}, {
  3.8713965078454847`*^9, 3.871396512379197*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->746063541,ExpressionUUID->"be6ee07b-20c8-47b5-8acf-27be69deabdf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Options",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a detailed explanation of how the function is used and \
configured (e.g. acceptable input types, result formats, options \
specifications, background information). This section may include multiple \
cells, bullet lists, tables, hyperlinks and additional styles/structures as \
needed.\n\nAdd any other information that may be relevant, such as when the \
function was first discovered or how and why it is used within a given field. \
Include all relevant background or contextual information related to the \
function, its development, and its usage.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "27556bed-6f91-4582-a83a-7926b6647dcc"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Notes"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details & Options", "Notes", "TemplateCellGroup"},
 CellID->447261062,ExpressionUUID->"ae663099-9122-4308-a61f-c642be3608bc"],

Cell["Additional information about usage and options.", "Notes",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->422531486,ExpressionUUID->"a4bb2b6f-4bad-4c9d-a85b-5d6a20bfcb03"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Examples", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Demonstrate the function\[CloseCurlyQuote]s usage, starting with \
the most basic use case and describing each example in a preceding text cell.\
\n\nWithin a group, individual examples can be delimited by inserting page \
breaks between them (either using ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"[Right-click]\"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontColor -> GrayLevel[0.28627], 
                 FontSize -> 14, StripOnInput -> False], 
                StyleBox[
                "\" \[FilledRightTriangle] \"", FontFamily -> 
                 "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                 GrayLevel[0.5], StripOnInput -> False], 
                StyleBox[
                "\"Insert Page Break\"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontColor -> GrayLevel[0.28627], 
                 FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
              ShowStringCharacters -> False]]], 
           " between cells or through the menu using ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"Insert\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontColor -> GrayLevel[0.28627], FontSize -> 14, 
                 StripOnInput -> False], 
                StyleBox[
                "\" \[FilledRightTriangle] \"", FontFamily -> 
                 "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                 GrayLevel[0.5], StripOnInput -> False], 
                StyleBox[
                "\"Page Break\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontColor -> GrayLevel[0.28627], FontSize -> 14, 
                 StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
              False]]], 
           ").\n\nExamples should be grouped into Subsection and \
Subsubsection cells similarly to existing documentation pages. Here are some \
typical Subsection names and the types of examples they normally contain:\n  \
", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Basic Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "most basic function usage\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Scope: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
               "RowDefault"], ShowStringCharacters -> False]]], 
           "input and display conventions, standard computational attributes \
(e.g. threading over lists)\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Options: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
               "RowDefault"], ShowStringCharacters -> False]]], 
           "available options and parameters for the function\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Applications: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "standard industry or academic applications\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Properties and Relations: \"", FontFamily -> 
                 "Source Sans Pro", FontWeight -> "SemiBold", FontSize -> 14, 
                 StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
              False]]], "how the function relates to other functions\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Possible Issues: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "limitations or unexpected behavior a user might experience\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Neat Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "particularly interesting, unconventional, or otherwise unique \
usage"}], "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExamples"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "19388223-370f-4c45-9154-22d6f5e7863d"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Examples"},
 CellTags->{"Examples", "TemplateCellGroup"},
 CellID->671320372,ExpressionUUID->"aea1c221-248b-4d6f-b37f-2a347da069a6"],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->619504543,ExpressionUUID->"b7428025-80d3-447d-8caf-83d6076233c1"],

Cell["Find the SI base unit for magnetic inductance:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8641437278525276`*^9, 3.8641437707566366`*^9}},
 CellTags->"DefaultContent",
 CellID->586099280,ExpressionUUID->"d40fa1f2-a6c8-4de9-9cfe-c5a76d67f8d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PhysicalQuantityData", "[", 
  RowBox[{"\"\<MagneticInductance\>\"", ",", "\"\<SIBaseUnit\>\""}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8641437728316293`*^9, 3.864143783085617*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[293]:=",
 CellID->298664010,ExpressionUUID->"c1977c56-12bb-4912-ac89-7f30d430bd61"],

Cell[BoxData[
 TemplateBox[{"1", 
   RowBox[{"\"kg\"", "\[ThinSpace]", 
     SuperscriptBox["\"m\"", "2"], "\[NegativeMediumSpace]", "\"/(\"", 
     "\[InvisibleSpace]", 
     SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", 
     SuperscriptBox["\"A\"", "2"], "\[InvisibleSpace]", "\")\""}], 
   "kilogram meter squared per second squared ampere squared", 
   FractionBox[
    RowBox[{"\"Kilograms\"", " ", 
      SuperscriptBox["\"Meters\"", "2"]}], 
    RowBox[{
      SuperscriptBox["\"Amperes\"", "2"], " ", 
      SuperscriptBox["\"Seconds\"", "2"]}]]},
  "Quantity"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.864143784903624*^9, 3.871396517837196*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[293]=",
 CellID->175549499,ExpressionUUID->"1302c70e-ac3b-4208-aae8-20515ef5dbbe"]
}, Open  ]],

Cell["\<\
Compute extensive and intensive properties of the SI base quantities. \
Extensive properties are dependent on the amount of a substance but intensive \
properties are the same no matter how much you have of something. For \
example, density is constant but the mass and volume of an object changes:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.864143796939636*^9, 3.86414381885118*^9}, {
  3.864143965223425*^9, 3.864144001209409*^9}},
 CellID->148820840,ExpressionUUID->"3563793d-ceeb-4279-a2b6-c56b2564392d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SIbaseunits", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Time\>\"", ",", "\"\<Length\>\"", ",", "\"\<Mass\>\"", ",", 
     "\"\<ElectricalCurrent\>\"", ",", "\"\<Temperature\>\"", ",", 
     "\"\<AmountOfSubstance\>\"", ",", "\"\<LuminousIntensity\>\""}], "}"}]}],
   ";"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.86414382070618*^9, 3.864143858185772*^9}},
 CellLabel->"In[294]:=",
 CellID->200373233,ExpressionUUID->"3b272216-e270-4dbf-8913-27d9cb20b17f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"PhysicalQuantityData", "[", 
     RowBox[{"#", ",", "\"\<PhysicalPropertyType\>\""}], "]"}], "&"}], ",", 
   "SIbaseunits"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8641438601087675`*^9, 3.864143908791427*^9}},
 CellLabel->"In[295]:=",
 CellID->920117096,ExpressionUUID->"173ad702-937a-4f2a-baa4-f6bcc7737af0"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Time\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"Length\"\>", "\[Rule]", "\<\"extensive\"\>"}], ",", 
   RowBox[{"\<\"Mass\"\>", "\[Rule]", "\<\"extensive\"\>"}], ",", 
   RowBox[{"\<\"ElectricalCurrent\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", 
     RowBox[{"\<\"UnknownEntity\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"\<\"PhysicalQuantity\"\>", ",", "\<\"ElectricalCurrent\"\>"}],
        "}"}]}], "]"}]}], ",", 
   RowBox[{"\<\"Temperature\"\>", "\[Rule]", "\<\"intensive\"\>"}], ",", 
   RowBox[{"\<\"AmountOfSubstance\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", 
     RowBox[{"\<\"UnknownEntity\"\>", ",", 
      RowBox[{"{", 
       RowBox[{"\<\"PhysicalQuantity\"\>", ",", "\<\"AmountOfSubstance\"\>"}],
        "}"}]}], "]"}]}], ",", 
   RowBox[{"\<\"LuminousIntensity\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.864143886002304*^9, 3.86414391701641*^9, 
  3.8713965261462393`*^9},
 CellLabel->"Out[295]=",
 CellID->739240487,ExpressionUUID->"eeb05e62-c010-4a70-88dc-41d2f510dcaf"]
}, Open  ]],

Cell["Select intensive values:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8641440384524207`*^9, 3.8641440527941217`*^9}},
 CellID->131604695,ExpressionUUID->"5c8e3aaa-cf07-424e-b161-db7e58121217"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"#", "==", "\"\<intensive\>\""}], "&"}], "]"}], "[", 
  RowBox[{"AssociationMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"PhysicalQuantityData", "[", 
      RowBox[{"#", ",", "\"\<PhysicalPropertyType\>\""}], "]"}], "&"}], ",", 
    "SIbaseunits"}], "]"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8641440539061*^9, 3.8641440596960945`*^9}, {
  3.8641442692506523`*^9, 3.864144323707674*^9}},
 CellLabel->"In[296]:=",
 CellID->223367374,ExpressionUUID->"e0f0f254-128e-4b52-9e2b-311ac256229d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Temperature\"\>", "\[Rule]", "\<\"intensive\"\>"}], 
  "\[RightAssociation]"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.8641440621286497`*^9, {3.86414428344565*^9, 3.8641443260236673`*^9}, 
   3.8713965273796673`*^9},
 CellLabel->"Out[296]=",
 CellID->106396905,ExpressionUUID->"94cde723-7fee-4e35-883f-3df702bc492c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PhysicalQuantityData", "[", 
  RowBox[{
   RowBox[{"First", "[", 
    RowBox[{"Keys", "[", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"#", "==", "\"\<intensive\>\""}], "&"}], "]"}], "[", 
      RowBox[{"AssociationMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"PhysicalQuantityData", "[", 
          RowBox[{"#", ",", "\"\<PhysicalPropertyType\>\""}], "]"}], "&"}], 
        ",", "SIbaseunits"}], "]"}], "]"}], "]"}], "]"}], ",", 
   "\"\<SIBaseUnit\>\""}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8641443267606783`*^9, 3.864144352724211*^9}},
 CellLabel->"In[297]:=",
 CellID->12376490,ExpressionUUID->"462f9fd0-61f0-4e63-998c-150c70153706"],

Cell[BoxData[
 TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
  "Quantity"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8641443361026616`*^9, 3.8641443561041965`*^9}, 
   3.8713965290409436`*^9},
 CellLabel->"Out[297]=",
 CellID->302233728,ExpressionUUID->"03fb5c98-5b27-421e-965b-27b9faa6d3a9"]
}, Open  ]],

Cell["\<\
I learned that the only intensive SI base unit is the Kelvin for temperature.\
\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.864144005102417*^9, 3.8641440367854156`*^9}},
 CellID->416649879,ExpressionUUID->"963b105b-9050-4062-9f38-fa4c7e7b9e05"],

Cell["Find instances of time:", "Text",
 CellChangeTimes->{{3.871396617082595*^9, 3.8713966232011447`*^9}},
 CellID->18253355,ExpressionUUID->"7749d78a-59e7-4c9d-9e72-f2ec9ce2f82b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PhysicalQuantityData", "[", 
  RowBox[{"\"\<Time\>\"", ",", "\"\<Instances\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.871396574741951*^9, 3.871396592716673*^9}, {
  3.87139662560015*^9, 3.8713966267297955`*^9}},
 CellLabel->"In[300]:=",
 CellID->272181489,ExpressionUUID->"d4eca1a5-99c3-44e1-8d28-75465e343383"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"characteristic time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"CharacteristicTime\""}], "]"}],
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"CharacteristicTime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"data transfer time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"DataTransferTime\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"DataTransferTime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"downtime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Downtime\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Downtime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"elapsed real time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ElapsedRealTime\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElapsedRealTime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"lag\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Lag\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Lag\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"latency\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Latency\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Latency\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"moving time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"MovingTime\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"MovingTime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"ping time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PingTime\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"PingTime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Poincar\[EAcute] recurrence time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PoincareRecurrenceTime\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PoincareRecurrenceTime\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"relaxation time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"RelaxationTime\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"RelaxationTime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"reverberation time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ReverberationTime\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"ReverberationTime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"round\[Hyphen]trip delay\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"RoundTripDelay\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"RoundTripDelay\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"time difference\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"TimeDifference\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"TimeDifference\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"time shift\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"TimeShift\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"TimeShift\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"uptime\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Uptime\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Uptime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"working time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkingTime\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorkingTime\\\"]\"", 
     "\"physical quantity\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{{3.8713965835211773`*^9, 3.8713965944854307`*^9}, 
   3.8713966271589513`*^9},
 CellLabel->"Out[300]=",
 CellID->360714230,ExpressionUUID->"e4cd91f7-1a60-4d20-bb55-100f1fd523a1"]
}, Open  ]],

Cell["Display the instances as a column of strings:", "Text",
 CellChangeTimes->{{3.871396780378166*^9, 3.871396789545333*^9}},
 CellID->248830420,ExpressionUUID->"a05f0255-2a8a-45c8-a61a-d43c873fb200"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{"TextForm", "/@", 
   RowBox[{"CanonicalName", "/@", 
    RowBox[{"PhysicalQuantityData", "[", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Instances\>\""}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8713967901971164`*^9, 3.8713968113334036`*^9}},
 CellLabel->"In[316]:=",
 CellID->443140213,ExpressionUUID->"7eaf5aec-607b-422d-8962-20c731a525a0"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"CharacteristicTime\"\>"},
    {"\<\"DataTransferTime\"\>"},
    {"\<\"Downtime\"\>"},
    {"\<\"ElapsedRealTime\"\>"},
    {"\<\"Lag\"\>"},
    {"\<\"Latency\"\>"},
    {"\<\"MovingTime\"\>"},
    {"\<\"PingTime\"\>"},
    {"\<\"PoincareRecurrenceTime\"\>"},
    {"\<\"RelaxationTime\"\>"},
    {"\<\"ReverberationTime\"\>"},
    {"\<\"RoundTripDelay\"\>"},
    {"\<\"TimeDifference\"\>"},
    {"\<\"TimeShift\"\>"},
    {"\<\"Uptime\"\>"},
    {"\<\"WorkingTime\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.8713968000131874`*^9, 3.8713968115125785`*^9}},
 CellLabel->"Out[316]=",
 CellID->363282720,ExpressionUUID->"3ffe462d-8673-4e59-a836-4217172f4bce"]
}, Open  ]],

Cell["Display instances of mass in a column:", "Text",
 CellChangeTimes->{{3.8713967756162004`*^9, 3.871396777166622*^9}, {
  3.8713968520659423`*^9, 3.87139685871334*^9}},
 CellID->313233073,ExpressionUUID->"702f7ced-f59c-402b-9ff5-da2dc4058d06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{"TextForm", "/@", 
   RowBox[{"CanonicalName", "/@", 
    RowBox[{"PhysicalQuantityData", "[", 
     RowBox[{"\"\<Mass\>\"", ",", "\"\<Instances\>\""}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8713967901971164`*^9, 3.8713968113334036`*^9}, {
  3.8713968594972587`*^9, 3.8713968651887207`*^9}},
 CellLabel->"In[318]:=",
 CellID->451738994,ExpressionUUID->"6087f3ea-b0e8-457c-86ea-907275d3270b"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"BasisWeight\"\>"},
    {"\<\"BodyMass\"\>"},
    {"\<\"CharacteristicMass\"\>"},
    {"\<\"DeadweightTonnage\"\>"},
    {"\<\"DrainedNetWeight\"\>"},
    {"\<\"DryMass\"\>"},
    {"\<\"DryWeight\"\>"},
    {"\<\"EffectiveMass\"\>"},
    {"\<\"FermentationMass\"\>"},
    {"\<\"FreshWeight\"\>"},
    {"\<\"GravitationalMass\"\>"},
    {"\<\"GrossVehicleWeightRating\"\>"},
    {"\<\"GrossWeight\"\>"},
    {"\<\"InertialMass\"\>"},
    {"\<\"JeansMass\"\>"},
    {"\<\"LiquidMass\"\>"},
    {"\<\"MassAdequate\"\>"},
    {"\<\"MassDefect\"\>"},
    {"\<\"MassExcess\"\>"},
    {"\<\"NetWeight\"\>"},
    {"\<\"NetWeightOfDryMatter\"\>"},
    {"\<\"OrganicMatter\"\>"},
    {"\<\"ParticulateMatter\"\>"},
    {"\<\"ReducedMass\"\>"},
    {"\<\"RelativisticMass\"\>"},
    {"\<\"RestMass\"\>"},
    {"\<\"ShipDisplacement\"\>"},
    {"\<\"TareWeight\"\>"},
    {"\<\"TotalWeight\"\>"},
    {"\<\"WetMass\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.871396866063768*^9},
 CellLabel->"Out[318]=",
 CellID->941519797,ExpressionUUID->"33b2d6e5-3726-48bc-a6a5-1e5e2ee38927"]
}, Open  ]],

Cell["\<\
Display instances of the derived quantity magnetic inductance:\
\>", "Text",
 CellChangeTimes->{{3.8713968805969276`*^9, 3.87139689917093*^9}},
 CellID->51831286,ExpressionUUID->"dc366c64-cc63-4e45-9385-daa86f0112e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{"TextForm", "/@", 
   RowBox[{"CanonicalName", "/@", 
    RowBox[{"PhysicalQuantityData", "[", 
     RowBox[{"\"\<MagneticInductance\>\"", ",", "\"\<Instances\>\""}], 
     "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8713967901971164`*^9, 3.8713968113334036`*^9}, {
  3.8713968594972587`*^9, 3.8713968651887207`*^9}, {3.871396899844322*^9, 
  3.8713969042232623`*^9}},
 CellLabel->"In[319]:=",
 CellID->163168120,ExpressionUUID->"053f4e4b-279b-4246-9670-32741acc06cc"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"InductiveLoad\"\>"},
    {"\<\"SelfInductance\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.871396905210471*^9},
 CellLabel->"Out[319]=",
 CellID->7578721,ExpressionUUID->"8cb5089f-81b6-41bc-9743-5fae54d52ebe"]
}, Open  ]],

Cell["\<\
Get a random sample of 100 physical quantities out of all physical quantities:\
\>", "Text",
 CellChangeTimes->{{3.87139705823472*^9, 3.871397112395121*^9}},
 CellID->396683854,ExpressionUUID->"be3a93e5-dbd2-428f-9a91-483c928a68e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityList", "[", "\"\<PhysicalQuantity\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8713969507114353`*^9, 3.871396956474495*^9}},
 CellLabel->"In[322]:=",
 CellID->786976707,ExpressionUUID->"623f650f-c984-4868-b797-77e478be1fd2"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         TemplateBox[{"\"Abbe number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbbeNumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbbeNumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absackle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absackle\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absackle\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"abseleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Abseleration\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Abseleration\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absement\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absement\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absement\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"abserk\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Abserk\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Abserk\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absnap\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absnap\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absnap\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute altitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteAltitude\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteAltitude\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute bearing\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteBearing\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteBearing\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute chemical activity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsoluteChemicalActivity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteChemicalActivity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute elongation\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteElongation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteElongation\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute global warming potential\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsoluteGlobalWarmingPotential\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteGlobalWarmingPotential\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"absolute humidity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteHumidity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteHumidity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteMagnitude\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteMagnitude\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute magnitude H\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteMagnitudeH\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteMagnitudeH\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute magnitude M\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteMagnitudeM\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteMagnitudeM\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute magnitude M_B\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteMagnitudeMB\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteMagnitudeMB\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute bolometric magnitude M_bol\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsoluteMagnitudeMBolometric\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteMagnitudeMBolometric\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"absolute visual magnitude M_V\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteMagnitudeMV\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteMagnitudeMV\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteMass\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsolutePressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsolutePressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute vorticity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteVorticity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteVorticity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute vorticity vertical component\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsoluteVorticityVerticalComponent\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteVorticityVerticalComponent\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"absop\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absop\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absop\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absorbance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absorbance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absorbance\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absorbed dose of ionizing radiation\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsorbedDoseOfIonizingRadiation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsorbedDoseOfIonizingRadiation\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"absorbed dose rate of ionizing radiation\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsorbedDoseRateOfIonizingRadiation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsorbedDoseRateOfIonizingRadiation\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"absorptance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absorptance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absorptance\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absorption cross section\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsorptionCrossSection\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsorptionCrossSection\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         
         TemplateBox[{"\"absorption number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsorptionNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsorptionNumber\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absorptivity temperature coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsorptivityTemperatureCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsorptivityTemperatureCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"abundance ratio\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbundanceRatio\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbundanceRatio\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"accelerating frequency\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcceleratingFrequency\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AcceleratingFrequency\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acceleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Acceleration\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Acceleration\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acceleration gradient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AccelerationGradient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AccelerationGradient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acceleration number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AccelerationNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AccelerationNumber\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acceleration spectral density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AccelerationSpectralDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AccelerationSpectralDensity\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"acceptor density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AcceptorDensity\""}], 
             "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AcceptorDensity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acentric factor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AcentricFactor\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcentricFactor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"achieved availability\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AchievedAvailability\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AchievedAvailability\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acoustic absorption coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcousticAbsorptionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticAbsorptionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"acoustic attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcousticAttenutationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticAttenutationCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"acoustic dissipation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcousticDissipationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticDissipationCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"acoustic energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AcousticEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acoustic impedance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AcousticImpedance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AcousticImpedance\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acoustic reflection coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcousticReflectionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticReflectionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"acoustic transmission coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcousticTransmissionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticTransmissionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"acousto\[Hyphen]optical figure of merit\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcoustoOpticalFigureOfMerit\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcoustoOpticalFigureOfMerit\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"actinic dose\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActinicDose\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ActinicDose\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"action\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Action\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Action\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"activation energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActivationEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ActivationEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"active energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActiveEnergy\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"ActiveEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"active power\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActivePower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ActivePower\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"activity coefficient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActivityCoefficient\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ActivityCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"activity factor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActivityFactor\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ActivityFactor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"actual exhaust speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActualExhaustSpeed\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ActualExhaustSpeed\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic bulk modulus\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticBulkModulus\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AdiabaticBulkModulus\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic compressibility\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticCompressibility\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AdiabaticCompressibility\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic heat capacity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticHeatCapacity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AdiabaticHeatCapacity\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic lapse rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AdiabaticLapseRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AdiabaticLapseRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic linear compressibility\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticLinearCompressibility\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AdiabaticLinearCompressibility\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"adiabatic molar heat capacity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticMolarHeatCapacity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AdiabaticMolarHeatCapacity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic specific heat capacity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticSpecificHeatCapacity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AdiabaticSpecificHeatCapacity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"adiabatic work\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AdiabaticWork\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AdiabaticWork\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"aerodynamic force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AerodynamicForce\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AerodynamicForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"age\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Age\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Age\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"agricultural yield\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AgriculturalYield\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AgriculturalYield\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"agricultural yield rate\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AgriculturalYieldRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AgriculturalYieldRate\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"air change rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AirChangeRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AirChangeRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"airflow permeability\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AirflowPermeability\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AirflowPermeability\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"air pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AirPressure\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AirPressure\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"airspeed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Airspeed\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Airspeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"air temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AirTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AirTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"albedo\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Albedo\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Albedo\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"alcohol by volume\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AlcoholByVolume\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AlcoholByVolume\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Alfv\[EAcute]n number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AlfvenNumber\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AlfvenNumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Almansi strain\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AlmansiStrain\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AlmansiStrain\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"alpha disintegration energy\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AlphaDisintegrationEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AlphaDisintegrationEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"alternating current voltage\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AlternatingCurrentVoltage\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AlternatingCurrentVoltage\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"altitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Altitude\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Altitude\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"altitude angle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AltitudeAngle\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AltitudeAngle\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"ambient pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmbientPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AmbientPressure\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"ambient temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmbientTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmbientTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"amount of substance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Amount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Amount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"amount concentration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmountConcentration\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmountConcentration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"amount fraction\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmountFraction\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmountFraction\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"amount of light\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmountOfLight\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmountOfLight\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"amount ratio\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmountRatio\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AmountRatio\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Amp\[EGrave]re number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmpereNumber\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AmpereNumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"amplifier current frequency sensitivity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AmplifierCurrentFrequencySensitivity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmplifierCurrentFrequencySensitivity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"amplifier noise slope\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmplifierNoiseSlope\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmplifierNoiseSlope\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"plane angle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Angle\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Angle\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle gradient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleGradient\""}], 
             "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngleGradient\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"anglement\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Anglement\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Anglement\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of attack\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfAttack\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfAttack\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of deviation\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfDeviation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfDeviation\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of incidence\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfIncidence\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfIncidence\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of optical rotation\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AngleOfOpticalRotation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfOpticalRotation\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         
         TemplateBox[{"\"angle of reflection\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfReflection\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngleOfReflection\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of refraction\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfRefraction\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngleOfRefraction\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of repose\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfRepose\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfRepose\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of vanishing stability\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AngleOfVanishingStability\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfVanishingStability\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"angle per distance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AnglePerDistance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AnglePerDistance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle per time magnetic flux density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AnglePerTimeMagneticFluxDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AnglePerTimeMagneticFluxDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"angular acceleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularAcceleration\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularAcceleration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular aperture\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularAperture\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularAperture\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular curvature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularCurvature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularCurvature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular diameter\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularDiameter\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularDiameter\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular diameter distance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AngularDiameterDistance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularDiameterDistance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular displacement\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularDisplacement\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularDisplacement\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular eccentricity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularEccentricity\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularEccentricity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular elongation\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularElongation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularElongation\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular frequency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularFrequency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularFrequency\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular impulse\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularImpulse\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularImpulse\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular jerk\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularJerk\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularJerk\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular momentum\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularMomentum\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularMomentum\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular momentum quantum number\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AngularMomentumQuantumNumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularMomentumQuantumNumber\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"angular radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularRadius\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularRadius\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular radius of curvature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AngularRadiusOfCurvature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularRadiusOfCurvature\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular reciprocal lattice vector\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AngularReciprocalLatticeVector\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularReciprocalLatticeVector\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"angular resolution\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularResolution\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularResolution\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular resolving power\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AngularResolvingPower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularResolvingPower\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular torque\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularTorque\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularTorque\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular velocity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularVelocity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularVelocity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular wavelength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularWavelength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularWavelength\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular wavenumber\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularWavenumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularWavenumber\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"anharmonicity constant\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AnharmonicityConstant\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AnharmonicityConstant\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"annual fuel utilization efficiency\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AnnualFuelUtilizationEfficiency\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AnnualFuelUtilizationEfficiency\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"antenna efficiency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AntennaEfficiency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AntennaEfficiency\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"anthropomass number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AnthropomassNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AnthropomassNumber\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Antoine equation constant A\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AntoineEquationConstantA\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AntoineEquationConstantA\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Antoine equation constant B\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AntoineEquationConstantB\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AntoineEquationConstantB\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Antoine equation constant C\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AntoineEquationConstantC\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AntoineEquationConstantC\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"aperture\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Aperture\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Aperture\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"aperture efficiency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApertureEfficiency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApertureEfficiency\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"apoapsis distance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApoapsisDistance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApoapsisDistance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitude\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ApparentMagnitude\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"B\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeB\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeB\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bolometric apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ApparentMagnitudeBolometric\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeBolometric\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"G\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeG\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeG\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"H\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeH\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeH\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"I\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeI\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeI\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"J\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeJ\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeJ\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"K\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeK\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeK\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"K_s\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeKs\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeKs\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"L\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeL\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeL\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"M\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeM\""}], 
             "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ApparentMagnitudeM\\\"]\"",
            "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"N\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeN\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeN\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Q\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeQ\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeQ\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"R\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeR\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeR\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"U\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeU\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeU\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"V\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeV\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeV\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Y\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeY\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeY\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Z\[Hyphen]band apparent magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ApparentMagnitudeZ\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ApparentMagnitudeZ\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Archimedes number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ArchimedesNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ArchimedesNumber\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"arc length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ArcLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ArcLength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Area\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Area\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area gradient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaGradient\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaGradient\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area heating capacity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaHeatingCapacity\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaHeatingCapacity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"areal thermal expansion coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ArealThermalExpansionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ArealThermalExpansionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"area moment of inertia x\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AreaMomentOfInertiaX\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaMomentOfInertiaX\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area moment of inertia y\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AreaMomentOfInertiaY\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaMomentOfInertiaY\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area per area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaPerArea\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaPerArea\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area per information\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaPerInformation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaPerInformation\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area per mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaPerMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaPerMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area per person\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaPerPerson\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaPerPerson\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area per person rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaPerPersonRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaPerPersonRate\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area per volume\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaPerVolume\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AreaPerVolume\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AreaTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaTime\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"area under flow\[Hyphen]volume curve\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AreaUnderFlowVolumeCurve\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AreaUnderFlowVolumeCurve\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"argument of periapsis\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ArgumentOfPeriapsis\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ArgumentOfPeriapsis\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Arrhenius number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ArrheniusNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ArrheniusNumber\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Arrhenius time number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ArrheniusTimeNumber\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ArrheniusTimeNumber\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"arrival count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ArrivalCount\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"ArrivalCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"arrival rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ArrivalRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ArrivalRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"artillery piece count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ArtilleryPieceCount\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ArtilleryPieceCount\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"assignable area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AssignableArea\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AssignableArea\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"association constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AssociationConstant\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AssociationConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atmospheric air column resistance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AtmosphericAirColumnResistance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtmosphericAirColumnResistance\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"atmospheric pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtmosphericPressure\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtmosphericPressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atom count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtomCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atomic binding energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicBindingEnergy\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtomicBindingEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atomic energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicEnergy\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtomicEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atomic g factor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicGFactor\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtomicGFactor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atomic magnetic moment\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AtomicMagneticMoment\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtomicMagneticMoment\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"mass of atom\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtomicMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atomic number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicNumber\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtomicNumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atomic physics diffusion length\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AtomicPhysicsDiffusionLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtomicPhysicsDiffusionLength\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"atomic radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomicRadius\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtomicRadius\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"atomic scattering factor\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AtomicScatteringFactor\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtomicScatteringFactor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         
         TemplateBox[{"\"atom per amount\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtomPerAmount\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtomPerAmount\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AttenuationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AttenuationCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         
         TemplateBox[{"\"attenuation length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AttenuationLength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AttenuationLength\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"attractive force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AttractiveForce\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AttractiveForce\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Atwood number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AtwoodNumber\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AtwoodNumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"authalic radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AuthalicRadius\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AuthalicRadius\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"autoignition temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AutoignitionTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AutoignitionTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"availability\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Availability\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Availability\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average bicycle cadence\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AverageBicycleCadence\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AverageBicycleCadence\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average heart rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageHeartRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AverageHeartRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average moving pace\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageMovingPace\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AverageMovingPace\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average moving speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageMovingSpeed\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AverageMovingSpeed\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average pace\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AveragePace\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AveragePace\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average population\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AveragePopulation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AveragePopulation\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average run cadence\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageRunCadence\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AverageRunCadence\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageSpeed\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AverageSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average swim cadence\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageSwimCadence\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AverageSwimCadence\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AverageTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"average transmission rate\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AverageTransmissionRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AverageTransmissionRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"axial area moment of inertia\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AxialAreaMomentOfInertia\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AxialAreaMomentOfInertia\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"axial stress\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AxialStress\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AxialStress\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"axial tilt\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AxialTilt\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AxialTilt\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"azimuth\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Azimuth\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Azimuth\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"back count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BackCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BackCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"backward absorption coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BackwardLinearAbsorptionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BackwardLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"backward linear attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BackwardLinearAttenuationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BackwardLinearAttenuationCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"backward scattering coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BackwardScatteringCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BackwardScatteringCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"bacterium count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BacteriumCount\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BacteriumCount\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bacterium deposition rate\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BacteriumDepositionRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BacteriumDepositionRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bag count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BagCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BagCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bagel count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BagelCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BagelCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Bagnold number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BagnoldNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BagnoldNumber\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Bagnold number for solid particles\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BagnoldNumberForSolidParticles\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BagnoldNumberForSolidParticles\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"bandwidth\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Bandwidth\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Bandwidth\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bar count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BarCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BarCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"barnyard number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BarnyardNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BarnyardNumber\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"barycentric mass flux\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BarycentricMassFlux\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BarycentricMassFlux\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"baryon count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BaryonCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BaryonCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"baseband bandwidth\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BasebandBandwidth\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"BasebandBandwidth\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"base pair count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BasePairCount\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BasePairCount\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"base radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BaseRadius\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BaseRadius\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"basic luminance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BasicLuminance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BasicLuminance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"basic radiance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BasicRadiance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BasicRadiance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"basis weight\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BasisWeight\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BasisWeight\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"batch count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BatchCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BatchCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Batchelor number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BatchelorNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"BatchelorNumber\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"battery capacity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BatteryCapacity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"BatteryCapacity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"battery capacity power\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryCapacityPower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BatteryCapacityPower\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"battery current capacity mass density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryCurrentCapacityMassDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BatteryCurrentCapacityMassDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"battery energy capacity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryEnergyCapacity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BatteryEnergyCapacity\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"battery energy capacity mass density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryEnergyCapacityMassDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BatteryEnergyCapacityMassDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"battery energy capacity volume density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryEnergyCapacityVolumeDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BatteryEnergyCapacityVolumeDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"battery energy self\[Hyphen]discharge rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{
              "\"PhysicalQuantity\"", ",", 
               "\"BatteryEnergySelfDischargeRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BatteryEnergySelfDischargeRate\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"battery power capacity mass density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BatteryPowerCapacityMassDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BatteryPowerCapacityMassDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"Beale number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BealeNumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BealeNumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"beam candle power\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BeamCandlePower\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"BeamCandlePower\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"beam emittance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BeamEmittance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BeamEmittance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"beam jitter\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BeamJitter\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BeamJitter\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bean count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BeanCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BeanCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"bearing\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Bearing\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Bearing\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"beat count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BeatCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BeatCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"beat frequency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BeatFrequency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BeatFrequency\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"beat rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BeatRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"BeatRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Bejan number for entropy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BejanNumberEntropy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BejanNumberEntropy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Bejan number for heat transfer\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BejanNumberHeatTransfer\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BejanNumberHeatTransfer\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Bejan number for mass transfer\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"BejanNumberMassTransfer\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BejanNumberMassTransfer\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Bejan number for pressume\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"BejanNumberPressure\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BejanNumberPressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"2519"}, "OutputSizeLimit`Skeleton"], ",", 
         TemplateBox[{"\"tonnage number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TonnageNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TonnageNumber\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"topogivity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Topogivity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Topogivity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"flashlight power\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TorchPower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TorchPower\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"torque\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Torque\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Torque\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"torque gradient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TorqueGradient\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TorqueGradient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"torsional constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TorsionalConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TorsionalConstant\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"torsional rigidity (force times area per angle)\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TorsionalRigidityForceTimesArea\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TorsionalRigidityForceTimesArea\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"torsion coefficient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TorsionCoefficient\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TorsionCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tortilla count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TortillaCount\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TortillaCount\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"tortuosity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Tortuosity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Tortuosity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total angular momentum\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalAngularMomentum\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalAngularMomentum\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total angular momentum quantum number\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalAngularMomentumQuantumNumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalAngularMomentumQuantumNumber\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"total current\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalCurrent\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalCurrent\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total current density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalCurrentDensity\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalCurrentDensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total electron content\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalElectronContent\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalElectronContent\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total floor area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalFloorArea\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalFloorArea\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total isospin\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalIsospin\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalIsospin\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total absorption coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalLinearAbsorptionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalLinearAbsorptionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"total linear attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalLinearAttenuationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalLinearAttenuationCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"total magnitude m_1\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalMagnitudeM1\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalMagnitudeM1\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total magnitude slope parameter K_1\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalMagnitudeSlopeParameterK1\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalMagnitudeSlopeParameterK1\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"total pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalPressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total proper motion\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalProperMotion\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalProperMotion\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total radioactive activity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalRadioactiveActivity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalRadioactiveActivity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total radio brightness\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalRadioBrightness\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalRadioBrightness\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total scattering coefficient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{
              "\"PhysicalQuantity\"", ",", "\"TotalScatteringCoefficient\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalScatteringCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"total scattering cross section\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalScatteringCrossSection\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalScatteringCrossSection\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"total surface area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalSurfaceArea\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalSurfaceArea\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total term\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalTerm\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalTerm\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total vascular resistance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TotalVascularResistance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TotalVascularResistance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"total weight\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalWeight\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalWeight\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"toughness modulus\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ToughnessModulus\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ToughnessModulus\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"first Townsend coefficient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TownsendCoefficient\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TownsendCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"track gauge\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrackGauge\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrackGauge\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"transconductance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Transconductance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"Transconductance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"transformer area product\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransformerAreaProduct\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerAreaProduct\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         
         TemplateBox[{"\"transformer core geometry coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransformerCoreGeometryCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerCoreGeometryCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"inductance factor\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransformerFluxLinkage\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerFluxLinkage\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         
         TemplateBox[{"\"transformer sensitivity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransformerSensitivity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerSensitivity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         
         TemplateBox[{"\"transformer specific weight\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransformerSpecificWeight\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerSpecificWeight\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"transformer VA density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransformerVADensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransformerVADensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"translational damping coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TranslationalDampingCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TranslationalDampingCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"transmission coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TransmissionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransmissionCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"transmission rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TransmissionRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransmissionRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"transmittance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Transmittance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"Transmittance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"transpiration rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TranspirationRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TranspirationRate\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"transportation cost\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TransportationCost\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TransportationCost\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true airspeed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAirspeed\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAirspeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true altitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAltitude\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAltitude\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true angle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAngle\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAngle\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true anomaly\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAnomaly\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAnomaly\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true bearing\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueBearing\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueBearing\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true distance modulus\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueDistanceModulus\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TrueDistanceModulus\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true strain\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueStrain\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueStrain\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"true vapor pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueVaporPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueVaporPressure\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"turbulent kinetic energy dissipation rate per mass\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TurbulentKineticEnergyDissipationRatePerMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TurbulentKineticEnergyDissipationRatePerMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"turn count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TurnCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TurnCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"turnover frequency\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TurnoverFrequency\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TurnoverFrequency\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"enzymology turnover number\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TurnoverNumberEnzymology\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TurnoverNumberEnzymology\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"twistability\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Twistability\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Twistability\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"twist angle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TwistAngle\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"TwistAngle\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"twist\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TwistAngularVelocity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TwistAngularVelocity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"two\[Hyphen]photon absorption coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TwoPhotonAbsorptionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TwoPhotonAbsorptionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"two\[Hyphen]photon absorption cross section\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TwoPhotonAbsorptionCrossSection\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TwoPhotonAbsorptionCrossSection\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{
          "\"two\[Hyphen]photon absorption/emission coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"TwoPhotonAbsorptionEmissionCrossSection\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TwoPhotonAbsorptionEmissionCrossSection\\\"]\"", "\"physical quantity\""},
           "Entity"], ",", 
         TemplateBox[{"\"type of substance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TypeOfSubstance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TypeOfSubstance\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"typographic length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"TypographicLength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TypographicLength\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"ultimate tensile strength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UltimateTensileStrength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UltimateTensileStrength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Ungel point temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UngelPointTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"UngelPointTemperature\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"uniaxial compression\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"UniaxialCompression\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UniaxialCompression\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"universal spectral irradiance (with respect to wavelength)\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UniversalSpectralIrradianceWithRespectToWavelength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UniversalSpectralIrradianceWithRespectToWavelength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"unnotched Izod impact strength\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UnnotchedIzodImpactStrength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UnnotchedIzodImpactStrength\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"Unruh temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"UnruhTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UnruhTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"upper critical magnetic flux density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UpperCriticalMagneticFluxDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UpperCriticalMagneticFluxDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"uptime\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Uptime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Uptime\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"uptime rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"UptimeRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"UptimeRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"upward irradiance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"UpwardIrradiance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UpwardIrradiance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"upward scalar irradiance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UpwardScalarIrradiance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UpwardScalarIrradiance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         
         TemplateBox[{"\"upward vector irradiance\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"UpwardVectorIrradiance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UpwardVectorIrradiance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         
         TemplateBox[{"\"vacuum energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VacuumEnergy\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"VacuumEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vacuum energy density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VacuumEnergyDensity\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VacuumEnergyDensity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vacuum pump leakage rate\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VacuumPumpLeakageRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VacuumPumpLeakageRate\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Valensi number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ValensiNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ValensiNumber\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"van der Waals constant a\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VanDerWaalsConstantA\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VanDerWaalsConstantA\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"van der Waals constant b\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VanDerWaalsConstantB\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VanDerWaalsConstantB\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"van der Waals radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VanDerWaalsRadius\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VanDerWaalsRadius\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"van 't Hoff factor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VantHoffFactor\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VantHoffFactor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vapor permeability\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporPermeability\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VaporPermeability\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vapor permeance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporPermeance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VaporPermeance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vapor pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VaporPressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vapor resistance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporResistance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VaporResistance\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vapor resistivity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporResistivity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VaporResistivity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vascular resistance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VascularResistance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VascularResistance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vector irradiance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VectorIrradiance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VectorIrradiance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vehicle acceleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VehicleAcceleration\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VehicleAcceleration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vehicle deceleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VehicleDeceleration\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VehicleDeceleration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vehicle distance traveled\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VehicleDistanceTraveled\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VehicleDistanceTraveled\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"velocity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Velocity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Velocity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"velocity distribution function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VelocityDistributionFunction\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VelocityDistributionFunction\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"Verdet constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VerdetConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VerdetConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Verdet constant (for the magnetic field)\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VerdetConstantInH\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VerdetConstantInH\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vergence\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Vergence\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Vergence\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vibrational constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VibrationalConstant\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VibrationalConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vibrational energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VibrationalEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VibrationalEnergy\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vibrational term\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VibrationalTerm\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VibrationalTerm\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vibration strain gauge factor\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VibrationStrainGaugeFactor\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VibrationStrainGaugeFactor\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"virtual work\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VirtualWork\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VirtualWork\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"virus count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VirusCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VirusCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"virus deposition rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VirusDepositionRate\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VirusDepositionRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"viscous characteristic length\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ViscousCharacteristicLength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ViscousCharacteristicLength\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"viscous damping coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ViscousDampingCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ViscousDampingCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"viscous drag torque\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ViscousDragTorque\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ViscousDragTorque\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"viscous force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ViscousForce\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"ViscousForce\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"visit count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VisitCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VisitCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"visit rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VisitRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VisitRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"visual distance modulus\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VisualDistanceModulus\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VisualDistanceModulus\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"visual geometric albedo\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VisualGeometricAlbedo\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VisualGeometricAlbedo\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"void ratio\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VoidRatio\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VoidRatio\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"voltage\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Voltage\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Voltage\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"voltage phasor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VoltagePhasor\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VoltagePhasor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"voltage responsivity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VoltageResponsivity\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VoltageResponsivity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"voltage to frequency ratio\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VoltageToFrequencyRatio\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VoltageToFrequencyRatio\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"voltmeter impedance change\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VoltmeterImpedanceChange\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VoltmeterImpedanceChange\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"voltmeter rating\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VoltMeterRating\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VoltMeterRating\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"voltmeter resistance change\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VoltmeterResistanceChange\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VoltmeterResistanceChange\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"volume\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Volume\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Volume\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume change per temperature difference\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeChangePerTemperatureDifference\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeChangePerTemperatureDifference\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volume change rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeChangeRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeChangeRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume cross section\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeCrossSection\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeCrossSection\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume density rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeDensityRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeDensityRate\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume erosion rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeErosionRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeErosionRate\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume flow per person\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeFlowPerPerson\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeFlowPerPerson\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume flow rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeFlowRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeFlowRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume flow rate per time\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeFlowRatePerTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeFlowRatePerTime\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume fraction\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeFraction\""}], 
             "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeFraction\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume gain rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeGainRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeGainRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume gradient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeGradient\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeGradient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume growth rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeGrowthRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeGrowthRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume loss rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeLossRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeLossRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume per money\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumePerMoney\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumePerMoney\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume per person\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumePerPerson\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumePerPerson\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume per volume\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumePerVolume\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumePerVolume\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume ratio\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeRatio\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeRatio\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume scattering coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeScatteringCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeScatteringCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"volume scattering emission coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeScatteringEmissionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeScatteringEmissionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volume scattering function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeScatteringFunction\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeScatteringFunction\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"normalized volume scattering function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeScatteringFunctionNormalized\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeScatteringFunctionNormalized\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volume scattering phase function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeScatteringPhaseFunction\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeScatteringPhaseFunction\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volume scattering reflection function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeScatteringReflectionFunction\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeScatteringReflectionFunction\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volume scattering source function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeScatteringSourceFunction\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeScatteringSourceFunction\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volume scattering transmission function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeScatteringTransmissionFunction\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeScatteringTransmissionFunction\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volume spread rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeSpreadRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeSpreadRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume synthesis rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeSynthesisRate\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeSynthesisRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeTime\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumetric airflow\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumetricAirflow\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumetricAirflow\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumetric flux\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumetricFlux\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricFlux\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumetric heat capacity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumetricHeatCapacity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricHeatCapacity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         
         TemplateBox[{"\"volumetric radioactive activity density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumetricRadioactiveActivityDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricRadioactiveActivityDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volumetric radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumetricRadius\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricRadius\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumetric thermal expansion coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumetricThermalExpansionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricThermalExpansionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volumic total cross section\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumicTotalCrossSection\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumicTotalCrossSection\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vorticity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Vorticity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Vorticity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vorticity advection\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VorticityAdvection\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VorticityAdvection\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wafer count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaferCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaferCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wafer rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaferRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaferRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"waffle count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaffleCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaffleCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"longitudinal wake field\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WakeFieldLongitudinal\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WakeFieldLongitudinal\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"longitudinal wake potential\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WakePotentialLongitudinal\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WakePotentialLongitudinal\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"transversal wake potential\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WakePotentialTransversal\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WakePotentialTransversal\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"walking speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WalkingSpeed\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"WalkingSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"warping constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WarpingConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WarpingConstant\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"water energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaterEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaterEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"water number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaterNumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaterNumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"water potential\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaterPotential\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaterPotential\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave amplitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveAmplitude\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveAmplitude\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveAttenuationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveAttenuationCoefficient\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave coherence length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveCoherenceLength\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveCoherenceLength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"1\[Hyphen]dimensional bound state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState1DMomentumRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState1DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"1\[Hyphen]dimensional bound state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState1DPositionRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState1DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"2\[Hyphen]dimensional bound state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState2DMomentumRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState2DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"2\[Hyphen]dimensional bound state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState2DPositionRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState2DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"3\[Hyphen]dimensional bound state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState3DMomentumRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState3DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"3\[Hyphen]dimensional bound state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState3DPositionRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState3DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"4\[Hyphen]dimensional bound state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState4DMomentumRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState4DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"4\[Hyphen]dimensional bound state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState4DPositionRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState4DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"1\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState1DMomentumRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState1DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"1\[Hyphen]dimensional scattering state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState1DPositionRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState1DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"2\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState2DMomentumRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState2DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"2\[Hyphen]dimensional scattering state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState2DPositionRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState2DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"3\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState3DMomentumRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState3DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"3\[Hyphen]dimensional scattering state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState3DPositionRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState3DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"4\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState4DMomentumRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState4DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"4\[Hyphen]dimensional scattering state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState4DPositionRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState4DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wavelength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Wavelength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wavelength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wavelength temperature product\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WavelengthTemperatureProduct\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WavelengthTemperatureProduct\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"wave mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wavenumber\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Wavenumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wavenumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave power\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WavePower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WavePower\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveSpeed\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave vector\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveVector\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveVector\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"weak coupling\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WeakCoupling\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"WeakCoupling\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"weak mixing angle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WeakMixingAngle\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WeakMixingAngle\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wear factor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WearFactor\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WearFactor\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wear rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WearRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WearRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Weber number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WeberNumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WeberNumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wedge count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WedgeCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WedgeCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"weight\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Weight\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Weight\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Weiss constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WeissConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WeissConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Weissenberg number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WeissenbergNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WeissenbergNumber\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wet biomass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WetBiomass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WetBiomass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wet bulb globe temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WetBulbGlobeTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WetBulbGlobeTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wet\[Hyphen]bulb temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WetBulbTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WetBulbTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wet mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WetMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WetMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wetted perimeter\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WettedPerimeter\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WettedPerimeter\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"width\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Width\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Width\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Wiedemann\[Hyphen]Franz law ratio\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WiedemannFranzLawRatio\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WiedemannFranzLawRatio\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         
         TemplateBox[{"\"wilting point\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WiltingPoint\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"WiltingPoint\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wind energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WindEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WindEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"winding count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WindingCount\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"WindingCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wind power\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WindPower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WindPower\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wind speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WindSpeed\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WindSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wing area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WingArea\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WingArea\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wing count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WingCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WingCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wing loading\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WingLoading\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WingLoading\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wingspan\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Wingspan\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wingspan\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"current\[Hyphen]carrying capacity of a wire\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WireCurrentCarryingCapacity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WireCurrentCarryingCapacity\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"Wolfram credit count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WolframCreditCount\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WolframCreditCount\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Womersley number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WomersleyNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WomersleyNumber\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"word correct count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WordCorrectCount\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WordCorrectCount\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"word count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WordCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WordCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"word per page\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WordPerPage\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WordPerPage\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"word rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WordRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WordRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"word size\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WordSize\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WordSize\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Work\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Work\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work function\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkFunction\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorkFunction\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"working tension\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkingTension\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WorkingTension\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"working time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkingTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorkingTime\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work per weight\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkPerWeight\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WorkPerWeight\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work to elastic limit\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkToElasticLimit\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WorkToElasticLimit\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work to maximum load\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkToMaximumLoad\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorkToMaximumLoad\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"world population\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorldPopulation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorldPopulation\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wrap count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WrapCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WrapCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wrap linear density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WrapLinearDensity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WrapLinearDensity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"X\[Hyphen]ray brilliance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"XRayBrilliance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"XRayBrilliance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"X\[Hyphen]ray detector sensitivity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"XRayDetectorSensitivity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"XRayDetectorSensitivity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yarn yield\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YardYield\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"YardYield\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yarn inverse linear density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"YarnInverseLinearDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"YarnInverseLinearDensity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yarn linear density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YarnLinearDensity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"YarnLinearDensity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yaw\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Yaw\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Yaw\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yield strength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YieldStrength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"YieldStrength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Young modulus\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YoungModulus\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"YoungModulus\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Yukawa coupling\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YukawaCoupling\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"YukawaCoupling\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"zenith angle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ZenithAngle\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ZenithAngle\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"zero\[Hyphen]point energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ZeroPointEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ZeroPointEnergy\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"zeroth\[Hyphen]order rate constant\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ZerothOrderRateConstant\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ZerothOrderRateConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"zoomass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Zoomass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Zoomass\\\"]\"", 
           "\"physical quantity\""}, "Entity"]}], "}"}], Short[#, 5]& ], 
   "line" -> 322, "sessionID" -> 19474773800689378675, "byteCount" -> 485632, 
   "size" -> 5, "stored" -> False, "expr" -> Missing["NotStored"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.8713969599655437`*^9},
 CellLabel->"Out[322]=",
 CellID->394238238,ExpressionUUID->"60868043-0121-4e49-98ce-4963c7157171"]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.871397081405398*^9, 3.8713970832476807`*^9}},
 CellID->343013010,ExpressionUUID->"f52eead2-ef04-4f01-b966-44a86d8ae962"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->871630328,ExpressionUUID->"1ac32f4e-f837-4aca-a636-5f0ac7c6aebc"],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this function.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4b5a1eed-b55e-4585-be79-ea7d6b06cb31"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Contributed By", "ContributorInformation", "TemplateCellGroup"},
 CellID->771147648,ExpressionUUID->"f475dbf1-f04c-4d87-99a3-4fe57736990d"],

Cell["Peter Cullen Burbery", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8641443930752068`*^9, 3.864144395828212*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->855757352,ExpressionUUID->"95798ab7-7411-4a55-9207-5c8b7b2ab44e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the function in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ad6c5e60-8fdc-463a-9e96-f643910cf779"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->854882061,ExpressionUUID->"05ea5a99-4ede-446f-98e9-fa3d1376af7d"],

Cell["Metrology", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.864144398744196*^9, 3.8641444008331947`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->560424104,ExpressionUUID->"49cbb4cc-c3b6-4a3c-8825-200b550dfd7d"],

Cell["Physics", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.864144398744196*^9, 3.864144405490213*^9}},
 CellID->54273157,ExpressionUUID->"caa76d4a-18b7-4668-9840-4becdf5bf26a"],

Cell["Dimensional Analysis", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.864144398744196*^9, 3.864144408659193*^9}},
 CellID->422651889,ExpressionUUID->"822327e0-958f-4a33-a376-a912619dcb4a"],

Cell["Electrical Engineering", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.864144398744196*^9, 3.864144415443201*^9}},
 CellID->746680219,ExpressionUUID->"edac221e-619e-4c43-98f2-0f16a847c115"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Categories", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->193940140,ExpressionUUID->"df8e5370-a4f6-46f9-8bb2-e66c82f1972f"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
            "\"Cloud & Deployment\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "Data Manipulation & Analysis", {
             False, "Data Manipulation & Analysis"}], "\" \"", 
            "\"Data Manipulation & Analysis\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "External Interfaces & Connections"}], 
            "\" \"", "\"External Interfaces & Connections\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geographic Data & Computation"}], 
            "\" \"", "\"Geographic Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
            "\"Graphs & Networks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Images"}], "\" \"", "\"Images\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            False, {False, "Knowledge Representation & Natural Language"}], 
            "\" \"", "\"Knowledge Representation & Natural Language\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
            "\" \"", "\"Notebook Documents & Presentation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Repository Tools"}], "\" \"", 
            "\"Repository Tools\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}],
             "\" \"", "\"Social, Cultural & Linguistic Data\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Strings & Text"}], "\" \"", 
            "\"Strings & Text\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
            "\"System Operation & Setup\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "User Interface Construction"}], 
            "\" \"", "\"User Interface Construction\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Wolfram Physics Project"}], "\" \"", 
            "\"Wolfram Physics Project\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Core Language & Structure"}], "\" \"",
             "\"Core Language & Structure\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "Engineering Data & Computation", {
             False, "Engineering Data & Computation"}], "\" \"", 
            "\"Engineering Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Financial Data & Computation"}], 
            "\" \"", "\"Financial Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geometry"}], "\" \"", "\"Geometry\""},
           
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
            "\" \"", "\"Higher Mathematical Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Just For Fun"}], "\" \"", 
            "\"Just For Fun\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
            "\"Machine Learning\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Programming Utilities"}], "\" \"", 
            "\"Programming Utilities\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "Scientific and Medical Data & Computation", {
             False, "Scientific and Medical Data & Computation"}], "\" \"", 
            "\"Scientific and Medical Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
            "\"Sound & Video\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
            "\" \"", "\"Symbolic & Numeric Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
            "\"Time-Related Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Visualization & Graphics"}], "\" \"", 
            "\"Visualization & Graphics\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxtkN1KxEAMhUFdbUV8ApG5WtiLPkTZH1hwWdn4ArPTtAanmWGSuejbO11FFLxKyDlJvq\
StGliATh7h9pg1Zm3gbv2O7gO7/lpuXkgUnjZWrTlYppi9VQpslqZl6ychgectD8SIiXgwF+\
fSrMNYRl2ssAJHyEo9OWO5MwfsyFn/j7Wg7BVHkbrNGsZScw1UrylETDrB/doqDiERSoE8xrlF+\
qsvyDmeskepth2pPZdssbNe8EeoN+jxtzJfGnwe+e/\
Cxz0rppjwm79ueYJ8FiyveTihhJwcvk0RodpldrPnE5m+ceo="},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->123238472,ExpressionUUID->"5f2b1e49-3657-4437-ba34-c23727269a02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Symbols", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List up to twenty documented, system-level Wolfram Language symbols \
related to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "dba0cf5d-9b1f-430c-ae24-f7849d7d4045"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Symbols"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Symbols", "TemplateCellGroup"},
 CellID->525877127,ExpressionUUID->"26929207-54a0-4bbc-ae42-338047fc6c86"],

Cell["UnitDimensions", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.864160291296893*^9, 3.8641603008728867`*^9}, {
  3.8641603918516984`*^9, 3.864160393750723*^9}},
 CellID->881812054,ExpressionUUID->"39dfb6c7-bbac-493f-a85c-d1e8b1e4f66c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this function.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6bf55596-1d52-4b19-ae2c-e23ac3c6df26"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->869341850,ExpressionUUID->"eafdc35d-cf00-4537-9b97-51f2f504b607"],

Cell["PhysicalQuantityLookup", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8641603977917213`*^9, 3.8641604012577395`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->694609509,ExpressionUUID->"f94136c0-4cf7-4fde-8d3b-657b96a8a757"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source/Reference Citation",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
function and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8489c581-a365-4882-b746-7cd998668581"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Source/Reference Citation", "TemplateCellGroup"},
 CellID->788767010,ExpressionUUID->"119e6920-7583-40a7-a4cd-30a2e4902014"],

Cell["Source, reference or citation information", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->512303561,ExpressionUUID->"5b980e62-8a90-4552-a330-f5b4ccc34f5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "94c6ee9c-cefa-4aa7-9e3d-dd3f8fad23fd"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->341958311,ExpressionUUID->"45652c99-9b62-4c70-8349-b7ea612ee3fe"],

Cell["Link to other related material", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->938599834,ExpressionUUID->"e70d2fdf-57aa-4dd9-8a20-e31ea14368f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tests",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"VerificationTests", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Specify an optional list of tests for verifying that the function \
is working properly in any environment. Tests can be specified as \
Input/Output cell pairs or as symbolic ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "VerificationTest", "SymbolsRefLink", ShowStringCharacters -> 
                 True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/VerificationTest", 
                ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " expressions for including additional options."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoVerificationTests"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a6d5c84a-bb22-4af5-ac29-e1fe0610e560"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "VerificationTests"},
 DefaultNewCellStyle->"Input",
 CellTags->{"TemplateCellGroup", "Tests", "VerificationTests"},
 CellID->187055128,ExpressionUUID->"ded987ca-73ad-45e9-a559-2a952c564217"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyFunction", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input",
 CellTags->"DefaultContent",
 CellLabel->"In[3]:=",
 CellID->770806,ExpressionUUID->"c346b805-2f29-49eb-8abc-d6627d7ab509"],

Cell[BoxData[
 RowBox[{"x", " ", "y"}]], "Output",
 CellTags->"DefaultContent",
 CellLabel->"Out[3]=",
 CellID->759771806,ExpressionUUID->"048dde56-fa94-4eef-9277-3ee3f38deddd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your function to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0d19fa19-fbaa-4ab2-88ef-60e3872770a7"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->465977791,ExpressionUUID->"3dfbf6e9-3b19-4c8b-b58d-7705df0c7231"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "1f004cac-3d14-4d09-a16e-774fb9af2310"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->267876551,ExpressionUUID->"cdf0a76c-5589-4f71-a32d-a2407cdca729"],

Cell["13.0+", "Text",
 CellTags->{"DefaultContent", "ScrapeDefault"},
 CellID->788185540,ExpressionUUID->"2b181257-a9d4-4f0b-bf0d-82d05bf6abe1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your function is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "41157202-b75e-4605-bca5-31193b6491a7"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->752514832,ExpressionUUID->"a9f7cb6a-288e-41bf-a2c9-ab554fbb15c7"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
            "\"Windows\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Unix", {False, "Unix"}], "\" \"", "\"Unix\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", "\"Mac\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxtkMFOwzAMQAW0XSshvoBT7v2IMpg0CVRUg+\
Cati5EpEkUO9ry96SITjvs5tjPfo6bsoYcOGqEog3sAtew2X7j8IPjdEPZsyKGzYcyoz0QFC9yaOET\
snejjqlxzzjTik3XlHVB43RFZScPD/aIBJX47xWnKRe5XKTRYhVcRAqxWMUqL1+\
9deg5wv3Wzk6y6pVWHNuUTA/zBZHSeuk7rWNlzZ/\
3fE8qn0bFsk9RvpOa8FSoHlHjeWW5idVhNkRVE9jOSTDUcLc3jN75xC4GqBoTIfSE6Yi3HZINfsC36\
BDKXTDDwvwCSgZ83w=="},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->410849953,ExpressionUUID->"5835e141-de37-49a5-ab38-c53ff8aaeace"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your function."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "15e02c17-937a-4266-82d2-2680c2ff2ca1"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->789112653,ExpressionUUID->"d99c282f-7c8c-4c38-9682-e17fcb98c20e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebooks"}], "\" \"", 
            "\"Notebooks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
            "\"Cloud Access\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
            "\"Parallel Kernels\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxtkN1qwzAMhffTrAkrZQx6X3Kfh0izBcrGWqK9gOMo1NSxjSWz5e3nbFDC6J2O9B0JnT\
ItIAEeNcLDIbALXMCyOqE8Y9ff0OJdUewke8aB+vs/3d/Rogka+1tKG/G1s99I8Jh/\
WMbW2jPlkF3qq+xzfhReaI16+4beoI6Wp/+\
tq851Xmkbum0pJVJ0reaygPTorUPPI2wqOzjBqlVa8Vij4OAxEsuDY2XN7/b5L5S+\
dopFG6ukFprwMsheUON8MgVkdRgMUVYGtkM8IwtY7w2jdz6y0wXISjNCaAljfqsGyQYv8XN0CGkdjJ\
yYHwZLgq8="},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->346644344,ExpressionUUID->"25f90897-4546-48a1-87ed-37064dfb512f"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your function is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "33709a38-d654-4627-b2ce-773d8fbd4766"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->939592672,ExpressionUUID->"dcb5f734-ebc1-413e-ab88-276993f682fd"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Session", {False, "Session"}], "\" \"", 
            TemplateBox[{
              
              TemplateBox[{
               "\"Session\"", "\"Local or cloud interactive session\""}, 
               "PrettyTooltipTemplate"], 
              "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Script", {False, "Script"}], "\" \"", 
            TemplateBox[{
              
              TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
               "PrettyTooltipTemplate"], "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
            TemplateBox[{
              
              TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
               "PrettyTooltipTemplate"], "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
            TemplateBox[{
              
              TemplateBox[{
               "\"WebEvaluation\"", 
                "\"Cloud evaluation initiated by an HTTP request\""}, 
               "PrettyTooltipTemplate"], 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
            TemplateBox[{
              
              TemplateBox[{
               "\"WebAPI\"", "\"API called through an HTTP request\""}, 
               "PrettyTooltipTemplate"], 
              "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
            TemplateBox[{
              
              TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
               "PrettyTooltipTemplate"], "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
            TemplateBox[{
              
              TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""},
                "PrettyTooltipTemplate"], "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJyVlE2P0zAQhgXabROWLyFxQRwsi2vFb+iWrihaaaNOJM5OMt2YOnawx4X8e+\
y2SdhDETnFnpn4Gc+\
842WygGugTiHMHjy1nhYwX9VY7rHazd3VvXQEc0DnpNHw6jsW64NQXlDcJreCyvqbKWAGpZUtwSwEL\
LMNpOCLPVqNKizLGiuvsAqkDWHj+\
nN3z93VNjh2z1yyFb9uzW90wXaTY9MqQRgMMeSYQsrPOXD4xO9NKRQzlpXK+\
IpJTWhFSfKAzPVR7zOLRF1ujCLZ9kcOV5nCfsOfXJvDZ746gnGwhRwkyfBfxYqOCc2+\
5nnGLP706OhiMk/LOSWlF7wvPYd3fIuNIWRFNLEf0XYBODRsCivhp+Zy+HBeMevjjc/\
AxlR4kXgWxjTeSUSx0+HDQq+DeBjV1vjH+r+\
Le5biFPINH2TL4SPPhI3oo9IerayYG70XoKPuJ3L7GeHwdtwwEm7/\
D9Y4WElmTYuWOuAr07RBT4VUkrpRXWt9kNboBnWc8Ic22lyfQZ+sS9aVJFGE1fWdUA4HR/\
oFFf7tic+EUb7RzqVLT6YJlHIBrzdxGNuQ8OmJSJe6CzVxGKgvt+iMtyXmXRu0eOd1GWP+AIfvkvo=\
"},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->188446653,ExpressionUUID->"7286dc6c-7173-42b6-b8f7-8837ea740561"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your function is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "661f4c32-d69c-4214-9334-b7803705784c"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->624931977,ExpressionUUID->"c2d5bfcf-dfa1-4365-9020-319a8d47fe61"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[True, {False, True}], "\" \"", 
            "\"Supported in cloud\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNj89KxDAQh1G6moJ48uJt2XsfolYXFoSVzr5Am85iMM2EzAyatzcBV/\
Y2f77ffExvOtiAZI9wd1SJKh3cD59ov3A533Dz7li4OSXFwh0EV75Mz7fcjOqx9Gacvl/\
oBxmedqAxUhJcti5srSdddpe8+UgUMUmG54HWOImbnXeSh0r95Yr9GMVR4Hr/2sPmbXEyzaXa7CfP+\
L9oX9Hj9aa+QF7XwNz2KrQWle3g8RAEU0yFrQZo+5BBZ8ZifRiRSZPFU44IZq/BVuYXjwFjog=="},
 
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->19457789,ExpressionUUID->"065748cf-302f-4d53-9997-4c51e83d51b0"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the function documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "1ce4179e-51af-4174-8515-45a1d96d15aa"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->897529167,ExpressionUUID->"c9caedff-8050-4909-8ebf-8ae494a2b57f"],

Cell["Additional information about limitations, issues, etc.", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->908162033,ExpressionUUID->"31031f50-13f8-4ba7-bbda-c1b62ea36789"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Submission Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter any additional information that you would like to communicate \
to the reviewer here. This section will not be included in the published \
resource.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "29ea7850-1173-43f9-88f1-ed78a4fd1088"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Submission Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Submission Notes", "TemplateCellGroup"},
 CellID->321610809,ExpressionUUID->"c98f3d55-8ac3-4a4b-90bf-1fe2cf3d6a2c"],

Cell["Additional information for the reviewer.", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->711457694,ExpressionUUID->"289aaacc-23f9-4d1d-a548-a7be4f30d34b"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152, Automatic},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.92157, 0.34118, 0.10588], CellTags -> {"MainDockedCell"}, 
   CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         ItemBox[
          TagBox[
           GridBox[{{
              OverlayBox[{
                StyleBox[
                 TagBox[
                  DynamicModuleBox[{Typeset`var$$ = False}, 
                   InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8713964517794417`17.340442636842624*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8713964517794417`17.340442636842624*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{
                    Style[
                    Dynamic[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8713964517794417`17.340442636842624*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    SingleEvaluation -> True, Evaluator -> "System"], 
                    FontSlant -> Italic, FontColor -> GrayLevel[0.5], 
                    FontSize -> 0.9 Inherited], ""}, False]], 
                   DynamicModuleValues -> Automatic], Setting[#, {0}]& ], 
                 ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                 DynamicBox[
                  ToBoxes[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.8713964517794417`17.340442636842624*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   StandardForm], SingleEvaluation -> True, Evaluator -> 
                  "System"], FontSlant -> Italic, FontColor -> GrayLevel[0.5],
                  FontSize -> 0.9 Inherited, StripOnInput -> False]}, 
               Alignment -> {Right, Baseline}], "\"   \"", 
              ItemBox[
              "\"Notebook converted to template version 1.6.4\"", ItemSize -> 
               Scaled[0.75], StripOnInput -> False]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          ItemSize -> Fit, StripOnInput -> False], 
         ItemBox["\"\"", ItemSize -> All, StripOnInput -> False], 
         ItemBox[
          TagBox[
           ButtonBox[
            TagBox[
             PaneSelectorBox[{False -> GraphicsBox[{
                  GrayLevel[
                   NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                  
                  PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                   0.42426406871192845`}, {0.42426406871192845`, 
                   0.282842712474619}}], 
                  
                  PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                   0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                   0.42426406871192845`}}]}, ImageSize -> 18, 
                 PlotRangePadding -> 0, PlotRange -> 0.7, Background -> None],
                True -> GraphicsBox[{
                  GrayLevel[
                   NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                  
                  PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                   0.42426406871192845`}, {0.42426406871192845`, 
                   0.282842712474619}}], 
                  
                  PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                   0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                   0.42426406871192845`}}]}, ImageSize -> 18, 
                 PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                 None]}, 
              Dynamic[
               CurrentValue["MouseOver"]], ImageSize -> Automatic, 
              FrameMargins -> 0], 
             MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
            With[{DefinitionNotebookClient`Stripes`PackagePrivate`nbo$ = 
               EvaluationNotebook[]}, 
              CurrentValue[
               DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                DockedCells] = If[
                TrueQ[
                 MemberQ[
                  CurrentValue["ModifierKeys"], "Control"]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Cell[
                  Blank[], "StripeCell", 
                  BlankNullSequence[]]], 
                DeleteCases[
                 Flatten[{
                   CurrentValue[
                   DefinitionNotebookClient`Stripes`PackagePrivate`nbo$, 
                    DockedCells]}], 
                 Condition[
                  Pattern[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   Blank[Cell]], 
                  Not[
                   FreeQ[
                   DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "177258ee-9c5a-4da5-89dc-d1efb3b4fb2f"]]]]]], Appearance -> 
            None, BoxID -> "177258ee-9c5a-4da5-89dc-d1efb3b4fb2f", Evaluator -> 
            Automatic, Method -> "Preemptive"], 
           MouseAppearanceTag["LinkHand"]], ItemSize -> All, StripOnInput -> 
          False]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]]},
TaggingRules->{"CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWVtT20YUrjEQBhxaMulMkyc98EAyadJpO9NL2iauDcQdIMCa9JW1dGQ0rHeV3RWg\
X9a/17MrydhGciTbTFNPJsja1XfOnut3LH9JPWqJQSgi7u3ehBKUCgT3a2rlJApA+/nLS2qp4+P/\
9Sb38M/K7seIMrW5/QGkWT+KBj2Q0refnbdmB6EDOMGLRiuSErj+QFkE/\
hfq0e4VXlFtnhIaekJc4q7lg0Bp1ejSfj/g/dOIgSKNU1Aiki504xDIcptqimouv+\
cuFGq58icT7qXZlgButwTXcKOPqb7w60UnPwLwFNnJ5JFYaRi0WIBqn7fBD3gwqu757SOOUSp7LG+\
rWj6KGEPFXt5dTAWcQh9VBYma+kE/ktY0w+O+KavUKYRCBVrIOAFMcFQKVLf+\
q6m1PRqwSKJnaurhMXUZ6A5XmjJGvinS0F+\
dxdgzmbXRFWOeWSdaYjz8JQIjr35IQ3uGiLvmSX8lkUyeFBrXKkeVCeuNBIuELNDmNmFCt2qkdk6Wf\
v195MbS63WrPMavIs/KKv/\
cXy6wUp2AkbfeFtfcJoFSv5RFzS7eRxrdCJ5JqHX0NKMuNDGuFgi7YZKuDYzG4CHuxjvBPHQkBiZXf\
5QFPpbBFQKeXyVlYV8CfpPqwRlXaTnIsUa7KjoNQ+DeGb+\
g3GPgtYAxNdUwi5IwxUb4tbKVXITFipcikK0uDPAAGoy4fSmicH5QzN1Gk5krLAdXGNBft3BTX8gA1\
LetC3Ave+IGb2/e3jbSSSNbs982UR6NmLb5zXWOpuTL7BaBJDdzXV26mg0doS674iz08Dqt+\
8VeXgD4mIPreONBlgJr+0z0KDu/MC1t1KLqp7Ji90G/\
CzwPeFKIyqfrHuVu3LoQgQvtgDLRH1WskSomNXZJ7K9YlCm/\
zFOd4uqWXTU9icDHCPDU5FFqAeZlAk+\
wXQzPOy5gBCxrKStdGdnUnrNKVGl22UUWdCkNUd9XVYH3quRYSmUmpY5ZKLPnEVwP7Zlr4yRB1GFVl\
bcjBQfQp27c6XMhk+qU+VotG2/kJ9/rspJycCcSb1oazilmWo1dUqsH+\
KQtjHtV7dYHnZWxcYkLSyVMiQ3UHLAuUgXqPtQtzEak0JY1r5rdnbbJS6ufetDBmt3HSF3rcCss/\
oSR60OtCw6eApeue9mJ1LAz3IHt3Vp7KH5EZk3tVm6DlAseuJQdSxECWsvyuVl1HlE0f4hYSotho6m\
UcAPLvU9Us3Juh6m2JEb144GJobWmJSNdsRg4GyZkk1igQ9DUM/\
NBOoGRtVagkwHkSbLj1Sn4IE10O9nSbXVZjFdGhE6olUxPwxkqGUGXD9Dmd0bPL+zn+\
VucCeYZVqZMEhX4/fNClGqEvhrONAb/YyESDoGXtA/ERYdU4+1nhZhJt8uLg0TYzET+3kROZ/\
YlrVeGz88E9Zmx+OP5vVCB1t+HtFl4/k6hHpPEvjht/ydMfqZqgQDffbJeTVLn1tzOtQz+\
VSHMfVD2YqXHzDMzUX9RiD8fM6+KW5aK/1bOHv8tAZ9Lyc+Idv9ceA7iShpi/ZnMkHl49+\
uS7SqXbc+s6ox0uzPlN/bsx3HMtiicFDuddi8UdpH0ex7nlCTdtbHf2yfeAuUz8R/sZ+etcc9oqyP/\
1LoXgXJ4qqpjqBiVytHC6YHj2i7iOb4UA4c6HK5BOmmHeeEogf8G4Pi4KcIocAY0NkjOtZCIpBy4CT\
F2wHvptIUTi8i5DtSFgdYydmikxQAPizZgseMKjrgaw8/RYwrhboqrgxC39hhk0t/cTg/\
1dHpYy6aH8TlCbaLrk2YjJJVx4TBiHTj5bmz4CqLgfdhDgg6L1CGioG9x+\
xY6tG9AO9zDs2EcDuvRetMalxpasHaEJNB0BOvNVRIPeoKRp8nbn0PKEUyeJ9+Snkce5811pZ/+\
KouXDOV2vNqeXMp9D7QyIujZnSeKiMG4/\
WyabbVsUI30dbWyR5mC4Y6npzAQV7A7CHW8e0ORJGTUV01ufdzMGR2GbTwVmCj3d8A9cd0NNHoiRcl\
98fkvn3IKDA=="]]], "CreationTimestamp" -> 
  3.8641436006161822`17.339628246602267*^9, "DefinitionNotebookFramework" -> 
  "DefinitionNotebookClient", "ResourceCreateNotebook" -> True, 
  "ResourceType" -> "Function", 
  "RuntimeConfiguration" -> {
   "LoadingMethod" -> "Paclet", "PacletName" -> "FunctionResource", 
    "Contexts" -> {
     "FunctionResource`", "FunctionResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Legacy"}, 
  "SubmissionReviewData" -> {
   "Review" -> True, "SubmissionID" -> "5247", "OriginalName" -> 
    "PhysicalQuantityData", "Internal" -> 
    "$0xyd/zPumZ30tWXmmmJoM4EXakZIxTvJcpZ14VrMpgWmhej+k8EFHSf2qFZ0Ze0kJfb+\
7i5w2scBb/0F/yMSSqSnkWb4YnvQ5nDaO0WLCxFGM9K5yhvixExzu4buM0WXjeewKo+bnhcoyNLF+\
X0h+6NjeU9oGk4KQORjrUNGyWPgNwgxyyzwxpJKNlHajYP4IPLd2Fxy73MbMdS74THfKYdOwNw1JN+\
CD14RGOfjPyEGJ/e6QY4/\
ruRC2Tm4OgTnB2ZAfR5LpFaELBUinML0SVj6J98qrwYfUxV1vchQjifkyF7J0ERHPmz/aI+\
GeSg4ighsW1lgxYMYW4ZMJCW3ob9JwrXu/ZtZ7poTy1/mrsrMXt1+\
FhlNDtFddOqUi7nL4r3DBTJrV1xG8UhQfFrdxfEurbK/tL76Rkb41Wqv/lAK/KWkxlLS5MP+/\
g92hvmSPN+\
ZSmhdw4krniqQXBJENseLcNvE7IUYwMAQ3gYBWZuwb6WYem35uJtKpaOBM0XeQ3exdcUEu+\
xWu9RCP7lM73CTmbAs6plRta/apxc1D+\
y5FihtpVrHmurvbSGPt1Xb1XrAzU2qOegdYZtsAV5YfHBBd5cg28zA+hEfhOobOwA5h0h7b/\
6VOcI6YiaBjWDaNlbb+BID+RLEFADqmsCySTvJbkUFQXHovUKWT5kkx93vSfBvK8ONrd0oALcalF/\
CcAQCiXzHVn8r82aIITDqETM/jXBzSF+NVhlkG2/8DFOPRo2y4f2Hgt9r8YEI85/M+6l3dSP/\
IiSfXejHLc3RYlK9vhmnAygFg6psEKgsVx8Vgi34dMNr3TuIrc/\
1uIahlFIoaFWMANkuP1pjjjLh6julr25/vAO2C8WdUF18C/Cjri/\
KW8sdoevbQ1WZ4E9mONxOw9UKt9LqNdIe/\
GGf47NEWBa4ClrS72ETx74q1KvTs2nmqRAKnwCm0kdwM3chY2BKdYv2NCFv6yKvhzLxc4KfAqC1Kam\
H6CdP+dhEpeomALEY3V1NZXMRn4PPbxqPL1baTxnOpBNS3jpTw+WpyZXWAfaFrAoNo1B0KuwVPlk=$\
jU6vasAxCfdmAFTMtnCtaQ=="}, "ToolsOpen" -> True, "UpdatedTimestamp" -> 
  3.8713964478615822`17.340442636403115*^9, "TemplateVersion" -> "1.6.4", 
  "StatusMessage" -> "", "AutoUpdate" -> True},
CreateCellID->True,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.92157, 0.34118, 0.10588], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}], 
   Cell["Hint Styles", "Section"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell["Template Boxes", "Section"], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Subscripted Variable\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert subscripted variable placeholder\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3787878858871814623; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Subscripted Variable"; 
                    DefinitionNotebookClient`SubscriptInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3787878858871814623]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2572781756330727330; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2572781756330727330]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              GrayLevel[0.9]}}, 
          GridBoxFrame -> {
           "Columns" -> False, "RowsIndexed" -> {1 -> GrayLevel[0.9]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.022222], {
                   FaceForm[{
                    RGBColor[0.87451, 0.27843, 0.031373], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{45., 22.5}, {45., 10.074}, {34.926, 0.}, {22.5, 
                    0.}, {10.074, 0.}, {0., 10.074}, {0., 22.5}, {0., 
                    34.926}, {10.074, 45.}, {22.5, 45.}, {34.926, 45.}, {45., 
                    34.926}, {45., 22.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLckSxqe7SdlhmnN3zvPblg4w/smyffOl/K0cEp5e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcLUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzAHLC+HjtHICGz32fruGQC1Zo57BASv+uCpsW
RP9Me4g9YjoQe3gcHICqlx/z1nNgAAEFB4j6Y/oOQMvOfVd2gLhjlgGEz+zg
oBnTf+irhiFEfw/UvDJDiP2+9g7qhhxrZGYZQtS9sHP48vdKxcs2Q4i72u0c
pEHOSTSEuxfsTiFDiPhCWwcXoHd+rzRwWOS67fPfEFuHx0tnH1EoMHDYUJQx
8a2MrUPQDrnW14IGUPfaOnzTAFq0VR8aXrYOoFA6V64HcccvWwfTuF2ePEy6
UPPtHIC+CH68VBvOP70QaNFeLTg/X6j5wKlELYdPl3yTBCLsIP7U0YK49y3U
PR80HQJ6p+cJHbaB88HqZ1jD1QNdUyWSZwWJH2stiHtuWcLdC+ND4lvfwbzT
MeHpBEt4+IPld1lA4p9DH+LuVgu4eeh8sH18hnA+2J6velB3aUHSyxE9iP8U
9aDpBMH3A/rWskQHYt8JBQw+TD0kPpTh5sHSMzgd/0TwYe6B8WHulY1Ksb7f
rwDng+PHSQES31csIPF7UREePgCOg02w
                    "], {{19.051, 14.242}, {19.051, 27.594}, {23.828, 
                    27.594}, {23.828, 26.543}, {21.426, 26.309}, {21.375, 
                    26.258}, {21.375, 24.219}, {21.375, 17.535}, {21.375, 
                    15.602}, {21.426, 15.547}, {23.828, 15.316}, {23.828, 
                    14.242}}, {{24.578, 18.75}, {24.578, 23.078}, {24.578, 
                    23.539}, {24.953, 23.914}, {25.418, 23.91}, {29.746, 
                    23.91}, {30.203, 23.91}, {30.578, 23.539}, {30.578, 
                    23.078}, {30.578, 18.75}, {30.582, 18.289}, {30.207, 
                    17.91}, {29.746, 17.91}, {25.418, 17.91}, {24.953, 
                    17.906}, {24.574, 18.285}, {24.578, 18.75}}, {{31.328, 
                    14.242}, {31.328, 15.316}, {33.684, 15.539}, {33.789, 
                    15.602}, {33.789, 17.641}, {33.789, 24.188}, {33.789, 
                    26.227}, {33.684, 26.281}, {31.328, 26.512}, {31.328, 
                    27.586}, {36.113, 27.586}, {36.113, 14.234}}}]}}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], AspectRatio -> Automatic, Background -> 
                  RGBColor[0.98824, 0.41961, 0.20392], 
                  ImageSize -> {45., 45.}, 
                  PlotRange -> {{0., 45.}, {0., 45.}}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Function Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {2 -> RGBColor[1., 1., 1.]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> RGBColor[1., 1., 1.], 
                 StripOnInput -> False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Function Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> RGBColor[1., 1., 1.], 
               StripOnInput -> False], 
              "https://resources.wolframcloud.com/FunctionRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Open Sample\"", 
                "\"View a completed sample definition notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 4393071033038384034; (
                DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                DefinitionNotebookClient`ViewExampleNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[4393071033038384034]]& , 
              "\"View a completed sample definition notebook\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Style Guidelines\"", 
                "\"View general guidelines for authoring resource \
functions\""}, "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring resource functions\"", 
              False}, "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[0.99412, 0.7098, 0.60196]], "Grid"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Check\"", "\"Check notebook for potential errors\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 7891204313296928191; (
                DefinitionNotebookClient`$ClickedButton = "Check"; 
                DefinitionNotebookClient`CheckDefinitionNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[7891204313296928191]]& , 
              "\"Check notebook for potential errors\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{"\"Preview\"", "\"Generate a preview notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 4299709568580201021; (
                DefinitionNotebookClient`$ClickedButton = "Preview"; 
                DefinitionNotebookClient`PreviewResource[
                  ButtonNotebook[], "Notebook"]), 
               DefinitionNotebookClient`ButtonCodeID[4299709568580201021]]& , 
              "\"Generate a preview notebook\"", True}, 
             "OrangeButtonTemplate"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"For my cloud account\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1389539917011878958; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "For my cloud account"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPrivate"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1389539917011878958]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], 
              "\"In this session only (without documentation)\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8586347731213964380; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only (without documentation)"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8586347731213964380]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your function submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your function submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your function to the Wolfram Function \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your function to the Wolfram Function \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.98824, 0.41961, 0.20392], 
              RGBColor[0.92157, 0.34118, 0.10588]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.98824, 0.41961, 0.20392], 2 -> 
              RGBColor[0.92157, 0.34118, 0.10588]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[0.98824, 0.41961, 0.20392]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.022222], {
                FaceForm[{
                  RGBColor[0.87451, 0.27843, 0.031373], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{45., 22.5}, {45., 10.074}, {34.926, 0.}, {22.5, 
                 0.}, {10.074, 0.}, {0., 10.074}, {0., 22.5}, {0., 34.926}, {
                 10.074, 45.}, {22.5, 45.}, {34.926, 45.}, {45., 34.926}, {
                 45., 22.5}}}]}, {
                FaceForm[{
                  RGBColor[1., 1., 1.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                  2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLckSxqe7SdlhmnN3zvPblg4w/smyffOl/K0cEp5e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcLUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzAHLC+HjtHICGz32fruGQC1Zo57BASv+uCpsW
RP9Me4g9YjoQe3gcHICqlx/z1nNgAAEFB4j6Y/oOQMvOfVd2gLhjlgGEz+zg
oBnTf+irhiFEfw/UvDJDiP2+9g7qhhxrZGYZQtS9sHP48vdKxcs2Q4i72u0c
pEHOSTSEuxfsTiFDiPhCWwcXoHd+rzRwWOS67fPfEFuHx0tnH1EoMHDYUJQx
8a2MrUPQDrnW14IGUPfaOnzTAFq0VR8aXrYOoFA6V64HcccvWwfTuF2ePEy6
UPPtHIC+CH68VBvOP70QaNFeLTg/X6j5wKlELYdPl3yTBCLsIP7U0YK49y3U
PR80HQJ6p+cJHbaB88HqZ1jD1QNdUyWSZwWJH2stiHtuWcLdC+ND4lvfwbzT
MeHpBEt4+IPld1lA4p9DH+LuVgu4eeh8sH18hnA+2J6velB3aUHSyxE9iP8U
9aDpBMH3A/rWskQHYt8JBQw+TD0kPpTh5sHSMzgd/0TwYe6B8WHulY1Ksb7f
rwDng+PHSQES31csIPF7UREePgCOg02w
                  "], {{19.051, 14.242}, {19.051, 27.594}, {23.828, 27.594}, {
                  23.828, 26.543}, {21.426, 26.309}, {21.375, 26.258}, {
                  21.375, 24.219}, {21.375, 17.535}, {21.375, 15.602}, {
                  21.426, 15.547}, {23.828, 15.316}, {23.828, 14.242}}, {{
                  24.578, 18.75}, {24.578, 23.078}, {24.578, 23.539}, {24.953,
                   23.914}, {25.418, 23.91}, {29.746, 23.91}, {30.203, 
                  23.91}, {30.578, 23.539}, {30.578, 23.078}, {30.578, 
                  18.75}, {30.582, 18.289}, {30.207, 17.91}, {29.746, 
                  17.91}, {25.418, 17.91}, {24.953, 17.906}, {24.574, 
                  18.285}, {24.578, 18.75}}, {{31.328, 14.242}, {31.328, 
                  15.316}, {33.684, 15.539}, {33.789, 15.602}, {33.789, 
                  17.641}, {33.789, 24.188}, {33.789, 26.227}, {33.684, 
                  26.281}, {31.328, 26.512}, {31.328, 27.586}, {36.113, 
                  27.586}, {36.113, 14.234}}}]}}, {
              ImageSize -> 12, AspectRatio -> Automatic, Background -> None, 
               ImageSize -> {45., 45.}, PlotRange -> {{0., 45.}, {0., 45.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.95686, 0.80196, 0.75]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4HW4NCUIlyHPAkQfuPPftue4ZskMQUA2UAQoTpQhYVJ3
XXgumzLgQkBZoBo8hjwLFLtuzQJSbIbDELA4UA1QJXZDwqSgJhCBgCrh7kE2
BL8vsPsL1RBgiOHzBQ5/QcIZbggw5ElyBgQBdSEbAoxBMgwB6gLqhaRGIAOY
EsgwBKgLYggQUG4IVVxCxTChSuxQJZ1QJcVSK+9QJxdTqTyhWslGbhmLHxBT
2gMAMUz3Hw==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4HW4NCUIlyF3/cTOOAvtteRZb8ABQUA2UAQoTowhL0Ol
jtrxL9dmw4WAskA1eAy57y++yYgTjwkQBFQDVInVEKD5xJgANwfuHmRD8PsC
q7/QDAGGGEkmQBAknOGGAEOeDEOAupANAcYgGYYAdQH1QlIjkAFMCWQYAtQF
MQQIKDeEKi6hYphQJXaokk6okmKplXeokoupVZ5Qq2Qju4zFD4gp7QFpR8IT

             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4HW4NCUIlyHvKz2/LG7+eWr737fPIAjIBooAxYkx5E2M
0rets/E4GygLVIPHkHclTn+e3gaK/P76+drsrsN5IRudFCEIyAaKAMWBskA1
QJVYDQGaDzHh5amDm9xUl2uzYSKgOFAWYg7cPciGQHwBVINVOzKCmANUj2YI
MMQgvsDlBjT3QPwFCWe4IcCQBzKAviZoAgQBVQLVA3UhGwKMQSADGHpEGgJU
CVQP1AXUC0mNQAYwJQAZwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8oRaJRvZZSx+QExpDwAxBaHa
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.92157, 0.34118, 0.10588], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.92157, 0.34118, 0.10588], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJzNWHlMVEcYf28XlGM5VlcRapRDDFK0sBaLBWVXUDxTKpe4JgvoQlALAsvV
hHIoV4KK6wGiQlUqoqDcKKysDSZtPZJWTTzaxGrV2mqrNtqKB3Qnz8+Zd6Cv
tn90vkgyv+/4zc58M9/3dEtIXZoooSgqw8r8Z2l8tjo9PT43wtE8iUrJSE5K
0a1akKLXJenSAxKkZlD58h9y+X+M8Z7a/I3G7V/lHQgKp2kGmzw9rcrQb+j/
ZItPIGBvNywsVVGVJ01DWAqbpBYUFZ1hGsTYvssRqTLHt4nvoIgvbP6ZjM+I
Nt9PzUePPdbvcvX+ZwzTQ9vv8yMh6R04fFNY0/ciOkM8wzjXY4+F47xJgiPF
cqRuY3kOlnUGLFq4khsv53NPv8zd7NXs/lYsR+158Gm9l1Tu7IYwmq7oJaMd
uWMnR7jMMXLd/isYt7UXx4F9Rjtj1NmNXPPsCKyh6S9+AHzUOHEcpR3gMWM+
iQdHrq1kZFkmidvYQS633399ZBf31G21F/ZdLmmvPo0zVcyalCFg33Qr78Ce
7+qv5jdOm8W3e39u9yN+npR3ieHQ5ArlWGwW28pBIXwfilvFcESnC2eyMoS0
ii8UstncZ2XDjiaROihGjbMcyWVJLBP0N2ELC8vm229icHFPKKo+Y3zK3Jj6
q2lV3gFvZpk4BfSqKHwfFC4fLNDml3cVt2IGO7m+5sRzfoSNxglemGVV8dZT
yRXqaKeJ5V1gkWIALX5bk8r5u+3x3qEbwvuN3kJ1DN9j5mLQdz60skXIeM9X
PoPMnWYzdD4cjoGRMC3XRyI5+CNolyQhJK4A5mWdXGs7Ofs3HP+z9nz16fbf
Scz41Muf67c8B7Q7z6L5RiPMAxZxbfU1OFbDtVDNSGtmnb4qQz/W1F1ElYsc
8rG9A6BF8x1fw2zhSnbddHHHJ115kl3rJNI1mzBL6HI2x9SglrugQzHzG7Ft
RQ95IglF+DfwqylNb2gRugnWMnNteFWLj/+FsNlLyd3tfoTrTPWZV+vUcBnQ
cHbre8HoTzy3ljGYxzT2Cep3MespaibRtZWwGy9vnPmkmXPgjy1fgte7Mxlk
fhwZa/8V+9EQTZuPzwg4HBSA1J4XZqCotB1gExTO58hrYOoYM5RzcCcAHHIn
QKpPD8eBzx12GHP0PAlfjXPI3C8J7JXlSNjt9vuSYVrKkjbwUs4R2quCwxLU
mFJTZpCoaQjXuPqrgPmqhBhs7XH1lTsxmP889su24lOEZuzEyJE7ZJ3Gu23o
Z9bDHvitrb2A0Um+NedwxKO/IGzrKZhn15FnRFHeAdh2zSZuXxscCXtpGorR
kxqpRWx2zxPQsTk8/bgrxe+MaWj9UXw/be11pZih5VduxzPCqu03kiPFALPM
3VyOCV5kv9P3ovJk6rbkipI2du3n39AwLegO3UBzn0CYH3vMfzHUMeyM4Mu6
7Vwfiqr6BrRxBWhO0/suAxK5jm8fpoX7LszAz4bJStAanylcGCwiFbD9V2ja
xk4ZosmNTsc+Xv51F4Xit9yduwJbqaJ0JYEfoT4xaw9YFDaBVuaId93cVb58
MxPLsL/UIlSz2URmft3FGL2tA7YI1UAONF7HOeWnxhb6XULrJFnQsLHz+XDW
x6ooZQjcOD4DKXsvkfnu6i1kYxpaVcw/H/5QRQl7L0lk27HfLJCtp8Rw6EqF
fDe08F+54MjaC0jX8aDpFtglV4jhCAoH+44HzPvdfFuTy63xMGwd5GMpKq8B
fNTRpNZj2vw4RvznkfhoZ7A/fBO9AdzTEhrM70HiNBGj1jJcRY3PJvmSHod+
Ao3Yr2j8HVXeNXMx7Cr7K7HmHOzFZGXWHpytjmPEcXx2kIzWcG15juOYqUHk
dz+S2OwRVmFa3DkhaboljgF1R9wc6R3A/RJIz5PWe1wsNlssB0XFZgllI8Qe
TrOhxcJSPAfqIjabhOLkNYSvFsL3XlqsG67qv264eqcYuv4gI9V/bz+Kptcf
IbETz4ualXP+zf/+WMuWJO08i2J1P0qrYjJTIl2WyXx5NV6PK1C88/bR/7vx
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJzNWG1MU1cY7m1vS4GWttBLy0dLWyhl5aultrT0C2QzM5rMIWgyluDHkMwf
YgBF9gc1cWpijDNuRNFsv2Rmuqmb/NjIYIFkG2qyAYnAljidODfdmItu+AHs
Xi6n59x7D3LH9mPnRJLzvB/Pue95z3nfat3UWLVFKpFImpX0n6qNrRVNTRvb
1mrpRc225tcbttW/tnJbS31DfZN/k4wGS+b/MSb/jxFvt7QX95R86TytXyMh
WEztye1w97v7c97SBAG2tEHIqRpXX/ksnPlnCVIiMTWXz0DMN5rZSGqX4l+u
t+wp+wn1z05Lu7ZCiIYfOjoTnf+MQfd8aFLoiZmRR4FbeEl02tQsnkFpCT/E
+1lsUtViOezHOJYzhZdSVqVt5vvLe0/ldpzk7mbZN2I5vEPAJnjPdlBpnQOJ
4s9Qb2V3SB0Dk9rM7b4xiJNJ4jigjSINiaAV3TO1FjEgSr+PWRjFcRR+AiyS
X0RxqjrnCDtNO1Bcpga5HJp8tud4m/2Yd9g3WvixZxBmqpg96SqBfmDCeXrZ
t6XjzjOaMEbvhfADYZ4UdYvhMLfhcsy8k6sl1+PvQ8EFMRymJnwm6ypRLcse
nI7rc1kC1xshk+sVRmkcn8V2AGvfi1jKy24vxhBvs+71XI4+Zm9M6XhuR5J/
cZaE54CcqoH3IS49eaWlvai74AJkIHWOE9GnQg/FPQl5kMW6zz2QfSh1nTKr
qBto2I8CKXxbbQeF0VYVB27i4828hanrhRYpq4E8dF+WOBcFe8xmZv5OcxhC
9xdiYKexjm9DSP0/AGl6A4NYdoN14SW+NqnjfkPkT++QZzD0G4pFH6u9fDvz
LiD1XGHWxT1gnbKKr+s4AX35rxtqpfHsPrXl7n4o8Y4wlQsditTIIyBl1iVf
gVXaZm7djLfBk3b1cWsdIcs5DFkMr3A5NKHg3RgH7dN5BsmUT9ETse6F34Cp
pkTBedxNkKno2hCrxZG/GIyq4mTKA1hnPJdj+6wVMEiYlzg6PX8mT2UqFlMV
cU/Q0cnuJ/8ciuYcAdGYv3H0SbPnIByuL4BVUoBFjBtQX74xeQrwZmmHZwQ4
5PrYmQ7hGSSS3HeADt0XCTicXWwdY4duOewEAIfCEMu/wYU44LmDCEOOyFTG
VphDdL+EiZU0DkQ7NEks0FIWXgRWuuW4WOV/QDCNqSTJh6Lls7DGlY4DTFuO
YyCTYPVVGFgseQX3Zct6Yy6mxyFSdget0zDa7n52P9wB31rvMERVLs9VxOPP
DOYeAOu8d9Ezor/Qj0TwML+vpapBLOlvb0ElBGlujUzF7iCHQ+Xm7xS+M3RN
/AjeTzLJth8yBH/hdzxSZfBXlMN+NHZfTvI5EvLQfic67eqzH8s+VHiRW/uF
N9RYB2SBm8xaEwTr8EPhi5G6npsRwml/m29Dv4FfA6llNxs+3yhAMrcL9Y11
4L7jGYTZoC6JffmTuHQWy2wEmG+MvvRqXaW5zdSE2Hi9Izj/wbuGV6EWVWN7
U/8S0yc6TsXux1kgJbUw6nRXOf9m2g5Ae4I01Lp60cz3jphaSA3UMNSCHPDf
gDmlrYAajk7cPlEWZsjUmjL9y1SNrhLcOCEDOn3X0HxPdOJ0ymet+4TnIxxU
Dd46fQtXj/tmgekeEMNh24+zLTgvfOWoau8wIwv9HpgAetmHxHDo1wB92nbu
/S67bW7j13gwSI0ila6+XcAmdR0qVRUZN7AzeQWKK9KAfuAW8wbwTws32O9h
pjILojIVrKLRJyoXahH4EUjE/oqGv6OKulNWg6hyfyV6roJYqEscp2C2yilx
HM73UW/+6+ZdckoTQn/3M9PcKlUa62DnNBerCXEMTHfEz5HII9gvxbCp4D0+
Zm4Vy0H3kjtx2Qh8LyShs1UunoPpIly9OD/OroytONx3La1+oar/rJHotB8N
/4F6Kv1Onkz3hx+iWPRp/jm6Y/gX//sjU6U3eK4wvsIPcjvYzCRkph3sLy//
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell["Documentation", "Section"], 
   Cell["Usage", "Subsection"], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell["Details & Options", "Subsection"], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell["Examples", "Subsection"], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell["Links", "Section"], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell["Annotation", "Section"], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell["Special Input", "Section"], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 1053094956087266899; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Function", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[1053094956087266899]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 4898876371082581810; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Function", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[4898876371082581810]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell["Misc", "Section"], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[0.9]]}, Visible -> False, FrontEndVersion -> 
  "13.1 for Microsoft Windows (64-bit) (June 16, 2022)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"c9fbeccf-cfd7-46c3-a7dc-a1f79161a216"
]

Notebook[{

Cell[CellGroupData[{
Cell["SIConstantConvert", "Title",
 Deletable->False,
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8724292359535527`*^9, 3.872429243316589*^9}},
 CellTags->{"Name", "TemplateCell", "Title", "TabNext"},
 CellID->863144461,ExpressionUUID->"36fae3d9-6cc6-4c1b-840c-781439856d30"],

Cell["\<\
convert a unit to the product of the seven defining SI constants raised to \
integer powers\
\>", "Text",
 Deletable->False,
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8724292473747826`*^9, 3.872429263954234*^9}},
 CellTags->{"DefaultContent", "Description", "TabNext", "TemplateCell"},
 CellID->660820806,ExpressionUUID->"6d6bcb8c-f857-43f5-804f-e037280ca8b9"],

Cell[CellGroupData[{

Cell[TextData[{
 "Definition",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Function", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Define your function using the name you gave in the Title line \
above. You can add input cells and extra code to define additional input \
cases or prerequisites. All definitions, including dependencies, will be \
included in the generated resource function.\n\nThis section should be \
evaluated before creating the Examples section below.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoFunction"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e793aba2-bc81-4bf7-aa60-fb06ff264057"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Function"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Definition", "Function", "TemplateCellGroup"},
 CellID->292731158,ExpressionUUID->"0f564e07-3202-44ab-befe-5377f243d0a4"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "SIConstantConvert", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SIConstantConvert", "[", "unit_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "assoc", ",", "canonicalassoc", ",", "canonicalvector", ",", 
      "HYPERFINETRANSITIONFREQUENCYOFCAESIUM", ",", "SPEEDOFLIGHTINVACUUM", 
      ",", "PLANCKCONSTANT", ",", "ELEMENTARYCHARGE", ",", 
      "BOLTZMANNCONSTANT", ",", "AVOGADROCONSTANT", ",", 
      "LUMINOUSEFFICACYMONOCHROMATICRADIATION", ",", "DEFININGCONSTANTS", ",",
       "SIEXACTCONSTANTS", ",", "multipliers", ",", "angleextra"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"assoc", "=", 
      RowBox[{"Association", "[", 
       RowBox[{"Rule", "@@@", 
        RowBox[{"UnitDimensions", "[", "unit", "]"}]}], "]"}]}], ";", 
     RowBox[{"canonicalassoc", "=", 
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{"Association", "[", 
         RowBox[{
          RowBox[{"\"\<TimeUnit\>\"", "\[Rule]", "0"}], ",", 
          RowBox[{"\"\<LengthUnit\>\"", "\[Rule]", "0"}], ",", 
          RowBox[{"\"\<MassUnit\>\"", "\[Rule]", "0"}], ",", 
          RowBox[{"\"\<ElectricCurrentUnit\>\"", "\[Rule]", "0"}], ",", 
          RowBox[{"\"\<TemperatureUnit\>\"", "\[Rule]", "0"}], ",", 
          RowBox[{"\"\<AmountUnit\>\"", "\[Rule]", "0"}], ",", 
          RowBox[{"\"\<LuminousIntensityUnit\>\"", "\[Rule]", "0"}]}], "]"}], 
        ",", "assoc"}], "]"}]}], ";", 
     RowBox[{"canonicalvector", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"canonicalassoc", "[", "\"\<TimeUnit\>\"", "]"}], ",", 
        RowBox[{"canonicalassoc", "[", "\"\<LengthUnit\>\"", "]"}], ",", 
        RowBox[{"canonicalassoc", "[", "\"\<MassUnit\>\"", "]"}], ",", 
        RowBox[{"canonicalassoc", "[", "\"\<ElectricCurrentUnit\>\"", "]"}], 
        ",", 
        RowBox[{"canonicalassoc", "[", "\"\<TemperatureUnit\>\"", "]"}], ",", 
        RowBox[{"canonicalassoc", "[", "\"\<AmountUnit\>\"", "]"}], ",", 
        RowBox[{
        "canonicalassoc", "[", "\"\<LuminousIntensityUnit\>\"", "]"}]}], 
       "}"}]}], ";", 
     RowBox[{"HYPERFINETRANSITIONFREQUENCYOFCAESIUM", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
        ",", "0"}], "}"}]}], ";", 
     RowBox[{"SPEEDOFLIGHTINVACUUM", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", 
        ",", "0"}], "}"}]}], ";", 
     RowBox[{"PLANCKCONSTANT", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "2", ",", "1", ",", "0", ",", "0", ",", "0", 
        ",", "0"}], "}"}]}], ";", 
     RowBox[{"ELEMENTARYCHARGE", "=", 
      RowBox[{"{", 
       RowBox[{
       "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
       "}"}]}], ";", 
     RowBox[{"BOLTZMANNCONSTANT", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2", ",", "1", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", "0"}], "}"}]}], ";", 
     RowBox[{"AVOGADROCONSTANT", "=", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", "0"}], "}"}]}], ";", 
     RowBox[{"LUMINOUSEFFICACYMONOCHROMATICRADIATION", "=", 
      RowBox[{"{", 
       RowBox[{"3", ",", 
        RowBox[{"-", "2"}], ",", 
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}]}],
      ";", 
     RowBox[{"DEFININGCONSTANTS", "=", 
      RowBox[{"{", 
       RowBox[{
       "HYPERFINETRANSITIONFREQUENCYOFCAESIUM", ",", "SPEEDOFLIGHTINVACUUM", 
        ",", "PLANCKCONSTANT", ",", "ELEMENTARYCHARGE", ",", 
        "BOLTZMANNCONSTANT", ",", "AVOGADROCONSTANT", ",", 
        "LUMINOUSEFFICACYMONOCHROMATICRADIATION"}], "}"}]}], ";", 
     RowBox[{"SIEXACTCONSTANTS", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "Quantity", "[", "\"\<Cesium133HyperfineSplittingFrequency\>\"", 
         "]"}], ",", 
        RowBox[{"Quantity", "[", "\"\<SpeedOfLight\>\"", "]"}], ",", 
        RowBox[{"Quantity", "[", "\"\<PlanckConstant\>\"", "]"}], ",", 
        RowBox[{"Quantity", "[", "\"\<ElementaryCharge\>\"", "]"}], ",", 
        RowBox[{"Quantity", "[", "\"\<BoltzmannConstant\>\"", "]"}], ",", 
        RowBox[{"Quantity", "[", "\"\<AvogadroConstant\>\"", "]"}], ",", 
        RowBox[{
        "Quantity", "[", 
         "\"\<MonochromaticRadiation540THzLuminousEfficacy\>\"", "]"}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"multipliers", "=", 
      RowBox[{"Power", "@@@", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"SIEXACTCONSTANTS", ",", 
          RowBox[{"LinearSolve", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", "DEFININGCONSTANTS", "]"}], ",", 
            "canonicalvector"}], "]"}]}], "}"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"angleextra", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"UnitDimensions", "[", 
         RowBox[{"UnitSimplify", "[", 
          RowBox[{
           RowBox[{"unit", "/", 
            RowBox[{
            "Quantity", "[", 
             "\"\<MonochromaticRadiation540THzLuminousEfficacy\>\"", "]"}]}], 
           ",", 
           RowBox[{"UnityDimensions", "->", 
            RowBox[{"{", 
             RowBox[{
             "\"\<TimeUnit\>\"", ",", "\"\<LengthUnit\>\"", ",", 
              "\"\<MassUnit\>\"", ",", "\"\<ElectricCurrentUnit\>\"", ",", 
              "\"\<TemperatureUnit\>\"", ",", "\"\<AmountUnit\>\"", ",", 
              "\"\<LuminousIntensityUnit\>\""}], "}"}]}]}], "]"}], "]"}], 
        ")"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<AngleUnit\>\"", ",", "x_"}], "}"}], ":>", 
         RowBox[{"Quantity", "[", 
          SuperscriptBox["\"\<Radians\>\"", "x"], "]"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", "multipliers", ";", "\[IndentingNewLine]", 
     "angleextra", ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"canonicalassoc", "[", "\"\<LuminousIntensityUnit\>\"", "]"}],
         "!=", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"UnitConvert", "[", 
        RowBox[{"unit", ",", 
         RowBox[{"Times", "@@", 
          RowBox[{"Join", "[", 
           RowBox[{"multipliers", ",", "angleextra"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"Times", "@@", "multipliers"}]}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8724292729428825`*^9, 3.872429301692108*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[369]:=",
 CellID->876320555,ExpressionUUID->"1e1c76c2-ebf9-41b5-ba25-8b2329b93e8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Documentation", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Documentation"},
 CellTags->{"Documentation", "TemplateSection"},
 CellID->337507785,ExpressionUUID->"70ee6321-d2bc-4137-8d07-0a91f02f7430"],

Cell[CellGroupData[{

Cell[TextData[{
 "Usage",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Usage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Document input usage cases by first typing an input structure, \
then pressing ", 
           Cell[
            BoxData[
             StyleBox[
              DynamicBox[
               ToBoxes[
                
                If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                 "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
               Evaluator -> "System"], ShowStringCharacters -> False]]], 
           " to add a brief explanation of the function\[CloseCurlyQuote]s \
behavior for that structure. Pressing ", 
           Cell[
            BoxData[
             StyleBox[
              DynamicBox[
               ToBoxes[
                
                If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                 "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
               Evaluator -> "System"], ShowStringCharacters -> False]]], 
           " repeatedly will create new cases as needed. Every input usage \
case defined above should be demonstrated explicitly here.\n\nSee existing \
documentation pages for examples."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoUsage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "fa2a47b0-6f71-45c6-9689-0b83f157a8c5"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Usage"},
 DefaultNewCellStyle->{"UsageInputs", FontFamily -> "Source Sans Pro"},
 CellTags->{"TemplateCellGroup", "Usage"},
 CellID->38054786,ExpressionUUID->"0d382741-8b0d-4590-b0e5-d97cba6ea6b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIConstantConvert", "[", 
  StyleBox["unit", "TI"], "]"}]], "UsageInputs",
 CellChangeTimes->{{3.872429306820253*^9, 3.8724293229999247`*^9}},
 FontFamily->"Source Sans Pro",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->67839508,ExpressionUUID->"c9e26b15-975a-4321-902e-c76ed515bba5"],

Cell[TextData[{
 "converts ",
 Cell[BoxData[
  StyleBox["unit", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "a736b800-2d91-436b-883d-664c458e70f6"],
 " to the product of the defining constants of the SI raised to integer powers"
}], "UsageDescription",
 CellChangeTimes->{{3.872429326511551*^9, 3.872429353770989*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->746063541,ExpressionUUID->"ca9dc525-cee9-4f4c-b638-5363ba317f33"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Options",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a detailed explanation of how the function is used and \
configured (e.g. acceptable input types, result formats, options \
specifications, background information). This section may include multiple \
cells, bullet lists, tables, hyperlinks and additional styles/structures as \
needed.\n\nAdd any other information that may be relevant, such as when the \
function was first discovered or how and why it is used within a given field. \
Include all relevant background or contextual information related to the \
function, its development, and its usage.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "46eba63a-2657-4f24-81bd-83aac73ba1a7"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Notes"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details & Options", "Notes", "TemplateCellGroup"},
 CellID->447261062,ExpressionUUID->"db9a6c21-80ff-4c5e-91fa-faef94e78617"],

Cell["\<\
There is an issue with candela and related units for luminous intensity like \
candlepower.\
\>", "Notes",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8724293571400647`*^9, 3.8724293749455214`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->422531486,ExpressionUUID->"8cf46e0e-b798-4f06-a765-4213dfa20e06"],

Cell[TextData[{
 "The identity ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"1", " ", "cd"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      FractionBox[
       SubscriptBox["K", "cd"], "683"], ")"}], "kg", " ", 
     SuperscriptBox[
      StyleBox["m",
       FontSlant->"Plain"], "2"], 
     SuperscriptBox[
      StyleBox["s",
       FontSlant->"Plain"], 
      RowBox[{"-", "3"}]], 
     SuperscriptBox["sr", 
      RowBox[{"-", "1"}]]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2090d271-6b8b-4eb5-86ce-9183d90febd5"],
 " does not work in Mathematica."
}], "Notes",
 CellChangeTimes->{{3.8724293759255*^9, 3.872429446462401*^9}},
 CellID->169198734,ExpressionUUID->"af768fea-7d85-4fee-b36a-43e8df80f186"],

Cell[TextData[{
 "The test ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Quantity", "[", 
    RowBox[{"1", ",", "\"\<Candelas\>\""}], "]"}], "===", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "683"], 
      RowBox[{"Quantity", "[", 
       RowBox[{
       "1", ",", "\"\<MonochromaticRadiation540THzLuminousEfficacy\>\""}], 
       "]"}]}], ")"}], 
    RowBox[{"Quantity", "[", 
     RowBox[{"1", ",", "\"\<Kilograms\>\""}], "]"}], 
    SuperscriptBox[
     RowBox[{"Quantity", "[", 
      RowBox[{"1", ",", "\"\<Meters\>\""}], "]"}], "2"], 
    SuperscriptBox[
     RowBox[{"Quantity", "[", 
      RowBox[{"1", ",", "\"\<Seconds\>\""}], "]"}], 
     RowBox[{"-", "3"}]], " ", 
    SuperscriptBox[
     RowBox[{"Quantity", "[", 
      RowBox[{"1", ",", "\"\<Steradians\>\""}], "]"}], 
     RowBox[{"-", "1"}]]}]}]], "Input",
  CellChangeTimes->{{3.8724294543134084`*^9, 3.872429514209593*^9}},
  ExpressionUUID->"61d67953-9956-48ff-9fb1-569f989f9899"],
 "returns false."
}], "Notes",
 CellChangeTimes->{{3.872429449061396*^9, 3.8724294505765595`*^9}, {
  3.872429546759057*^9, 3.8724295589405355`*^9}},
 CellID->219445160,ExpressionUUID->"e44dbece-38fd-4177-b278-3d8183300d03"],

Cell["\<\
Hopefully this inconsistency will be updated in future releases of \
Mathematica.\
\>", "Notes",
 CellChangeTimes->{{3.8724295674156632`*^9, 3.8724295808255463`*^9}},
 CellID->19420346,ExpressionUUID->"beea3b36-f7ce-4e6f-957b-a0c7550c1184"],

Cell[TextData[{
 "The details are available at NIST's ",
 ButtonBox["SI Brochure",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.330-\
2019.pdf"], None},
  ButtonNote->
   "https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.330-2019.\
pdf"],
 "."
}], "Notes",
 CellChangeTimes->{{3.872429581827856*^9, 3.8724296138403254`*^9}},
 CellID->149893128,ExpressionUUID->"6baa4121-9699-47f2-8593-c0ddad8e908f"],

Cell["\<\
There shouldn't be any issues if you aren't using candelas or angles like \
radians or steradians or other luminous intensity units.\
\>", "Notes",
 CellChangeTimes->{{3.872429629414979*^9, 3.8724296570208726`*^9}},
 CellID->478833960,ExpressionUUID->"829e8937-a25c-4c32-b65c-4d0dd293e736"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Examples", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Demonstrate the function\[CloseCurlyQuote]s usage, starting with \
the most basic use case and describing each example in a preceding text cell.\
\n\nWithin a group, individual examples can be delimited by inserting page \
breaks between them (either using ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"[Right-click]\"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontColor -> GrayLevel[0.28627], 
                 FontSize -> 14, StripOnInput -> False], 
                StyleBox[
                "\" \[FilledRightTriangle] \"", FontFamily -> 
                 "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                 GrayLevel[0.5], StripOnInput -> False], 
                StyleBox[
                "\"Insert Page Break\"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontColor -> GrayLevel[0.28627], 
                 FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
              ShowStringCharacters -> False]]], 
           " between cells or through the menu using ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"Insert\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontColor -> GrayLevel[0.28627], FontSize -> 14, 
                 StripOnInput -> False], 
                StyleBox[
                "\" \[FilledRightTriangle] \"", FontFamily -> 
                 "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                 GrayLevel[0.5], StripOnInput -> False], 
                StyleBox[
                "\"Page Break\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontColor -> GrayLevel[0.28627], FontSize -> 14, 
                 StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
              False]]], 
           ").\n\nExamples should be grouped into Subsection and \
Subsubsection cells similarly to existing documentation pages. Here are some \
typical Subsection names and the types of examples they normally contain:\n  \
", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Basic Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "most basic function usage\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Scope: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
               "RowDefault"], ShowStringCharacters -> False]]], 
           "input and display conventions, standard computational attributes \
(e.g. threading over lists)\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Options: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
               "RowDefault"], ShowStringCharacters -> False]]], 
           "available options and parameters for the function\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Applications: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "standard industry or academic applications\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Properties and Relations: \"", FontFamily -> 
                 "Source Sans Pro", FontWeight -> "SemiBold", FontSize -> 14, 
                 StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
              False]]], "how the function relates to other functions\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Possible Issues: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "limitations or unexpected behavior a user might experience\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Neat Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "particularly interesting, unconventional, or otherwise unique \
usage"}], "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExamples"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "72f3e9b2-4a69-40f8-a0aa-a867f2004a26"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Examples"},
 CellTags->{"Examples", "TemplateCellGroup"},
 CellID->671320372,ExpressionUUID->"45d2c345-b759-4946-a9e5-20e3bb480462"],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 CellTags->"DefaultContent",
 CellID->619504543,ExpressionUUID->"7843d665-5c28-4a3a-a2c5-522a05bee402"],

Cell["\<\
Convert the seven base units to a combination of the SI defining constants:\
\>", "Text",
 CellChangeTimes->{{3.8724296974654016`*^9, 3.872429726137314*^9}},
 CellTags->"DefaultContent",
 CellID->586099280,ExpressionUUID->"75a140b1-de1f-4e01-8d67-c3320dcb8ebd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  TemplateBox[{"\"SI base quantities\"", 
    RowBox[{"EntityClass", "[", 
      RowBox[{"\"PhysicalQuantity\"", ",", "\"SIBase\""}], "]"}], 
    "\"EntityClass[\\\"PhysicalQuantity\\\", \\\"SIBase\\\"]\"", 
    "\"physical quantities\""},
   "EntityClass"], "]"}]], "Input",
 CellChangeTimes->{{3.8724298325316343`*^9, 3.872429833873771*^9}},
 CellLabel->"In[376]:=",
 CellID->42810124,ExpressionUUID->"78e64030-0024-40f9-804c-30965657040c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"EntityClass", "[", 
    RowBox[{"\"\<PhysicalQuantity\>\"", ",", "\"\<SIBase\>\""}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.8724298341688185`*^9},
 CellLabel->"Out[376]//FullForm=",
 CellID->74305559,ExpressionUUID->"da2ac71a-e36b-47a3-8b56-d1186902a34b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SIConstantConvert", "/@", 
  RowBox[{"EntityValue", "[", 
   RowBox[{
    RowBox[{"EntityClass", "[", 
     RowBox[{"\"\<PhysicalQuantity\>\"", ",", "\"\<SIBase\>\""}], "]"}], ",", 
    "\"\<SIBaseUnit\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.872429708700303*^9, 3.8724297463129015`*^9}, {
  3.872429843001976*^9, 3.8724298965167446`*^9}, {3.8724299267616076`*^9, 
  3.872429935806474*^9}},
 CellLabel->"In[388]:=",
 CellID->529782122,ExpressionUUID->"827b94fb-2cd6-4fcb-8ed7-94f7e8d55bb0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"1", 
     RowBox[{
       StyleBox["\"c\"", StripOnInput -> False, FontSlant -> Italic], 
       "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       "\"\[CapitalDelta]\[Nu]\"", 
       SubscriptBox[
        TemplateBox[{"\"(\"", 
          TemplateBox[{
            
            TemplateBox[{"\"\"", "133"}, "Superscript", SyntaxForm -> 
             SuperscriptBox], "\"Cs\""}, "RowDefault"], "\")\""}, 
         "RowDefault"], "\"hfs\""]}], 
     "speed of light per ground state hyperfine splitting frequency of the \
cesium\[Hyphen]133 atom", 
     FractionBox[
     "\"SpeedOfLight\"", "\"Cesium133HyperfineSplittingFrequency\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"\[CapitalDelta]\[Nu]\"", 
       SubscriptBox[
        TemplateBox[{"\"(\"", 
          TemplateBox[{
            
            TemplateBox[{"\"\"", "133"}, "Superscript", SyntaxForm -> 
             SuperscriptBox], "\"Cs\""}, "RowDefault"], "\")\""}, 
         "RowDefault"], "\"hfs\""], "\[ThinSpace]", 
       StyleBox["\"h\"", StripOnInput -> False, FontSlant -> Italic], 
       "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox[
        StyleBox["\"c\"", StripOnInput -> False, FontSlant -> Italic], "2"]}],
      "ground state hyperfine splitting frequency of the cesium\[Hyphen]133 \
atom Planck constant per speed of light squared", 
     FractionBox[
      RowBox[{
       "\"Cesium133HyperfineSplittingFrequency\"", " ", 
        "\"PlanckConstant\""}], 
      SuperscriptBox["\"SpeedOfLight\"", "2"]]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"/\"", "\[InvisibleSpace]", "\"\[CapitalDelta]\[Nu]\"", 
       SubscriptBox[
        TemplateBox[{"\"(\"", 
          TemplateBox[{
            
            TemplateBox[{"\"\"", "133"}, "Superscript", SyntaxForm -> 
             SuperscriptBox], "\"Cs\""}, "RowDefault"], "\")\""}, 
         "RowDefault"], "\"hfs\""]}], 
     "reciprocal ground state hyperfine splitting frequency of the cesium\
\[Hyphen]133 atom", 
     FractionBox["1", "\"Cesium133HyperfineSplittingFrequency\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"\[CapitalDelta]\[Nu]\"", 
       SubscriptBox[
        TemplateBox[{"\"(\"", 
          TemplateBox[{
            
            TemplateBox[{"\"\"", "133"}, "Superscript", SyntaxForm -> 
             SuperscriptBox], "\"Cs\""}, "RowDefault"], "\")\""}, 
         "RowDefault"], "\"hfs\""], "\[ThinSpace]", 
       StyleBox["\"e\"", StripOnInput -> False, FontSlant -> Italic]}], 
     "ground state hyperfine splitting frequency of the cesium\[Hyphen]133 \
atom elementary charge", 
     RowBox[{
      "\"Cesium133HyperfineSplittingFrequency\"", " ", 
       "\"ElementaryCharge\""}]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"\[CapitalDelta]\[Nu]\"", 
       SubscriptBox[
        TemplateBox[{"\"(\"", 
          TemplateBox[{
            
            TemplateBox[{"\"\"", "133"}, "Superscript", SyntaxForm -> 
             SuperscriptBox], "\"Cs\""}, "RowDefault"], "\")\""}, 
         "RowDefault"], "\"hfs\""], "\[ThinSpace]", 
       StyleBox["\"h\"", StripOnInput -> False, FontSlant -> Italic], 
       "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       StyleBox["\"k\"", StripOnInput -> False, FontSlant -> Italic]}], 
     "ground state hyperfine splitting frequency of the cesium\[Hyphen]133 \
atom Planck constant per Boltzmann constant", 
     FractionBox[
      RowBox[{
       "\"Cesium133HyperfineSplittingFrequency\"", " ", 
        "\"PlanckConstant\""}], "\"BoltzmannConstant\""]},
    "Quantity"], ",", 
   TemplateBox[{"1", 
     RowBox[{"\"/\"", "\[InvisibleSpace]", 
       SubscriptBox[
        StyleBox["\"N\"", Italic, StripOnInput -> False], 
        StyleBox["\"A\"", Italic, StripOnInput -> False]]}], 
     "reciprocal Avogadro constant", 
     FractionBox["1", "\"AvogadroConstant\""]},
    "Quantity"], ",", 
   TemplateBox[{
     FractionBox[
     "2000000000000000000000000000000000000000", 
      "76486793830390329632626020921"], 
     RowBox[{
       SuperscriptBox[
        RowBox[{"\"\[CapitalDelta]\[Nu]\"", 
          SubscriptBox[
           TemplateBox[{"\"(\"", 
             TemplateBox[{
               
               TemplateBox[{"\"\"", "133"}, "Superscript", SyntaxForm -> 
                SuperscriptBox], "\"Cs\""}, "RowDefault"], "\")\""}, 
            "RowDefault"], "\"hfs\""]}], "2"], "\[InvisibleSpace]", 
       SubscriptBox[
        StyleBox["\"K\"", Italic, StripOnInput -> False], "\"cd\""], 
       "\[ThinSpace]", 
       StyleBox["\"h\"", Italic, StripOnInput -> False], "\[InvisibleSpace]", 
       "\"/\"", "\[InvisibleSpace]", 
       SuperscriptBox["\"rad\"", "2"]}], 
     "ground state hyperfine splitting frequency of the cesium\[Hyphen]133 \
atom squared luminous efficacy of monochromatic radiation of frequency 540 \
THz Planck constants per radian squared", 
     FractionBox[
      RowBox[{
        SuperscriptBox["\"Cesium133HyperfineSplittingFrequency\"", "2"], " ", 
        "\"MonochromaticRadiation540THzLuminousEfficacy\"", " ", 
        "\"PlanckConstant\""}], 
      SuperscriptBox["\"Radians\"", "2"]]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8724297494719553`*^9, {3.872429852368993*^9, 3.872429896978113*^9}, {
   3.872429928699891*^9, 3.8724299359834766`*^9}},
 CellLabel->"Out[388]=",
 CellID->36235200,ExpressionUUID->"3bb5df5e-394c-4b7c-baa5-591f18c33264"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EntityList", "[", 
  RowBox[{"EntityClass", "[", 
   RowBox[{"\"\<PhysicalQuantity\>\"", ",", "\"\<SIBase\>\""}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8724309791936126`*^9, 3.8724309897701254`*^9}},
 CellLabel->"In[390]:=",
 CellID->43498612,ExpressionUUID->"b2605569-0253-4a74-850f-d219e8adc20a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"length\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Length\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Length\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"mass\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Mass\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Mass\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Time\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Time\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"electric current\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ElectricCurrent\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElectricCurrent\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Temperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Temperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"amount of substance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Amount\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Amount\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"luminous intensity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"LuminousIntensity\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"LuminousIntensity\\\"]\"", 
     "\"physical quantity\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8724309900869465`*^9},
 CellLabel->"Out[390]=",
 CellID->384891755,ExpressionUUID->"86510e4d-0ed7-439a-9516-66759525b3df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{"\"\<PhysicalQuantity\>\"", ",", "\"\<PlaneAngle\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8724310635163546`*^9, 3.8724310864934964`*^9}},
 CellLabel->"In[392]:=",
 CellID->267412925,ExpressionUUID->"8e9251dc-3248-4906-9369-ba50d3bf2353"],

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{"\<\"PhysicalQuantity\"\>", ",", "\<\"PlaneAngle\"\>"}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.8724310707885375`*^9, 3.8724310874195147`*^9}},
 CellLabel->"Out[392]=",
 CellID->589054315,ExpressionUUID->"9df036e3-0f13-43e7-99fd-e9fb2fe69b9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{"\"\<PhysicalQuantity\>\"", ",", "\"\<Angle\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8724310635163546`*^9, 3.8724310924150534`*^9}},
 CellLabel->"In[393]:=",
 CellID->177931260,ExpressionUUID->"ad13b35c-8af9-42ec-8b29-0c47335e49bf"],

Cell[BoxData[
 TemplateBox[{"\"plane angle\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"PhysicalQuantity\"", ",", "\"Angle\""}], "]"}], 
   "\"Entity[\\\"PhysicalQuantity\\\", \\\"Angle\\\"]\"", 
   "\"physical quantity\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.8724310930086164`*^9},
 CellLabel->"Out[393]=",
 CellID->127042503,ExpressionUUID->"bd24c251-d28f-4b9f-9a40-8891832247a0"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Entity", "[", 
   RowBox[{"\"\<PhysicalQuantity\>\"", ",", "\"\<Angle\>\""}], "]"}], "[", 
  "\"\<Dataset\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8724310635163546`*^9, 3.8724310984902678`*^9}},
 CellLabel->"In[394]:=",
 CellID->50117059,ExpressionUUID->"327a1556-1136-4bdb-b22f-3475d15c42f8"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      EntityProperty["PhysicalQuantity", "Abbreviations"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalQuantity", "AlgebraicTypes"] -> {"scalar"}, 
       EntityProperty["PhysicalQuantity", "AlternateNames"] -> {
        "angle", "angular displacement", "angular distance", 
         "angular measure", "angular position"}, 
       EntityProperty["PhysicalQuantity", "BasePhysicalQuantity"] -> 
       Missing["NotAvailable"], 
       EntityProperty["PhysicalQuantity", "CanonicalUnit"] -> 
       Quantity[1, "Radians"], 
       EntityProperty["PhysicalQuantity", "Classes"] -> {}, 
       EntityProperty["PhysicalQuantity", "Dimensions"] -> {{"AngleUnit", 1}},
        EntityProperty["PhysicalQuantity", "EntityClasses"] -> {}, 
       EntityProperty["PhysicalQuantity", "Instances"] -> {
         Entity["PhysicalQuantity", "AltitudeAngle"], 
         Entity["PhysicalQuantity", "AngleOfAttack"], 
         Entity["PhysicalQuantity", "AngleOfDeviation"], 
         Entity["PhysicalQuantity", "AngleOfIncidence"], 
         Entity["PhysicalQuantity", "AngleOfOpticalRotation"], 
         Entity["PhysicalQuantity", "AngleOfReflection"], 
         Entity["PhysicalQuantity", "AngleOfRefraction"], 
         Entity["PhysicalQuantity", "AngleOfVanishingStability"], 
         Entity["PhysicalQuantity", "AngularDiameter"], 
         Entity["PhysicalQuantity", "AngularDisplacement"], 
         Entity["PhysicalQuantity", "AngularRadius"], 
         Entity["PhysicalQuantity", "AngularResolution"], 
         Entity["PhysicalQuantity", "AngleOfRepose"], 
         Entity["PhysicalQuantity", "ArgumentOfPeriapsis"], 
         Entity["PhysicalQuantity", "AxialTilt"], 
         Entity["PhysicalQuantity", "Azimuth"], 
         Entity["PhysicalQuantity", "BraggAngle"], 
         Entity["PhysicalQuantity", "BrewsterAngle"], 
         Entity["PhysicalQuantity", "Colatitude"], 
         Entity["PhysicalQuantity", "CriticalAngle"], 
         Entity["PhysicalQuantity", "Declination"], 
         Entity["PhysicalQuantity", "DiffractionAngle"], 
         Entity["PhysicalQuantity", "EccentricAnomaly"], 
         Entity["PhysicalQuantity", "EinsteinAngle"], 
         Entity["PhysicalQuantity", "FrictionAngle"], 
         Entity["PhysicalQuantity", "GeocentricEclipticLatitude"], 
         Entity["PhysicalQuantity", "GeocentricEclipticLongitude"], 
         Entity["PhysicalQuantity", "Grade"], 
         Entity["PhysicalQuantity", "Heading"], 
         Entity["PhysicalQuantity", "HeliocentricEclipticLatitude"], 
         Entity["PhysicalQuantity", "HeliocentricEclipticLongitude"], 
         Entity["PhysicalQuantity", "HourAngle"], 
         Entity["PhysicalQuantity", "InfinitesimalAngle"], 
         Entity["PhysicalQuantity", "Latitude"], 
         Entity["PhysicalQuantity", "LocalHourAngle"], 
         Entity["PhysicalQuantity", "Longitude"], 
         Entity["PhysicalQuantity", "LongitudeOfTheAscendingNode"], 
         Entity["PhysicalQuantity", "MagneticHeading"], 
         Entity["PhysicalQuantity", "MeanAnomaly"], 
         Entity["PhysicalQuantity", "OpticalAngle"], 
         Entity["PhysicalQuantity", "OrbitalInclination"], 
         Entity["PhysicalQuantity", "PhaseAngle"], 
         Entity["PhysicalQuantity", "PitchAngle"], 
         Entity["PhysicalQuantity", "PolarAngle2D"], 
         Entity["PhysicalQuantity", "RightAscension"], 
         Entity["PhysicalQuantity", "RollAngle"], 
         Entity["PhysicalQuantity", "ScatteringAngle"], 
         Entity["PhysicalQuantity", "SiderealHourAngle"], 
         Entity["PhysicalQuantity", "SolarHourAngle"], 
         Entity["PhysicalQuantity", "SpiralAngle"], 
         Entity["PhysicalQuantity", "Tilt"], 
         Entity["PhysicalQuantity", "TrueAngle"], 
         Entity["PhysicalQuantity", "TrueAnomaly"], 
         Entity["PhysicalQuantity", "TwistAngle"], 
         Entity["PhysicalQuantity", "Yaw"], 
         Entity["PhysicalQuantity", "ZenithAngle"]}, 
       EntityProperty["PhysicalQuantity", "Name"] -> "plane angle", 
       EntityProperty["PhysicalQuantity", "NamedSIUnit"] -> 
       Quantity[1, "Radians"], 
       EntityProperty["PhysicalQuantity", "PhysicalPropertyType"] -> 
       "extensive", EntityProperty["PhysicalQuantity", "QuantityVariable"] -> 
       QuantityVariable["\[Theta]", "Angle"], 
       EntityProperty["PhysicalQuantity", "SIBaseUnit"] -> 
       Quantity[1, "Radians"], EntityProperty["PhysicalQuantity", "SIUnit"] -> 
       Quantity[1, "Radians"], 
       EntityProperty["PhysicalQuantity", "StandardIdentifiers"] -> <|
        "ISO 31/I-1978" -> "1-1.1", "ISO 31-1:1992" -> "1-1", 
         "ISO 80000-3:2006" -> "3-5", "ISO 80000-3:2019" -> "3-5", "Wikidata" -> 
         "Q1357788"|>, 
       EntityProperty["PhysicalQuantity", "StandardSymbols"] -> <|
        "ISO" -> {
          "\[Alpha]", "\[Beta]", "\[Gamma]", "\[CurlyTheta]", "\[CurlyPhi]"}, 
         "Wikidata" -> {"\[Alpha]", "\[Beta]", "\[Gamma]", "\[CurlyPhi]"}, 
         "Wikipedia" -> {
          "\[Alpha]", "\[Beta]", "\[Gamma]", "\[Theta]", "\[Phi]", "a", "b", 
           "c"}|>, EntityProperty["PhysicalQuantity", "Symbols"] -> {
        "a", "b", "c", "\[Alpha]", "\[Beta]", "\[Gamma]", "\[Theta]", 
         "\[CurlyTheta]", "\[Phi]", "\[CurlyPhi]"}|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 18, 
       DirectedInfinity[1], {}], "InitialType" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 18], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`UnknownShape[True], 
         TypeSystem`PackageScope`UnknownShape[False]]], 18, 
       DirectedInfinity[1], {}], "Type" -> 
     TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 18], 
     "Path" -> {}, "DisplayedRowCount" -> 18, "DisplayedColumnCount" -> 1, 
     "DataRowCount" -> 18, "DataColumnCount" -> 1, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["\"abbreviations\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Abbreviations"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Abbreviations"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"algebraic types\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "AlgebraicTypes"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{"scalar"}, ShowStringCharacters -> False], 
                  Style[
                   Style[{"scalar"}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["PhysicalQuantity", "AlgebraicTypes"]]}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "AlgebraicTypes"]]}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"alternate names\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "AlternateNames"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"angle", "angular displacement", "angular distance", 
                    "angular measure", "angular position"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"angle", "angular displacement", "angular distance",
                     "angular measure", "angular position"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["PhysicalQuantity", "AlternateNames"]]}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "AlternateNames"]]}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"base physical quantity\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "PhysicalQuantity", "BasePhysicalQuantity"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "PhysicalQuantity", "BasePhysicalQuantity"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"canonical unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "CanonicalUnit"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"rad\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "CanonicalUnit"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"classes\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Classes"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[{}, ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"dimensions\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Dimensions"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{{"AngleUnit", 1}}, ShowStringCharacters -> False], 
                  Style[
                   Style[{{"AngleUnit", 1}}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["PhysicalQuantity", "Dimensions"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Dimensions"]]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"entity classes\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "EntityClasses"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[{}, ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"instances\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Instances"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 56], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 56], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["PhysicalQuantity", "Instances"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Instances"]]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], 
             BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"name\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Name"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["plane angle", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Name"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"named SI unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "NamedSIUnit"]]}, "Item",
                 False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"rad\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "NamedSIUnit"]]}, "Item",
                 False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"physical property type\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "PhysicalQuantity", "PhysicalPropertyType"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["extensive", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty[
                  "PhysicalQuantity", "PhysicalPropertyType"]]}, "Item", 
                False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"quantity variable\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "QuantityVariable"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 
                 TemplateBox[{"\"\[Theta]\"", "\"Angle\""}, 
                  "QuantityVariable", DisplayFunction -> (TooltipBox[
                    
                    StyleBox[#, FontColor -> GrayLevel[0.4], 
                    ShowStringCharacters -> False], 
                    RowBox[{"Quantity variable:", " plane angle"}], 
                    TooltipStyle -> "TextStyling"]& )], FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "QuantityVariable"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"SI base unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "SIBaseUnit"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"rad\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "SIBaseUnit"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"SI unit\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "SIUnit"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"1", "\"rad\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "SIUnit"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"standard identifiers\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "StandardIdentifiers"]]},
                 "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[<|"ISO 31/I-1978" -> "1-1.1", "ISO 31-1:1992" -> 
                    "1-1", "ISO 80000-3:2006" -> "3-5", "ISO 80000-3:2019" -> 
                    "3-5", "Wikidata" -> "Q1357788"|>, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[<|"ISO 31/I-1978" -> "1-1.1", "ISO 31-1:1992" -> 
                    "1-1", "ISO 80000-3:2006" -> "3-5", "ISO 80000-3:2019" -> 
                    "3-5", "Wikidata" -> "Q1357788"|>, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty[
                    "PhysicalQuantity", "StandardIdentifiers"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "StandardIdentifiers"]]},
                 "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"standard symbols\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "StandardSymbols"]]}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[<|"ISO" -> {
                    "\[Alpha]", "\[Beta]", "\[Gamma]", "\[CurlyTheta]", 
                    "\[CurlyPhi]"}, 
                    "Wikidata" -> {
                    "\[Alpha]", "\[Beta]", "\[Gamma]", "\[CurlyPhi]"}, 
                    "Wikipedia" -> {
                    "\[Alpha]", "\[Beta]", "\[Gamma]", "\[Theta]", "\[Phi]", 
                    "a", "b", "c"}|>, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[<|"ISO" -> {
                    "\[Alpha]", "\[Beta]", "\[Gamma]", "\[CurlyTheta]", 
                    "\[CurlyPhi]"}, 
                    "Wikidata" -> {
                    "\[Alpha]", "\[Beta]", "\[Gamma]", "\[CurlyPhi]"}, 
                    "Wikipedia" -> {
                    "\[Alpha]", "\[Beta]", "\[Gamma]", "\[Theta]", "\[Phi]", 
                    "a", "b", "c"}|>, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["PhysicalQuantity", "StandardSymbols"]]}, 
                   4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "StandardSymbols"]]}, 
                "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"symbols\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Symbols"]]}, "Item", 
                False], "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 10], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 10], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[
                    EntityProperty["PhysicalQuantity", "Symbols"]]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[
                  EntityProperty["PhysicalQuantity", "Symbols"]]}, "Item", 
                False], "Mouse"], ImageMargins -> {{5, 3}, {4, 5}}], 
             BaseStyle -> {
               GrayLevel[0.5]}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{866., {248.63403328722342`, 254.36596671277658`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{866., {248.63403328722342`, 254.36596671277658`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8724311010239673`*^9},
 CellLabel->"Out[394]=",
 CellID->295318888,ExpressionUUID->"ad16c815-37dd-4be6-99c3-1f6cd383ac70"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Entity", "[", 
  RowBox[{"\"\<PhysicalQuantity\>\"", ",", "\"\<Angle\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.872431155037982*^9, 3.872431160370736*^9}},
 CellLabel->"In[395]:=",
 CellID->253142348,ExpressionUUID->"f8586f5a-e004-4774-9662-1bd9ae819594"],

Cell[BoxData[
 TemplateBox[{"\"plane angle\"", 
   RowBox[{"Entity", "[", 
     RowBox[{"\"PhysicalQuantity\"", ",", "\"Angle\""}], "]"}], 
   "\"Entity[\\\"PhysicalQuantity\\\", \\\"Angle\\\"]\"", 
   "\"physical quantity\""},
  "Entity"]], "Output",
 CellChangeTimes->{3.872431160604331*^9},
 CellLabel->"Out[395]=",
 CellID->41792445,ExpressionUUID->"87d19795-8292-443c-b7c4-e5a8b138538c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Entity", "[", 
   RowBox[{"\"\<PhysicalQuantity\>\"", ",", "\"\<Angle\>\""}], "]"}], "[", 
  "\"\<PropertyAssociation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.872431155037982*^9, 3.872431165975423*^9}},
 CellLabel->"In[396]:=",
 CellID->740937179,ExpressionUUID->"16e7015e-acd2-421c-acae-1aa484614a83"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"abbreviations\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Abbreviations\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Abbreviations\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"algebraic types\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AlgebraicTypes\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"AlgebraicTypes\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "\<\"scalar\"\>", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"alternate names\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AlternateNames\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"AlternateNames\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"angle\"\>", ",", "\<\"angular displacement\"\>", 
      ",", "\<\"angular distance\"\>", ",", "\<\"angular measure\"\>", 
      ",", "\<\"angular position\"\>"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"base physical quantity\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"BasePhysicalQuantity\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"BasePhysicalQuantity\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"canonical unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"CanonicalUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"CanonicalUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"rad\"", "radian", "\"Radians\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Classes\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Classes\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"dimensions\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Dimensions\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Dimensions\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"\<\"AngleUnit\"\>", ",", "1"}], "}"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"entity classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"EntityClasses\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"EntityClasses\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"instances\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Instances\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Instances\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"altitude angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AltitudeAngle\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"AltitudeAngle\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"angle of attack\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfAttack\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngleOfAttack\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"angle of deviation\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfDeviation\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfDeviation\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"angle of incidence\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfIncidence\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfIncidence\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"angle of optical rotation\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfOpticalRotation\""}],
           "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfOpticalRotation\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"angle of reflection\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfReflection\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfReflection\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"angle of refraction\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfRefraction\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfRefraction\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"angle of vanishing stability\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"AngleOfVanishingStability\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfVanishingStability\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"angular diameter\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularDiameter\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularDiameter\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"angular displacement\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularDisplacement\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularDisplacement\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"angular radius\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularRadius\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularRadius\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"angular resolution\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularResolution\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularResolution\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"angle of repose\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfRepose\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngleOfRepose\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"argument of periapsis\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ArgumentOfPeriapsis\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ArgumentOfPeriapsis\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"axial tilt\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AxialTilt\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"AxialTilt\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"azimuth\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Azimuth\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Azimuth\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"Bragg angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"BraggAngle\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"BraggAngle\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"Brewster angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"BrewsterAngle\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"BrewsterAngle\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"colatitude\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Colatitude\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Colatitude\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"critical angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CriticalAngle\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"CriticalAngle\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"declination\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Declination\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Declination\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"diffraction angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"DiffractionAngle\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DiffractionAngle\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"eccentric anomaly\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"EccentricAnomaly\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"EccentricAnomaly\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"Einstein angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"EinsteinAngle\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"EinsteinAngle\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"friction angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"FrictionAngle\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"FrictionAngle\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"geocentric ecliptic latitude\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"GeocentricEclipticLatitude\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"GeocentricEclipticLatitude\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"geocentric ecliptic longitude\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"GeocentricEclipticLongitude\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"GeocentricEclipticLongitude\\\
\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"grade\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Grade\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Grade\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"heading\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Heading\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Heading\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"heliocentric ecliptic latitude\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"HeliocentricEclipticLatitude\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"HeliocentricEclipticLatitude\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"heliocentric ecliptic longitude\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"HeliocentricEclipticLongitude\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"HeliocentricEclipticLongitude\
\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"hour angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"HourAngle\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"HourAngle\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"infinitesimal angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"InfinitesimalAngle\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"InfinitesimalAngle\\\
\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"latitude\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Latitude\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Latitude\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"local hour angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"LocalHourAngle\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"LocalHourAngle\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"longitude\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Longitude\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Longitude\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"longitude of the ascending node\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"LongitudeOfTheAscendingNode\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"LongitudeOfTheAscendingNode\\\
\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"magnetic heading\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"MagneticHeading\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"MagneticHeading\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"mean anomaly\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"MeanAnomaly\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"MeanAnomaly\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"optical angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"OpticalAngle\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"OpticalAngle\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"orbital inclination\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"OrbitalInclination\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"OrbitalInclination\\\
\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"phase angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"PhaseAngle\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"PhaseAngle\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"pitch angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"PitchAngle\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"PitchAngle\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"planar polar angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"PolarAngle2D\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"PolarAngle2D\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"right ascension\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"RightAscension\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"RightAscension\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"roll angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"RollAngle\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"RollAngle\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"scattering angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ScatteringAngle\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"ScatteringAngle\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"sidereal hour angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"SiderealHourAngle\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SiderealHourAngle\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"solar hour angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"SolarHourAngle\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"SolarHourAngle\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"spiral angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"SpiralAngle\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"SpiralAngle\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"tilt\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Tilt\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Tilt\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"true angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAngle\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAngle\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"true anomaly\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAnomaly\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAnomaly\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"twist angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"TwistAngle\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"TwistAngle\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"yaw\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"Yaw\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"Yaw\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"zenith angle\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ZenithAngle\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ZenithAngle\\\"]\"", 
        "\"physical quantity\""},
       "Entity"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"name\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Name\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Name\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"plane angle\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"named SI unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"NamedSIUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"NamedSIUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"rad\"", "radian", "\"Radians\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"physical property type\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"PhysicalPropertyType\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"PhysicalPropertyType\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"extensive\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"quantity variable\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"QuantityVariable\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"QuantityVariable\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"\"\[Theta]\"", "\"Angle\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " plane angle"}], TooltipStyle -> 
       "TextStyling"]& )]}], ",", 
   RowBox[{
    TemplateBox[{"\"SI base unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SIBaseUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"SIBaseUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"rad\"", "radian", "\"Radians\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"SI unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SIUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"SIUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"rad\"", "radian", "\"Radians\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"standard identifiers\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"StandardIdentifiers\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"StandardIdentifiers\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"ISO 31/I-1978\"\>", "\[Rule]", "\<\"1-1.1\"\>"}], ",", 
      RowBox[{"\<\"ISO 31-1:1992\"\>", "\[Rule]", "\<\"1-1\"\>"}], ",", 
      RowBox[{"\<\"ISO 80000-3:2006\"\>", "\[Rule]", "\<\"3-5\"\>"}], ",", 
      RowBox[{"\<\"ISO 80000-3:2019\"\>", "\[Rule]", "\<\"3-5\"\>"}], ",", 
      RowBox[{"\<\"Wikidata\"\>", "\[Rule]", "\<\"Q1357788\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"standard symbols\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"StandardSymbols\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"StandardSymbols\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"ISO\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"\[Alpha]\"\>", ",", "\<\"\[Beta]\"\>", 
         ",", "\<\"\[Gamma]\"\>", ",", "\<\"\[CurlyTheta]\"\>", 
         ",", "\<\"\[CurlyPhi]\"\>"}], "}"}]}], ",", 
      RowBox[{"\<\"Wikidata\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"\[Alpha]\"\>", ",", "\<\"\[Beta]\"\>", 
         ",", "\<\"\[Gamma]\"\>", ",", "\<\"\[CurlyPhi]\"\>"}], "}"}]}], ",", 
      RowBox[{"\<\"Wikipedia\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"\[Alpha]\"\>", ",", "\<\"\[Beta]\"\>", 
         ",", "\<\"\[Gamma]\"\>", ",", "\<\"\[Theta]\"\>", 
         ",", "\<\"\[Phi]\"\>", ",", "\<\"a\"\>", ",", "\<\"b\"\>", 
         ",", "\<\"c\"\>"}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"symbols\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Symbols\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Symbols\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"a\"\>", ",", "\<\"b\"\>", ",", "\<\"c\"\>", 
      ",", "\<\"\[Alpha]\"\>", ",", "\<\"\[Beta]\"\>", 
      ",", "\<\"\[Gamma]\"\>", ",", "\<\"\[Theta]\"\>", 
      ",", "\<\"\[CurlyTheta]\"\>", ",", "\<\"\[Phi]\"\>", 
      ",", "\<\"\[CurlyPhi]\"\>"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8724311663110456`*^9},
 CellLabel->"Out[396]=",
 CellID->58223767,ExpressionUUID->"57a049a1-ca21-4129-91a3-45173c565cb4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Entity", "[", 
   RowBox[{"\"\<PhysicalQuantity\>\"", ",", "\"\<SolidAngle\>\""}], "]"}], 
  "[", "\"\<PropertyAssociation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.872431155037982*^9, 3.872431181176437*^9}},
 CellLabel->"In[397]:=",
 CellID->21539606,ExpressionUUID->"c9cfe094-9c91-4d45-ab50-7d36c4b7f4dd"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"abbreviations\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Abbreviations\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Abbreviations\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"algebraic types\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AlgebraicTypes\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"AlgebraicTypes\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"positive real\"\>", ",", "\<\"scalar\"\>"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"alternate names\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AlternateNames\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"AlternateNames\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "\<\"solid angular measure\"\>", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"base physical quantity\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"BasePhysicalQuantity\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"BasePhysicalQuantity\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"canonical unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"CanonicalUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"CanonicalUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"sr\"", "steradian", "\"Steradians\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Classes\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Classes\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"dimensions\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Dimensions\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Dimensions\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"\<\"AngleUnit\"\>", ",", "2"}], "}"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"entity classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"EntityClasses\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"EntityClasses\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"instances\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Instances\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Instances\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     TemplateBox[{"\"infinitesimal solid angle\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"PhysicalQuantity\"", ",", "\"InfinitesimalSolidAngle\""}],
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InfinitesimalSolidAngle\\\"]\"", "\"physical quantity\""},
      "Entity"], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"name\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Name\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Name\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"solid angle\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"named SI unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"NamedSIUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"NamedSIUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"sr\"", "steradian", "\"Steradians\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"physical property type\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"PhysicalPropertyType\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"PhysicalPropertyType\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"extensive\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"quantity variable\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"QuantityVariable\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"QuantityVariable\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"\"\[CapitalOmega]\"", "\"SolidAngle\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " solid angle"}], TooltipStyle -> 
       "TextStyling"]& )]}], ",", 
   RowBox[{
    TemplateBox[{"\"SI base unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SIBaseUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"SIBaseUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{
        SuperscriptBox["\"rad\"", "2"]}], "radian squared", 
      SuperscriptBox["\"Radians\"", "2"]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"SI unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SIUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"SIUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"sr\"", "steradian", "\"Steradians\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"standard identifiers\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"StandardIdentifiers\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"StandardIdentifiers\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"ISO 31/I-1978\"\>", "\[Rule]", "\<\"1-2.1\"\>"}], ",", 
      RowBox[{"\<\"ISO 31-1:1992\"\>", "\[Rule]", "\<\"1-2.1\"\>"}], ",", 
      RowBox[{"\<\"ISO 80000-3:2006\"\>", "\[Rule]", "\<\"3-6\"\>"}], ",", 
      RowBox[{"\<\"ISO 80000-3:2019\"\>", "\[Rule]", "\<\"3-8\"\>"}], ",", 
      RowBox[{"\<\"Wikidata\"\>", "\[Rule]", "\<\"Q208476\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"standard symbols\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"StandardSymbols\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"StandardSymbols\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"ISO\"\>", "\[Rule]", 
       RowBox[{"{", "\<\"\[CapitalOmega]\"\>", "}"}]}], ",", 
      RowBox[{"\<\"Wikidata\"\>", "\[Rule]", 
       RowBox[{"{", "\<\"\[CapitalOmega]\"\>", "}"}]}], ",", 
      RowBox[{"\<\"Wikipedia\"\>", "\[Rule]", 
       RowBox[{"{", "\<\"\[CapitalOmega]\"\>", "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"symbols\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Symbols\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Symbols\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "\<\"\[CapitalOmega]\"\>", "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8724311822463894`*^9},
 CellLabel->"Out[397]=",
 CellID->99673717,ExpressionUUID->"6ba8fbd1-81b2-4f92-a3e1-d7601348bda4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Entity", "[", 
   RowBox[{"\"\<PhysicalQuantity\>\"", ",", "\"\<ElectricCharge\>\""}], "]"}],
   "[", "\"\<PropertyAssociation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.872431155037982*^9, 3.8724311915117693`*^9}},
 CellLabel->"In[398]:=",
 CellID->385246832,ExpressionUUID->"f73bcde7-7aa0-4dfd-8418-3201d8fae39f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"abbreviations\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Abbreviations\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Abbreviations\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"algebraic types\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AlgebraicTypes\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"AlgebraicTypes\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"complex number\"\>", ",", "\<\"scalar\"\>"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"alternate names\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AlternateNames\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"AlternateNames\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"charge\"\>", ",", "\<\"quantity of electricity\"\>"}], 
     "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"base physical quantity\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"BasePhysicalQuantity\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"BasePhysicalQuantity\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"canonical unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"CanonicalUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"CanonicalUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"C\"", "coulomb", "\"Coulombs\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Classes\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Classes\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"dimensions\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Dimensions\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Dimensions\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\<\"ElectricCurrentUnit\"\>", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"TimeUnit\"\>", ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"entity classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"EntityClasses\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"EntityClasses\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"instances\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Instances\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Instances\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"name\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Name\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Name\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"electric charge\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"named SI unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"NamedSIUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"NamedSIUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"None\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"physical property type\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"PhysicalPropertyType\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"PhysicalPropertyType\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"extensive\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"quantity variable\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"QuantityVariable\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"QuantityVariable\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"\"Q\"", "\"ElectricCharge\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " electric charge"}], TooltipStyle -> 
       "TextStyling"]& )]}], ",", 
   RowBox[{
    TemplateBox[{"\"SI base unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SIBaseUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"SIBaseUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{"\"s\"", "\[ThinSpace]", "\"A\""}], "second ampere", 
      RowBox[{"\"Amperes\"", " ", "\"Seconds\""}]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"SI unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SIUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"SIUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"C\"", "coulomb", "\"Coulombs\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"standard identifiers\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"StandardIdentifiers\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"StandardIdentifiers\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"IEC 27-1\"\>", "\[Rule]", "52"}], ",", 
      RowBox[{"\<\"IEC 80000-6:2008\"\>", "\[Rule]", "\<\"6-2\"\>"}], ",", 
      RowBox[{"\<\"ISO 31/V-1979\"\>", "\[Rule]", "\<\"5-2.1\"\>"}], ",", 
      RowBox[{"\<\"Wikidata\"\>", "\[Rule]", "\<\"Q1111\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"standard symbols\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"StandardSymbols\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"StandardSymbols\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"IEC\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"Q\"\>", ",", "\<\"q\"\>"}], "}"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"symbols\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Symbols\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Symbols\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"q\"\>", ",", "\<\"Q\"\>"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8724311927680273`*^9},
 CellLabel->"Out[398]=",
 CellID->281042086,ExpressionUUID->"5e8498d0-2978-4665-b2dd-4b96d06918ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Entity", "[", 
   RowBox[{
   "\"\<PhysicalQuantity\>\"", ",", "\"\<ElectricPotentialDifference\>\""}], 
   "]"}], "[", "\"\<PropertyAssociation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.872431155037982*^9, 3.8724312084481707`*^9}},
 CellLabel->"In[399]:=",
 CellID->307763252,ExpressionUUID->"8fc38ed5-35e6-4376-9678-c44a8ad3921e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"abbreviations\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Abbreviations\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Abbreviations\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"algebraic types\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AlgebraicTypes\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"AlgebraicTypes\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"complex number\"\>", ",", "\<\"scalar\"\>"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"alternate names\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AlternateNames\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"AlternateNames\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "\<\"potential difference\"\>", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"base physical quantity\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"BasePhysicalQuantity\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"BasePhysicalQuantity\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"canonical unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"CanonicalUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"CanonicalUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"V\"", "volt", "\"Volts\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Classes\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Classes\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"dimensions\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Dimensions\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Dimensions\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\<\"ElectricCurrentUnit\"\>", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"LengthUnit\"\>", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"TimeUnit\"\>", ",", 
        RowBox[{"-", "3"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"entity classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"EntityClasses\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"EntityClasses\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"instances\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Instances\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Instances\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"name\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Name\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Name\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"electric potential difference\"\>"}], 
   ",", 
   RowBox[{
    TemplateBox[{"\"named SI unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"NamedSIUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"NamedSIUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"V\"", "volt", "\"Volts\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"physical property type\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"PhysicalPropertyType\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"PhysicalPropertyType\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"intensive\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"quantity variable\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"QuantityVariable\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"QuantityVariable\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{
      SubscriptBox["\"V\"", "\"ab\""], "\"ElectricPotentialDifference\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " electric potential difference"}], 
       TooltipStyle -> "TextStyling"]& )]}], ",", 
   RowBox[{
    TemplateBox[{"\"SI base unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SIBaseUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"SIBaseUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{"\"kg\"", "\[ThinSpace]", 
        SuperscriptBox["\"m\"", "2"], "\[NegativeMediumSpace]", "\"/(\"", 
        "\[InvisibleSpace]", 
        SuperscriptBox["\"s\"", "3"], "\[InvisibleSpace]", "\"A\"", 
        "\[InvisibleSpace]", "\")\""}], 
      "kilogram meter squared per second cubed ampere", 
      FractionBox[
       RowBox[{"\"Kilograms\"", " ", 
         SuperscriptBox["\"Meters\"", "2"]}], 
       RowBox[{"\"Amperes\"", " ", 
         SuperscriptBox["\"Seconds\"", "3"]}]]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"SI unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SIUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"SIUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"V\"", "volt", "\"Volts\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"standard identifiers\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"StandardIdentifiers\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"StandardIdentifiers\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"IEC 27-1\"\>", "\[Rule]", "57"}], ",", 
      RowBox[{"\<\"IEC 80000-6:2008\"\>", "\[Rule]", "\<\"6-11.2\"\>"}], ",", 
      RowBox[{"\<\"ISO 31/V-1979\"\>", "\[Rule]", "\<\"5-6.2\"\>"}], ",", 
      RowBox[{"\<\"Wikidata\"\>", "\[Rule]", "\<\"Q77597807\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"standard symbols\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"StandardSymbols\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"StandardSymbols\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"IEC\"\>", "\[Rule]", 
      RowBox[{"{", 
       SubscriptBox["\<\"V\"\>", "\<\"ab\"\>"], "}"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"symbols\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Symbols\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Symbols\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     SubscriptBox["\<\"V\"\>", "\<\"ab\"\>"], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8724312107549963`*^9},
 CellLabel->"Out[399]=",
 CellID->36053538,ExpressionUUID->"fdfe12b5-9ceb-4024-a0a0-bc6575ecf6a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Entity", "[", 
   RowBox[{"\"\<PhysicalQuantity\>\"", ",", "\"\<LuminousFlux\>\""}], "]"}], 
  "[", "\"\<PropertyAssociation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.872431155037982*^9, 3.872431222482456*^9}},
 CellLabel->"In[400]:=",
 CellID->355570456,ExpressionUUID->"5f1fa33e-e301-4d50-a7e9-d76817449ee0"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"abbreviations\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Abbreviations\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Abbreviations\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"algebraic types\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AlgebraicTypes\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"AlgebraicTypes\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"positive real\"\>", ",", "\<\"scalar\"\>"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"alternate names\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AlternateNames\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"AlternateNames\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "\<\"luminous power\"\>", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"base physical quantity\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"BasePhysicalQuantity\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"BasePhysicalQuantity\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"canonical unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"CanonicalUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"CanonicalUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"lm\"", "lumen", "\"Lumens\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Classes\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Classes\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"dimensions\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Dimensions\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Dimensions\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\<\"AngleUnit\"\>", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"LuminousIntensityUnit\"\>", ",", "1"}], "}"}]}], "}"}]}], 
   ",", 
   RowBox[{
    TemplateBox[{"\"entity classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"EntityClasses\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"EntityClasses\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"instances\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Instances\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Instances\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"name\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Name\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Name\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"luminous flux\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"named SI unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"NamedSIUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"NamedSIUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"lm\"", "lumen", "\"Lumens\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"physical property type\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"PhysicalPropertyType\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"PhysicalPropertyType\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"quantity variable\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"QuantityVariable\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"QuantityVariable\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"\"LuminousFlux\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " luminous flux"}], TooltipStyle -> 
       "TextStyling"]& )]}], ",", 
   RowBox[{
    TemplateBox[{"\"SI base unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SIBaseUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"SIBaseUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{"\"cd\"", "\[ThinSpace]", 
        SuperscriptBox["\"rad\"", "2"]}], "candela radian squared", 
      RowBox[{"\"Candelas\"", " ", 
        SuperscriptBox["\"Radians\"", "2"]}]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"SI unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SIUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"SIUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"lm\"", "lumen", "\"Lumens\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"standard identifiers\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"StandardIdentifiers\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"StandardIdentifiers\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"ISO 31/VI-1973\"\>", "\[Rule]", "\<\"6-20.1\"\>"}], ",", 
      RowBox[{"\<\"ISO 31/6-1980\"\>", "\[Rule]", "\<\"6-20.1\"\>"}], ",", 
      RowBox[{"\<\"ISO 31-6:1992\"\>", "\[Rule]", "\<\"6-30\"\>"}], ",", 
      RowBox[{"\<\"ISO 80000-7:2008\"\>", "\[Rule]", "\<\"7-32\"\>"}], ",", 
      RowBox[{"\<\"ISO 80000-7:2019\"\>", "\[Rule]", "\<\"7-13\"\>"}], ",", 
      RowBox[{"\<\"Wikidata\"\>", "\[Rule]", "\<\"Q107780\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"standard symbols\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"StandardSymbols\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"StandardSymbols\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"ISO\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["\<\"\[CapitalPhi]\"\>", "\<\"v\"\>"], 
         ",", "\<\"\[CapitalPhi]\"\>"}], "}"}]}], ",", 
      RowBox[{"\<\"Wikidata\"\>", "\[Rule]", 
       RowBox[{"{", 
        SubscriptBox["\<\"\[CapitalPhi]\"\>", "\<\"v\"\>"], "}"}]}], ",", 
      RowBox[{"\<\"Wikipedia\"\>", "\[Rule]", 
       RowBox[{"{", 
        SubscriptBox["\<\"\[CapitalPhi]\"\>", "\<\"v\"\>"], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"symbols\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Symbols\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Symbols\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"\[CapitalPhi]\"\>", ",", 
      SubscriptBox["\<\"\[CapitalPhi]\"\>", "\<\"v\"\>"]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8724312236782937`*^9},
 CellLabel->"Out[400]=",
 CellID->9521729,ExpressionUUID->"5bd6e892-73e8-4e99-acbe-61ebf027926d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Entity", "[", 
   RowBox[{"\"\<PhysicalQuantity\>\"", ",", "\"\<Frequency\>\""}], "]"}], 
  "[", "\"\<PropertyAssociation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.872431155037982*^9, 3.8724312329388266`*^9}},
 CellLabel->"In[401]:=",
 CellID->335539274,ExpressionUUID->"bd5e95a8-f3f7-4a00-ae85-3901f0d8d83c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"abbreviations\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Abbreviations\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Abbreviations\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"freq\"\>", ",", "\<\"freq.\"\>"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"algebraic types\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AlgebraicTypes\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"AlgebraicTypes\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"complex number\"\>", ",", "\<\"positive real\"\>", 
      ",", "\<\"scalar\"\>"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"alternate names\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AlternateNames\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"AlternateNames\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "\<\"temporal frequency\"\>", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"base physical quantity\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"BasePhysicalQuantity\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"BasePhysicalQuantity\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"canonical unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"CanonicalUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"CanonicalUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"Hz\"", "hertz", "\"Hertz\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Classes\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Classes\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"dimensions\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Dimensions\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Dimensions\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"\<\"TimeUnit\"\>", ",", 
       RowBox[{"-", "1"}]}], "}"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"entity classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"EntityClasses\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"EntityClasses\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"instances\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Instances\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Instances\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"beat frequency\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"BeatFrequency\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"BeatFrequency\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"bus speed\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"BusSpeed\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"BusSpeed\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"characteristic frequency\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"CharacteristicFrequency\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CharacteristicFrequency\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"clock rate\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ClockRate\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"ClockRate\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"CPU speed\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CPUSpeed\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"CPUSpeed\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"critical frequency\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CriticalFrequency\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CriticalFrequency\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"cutoff frequency\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CutoffFrequency\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"CutoffFrequency\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"cyclotron frequency\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CyclotronFrequency\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CyclotronFrequency\\\
\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"emitted frequency\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"EmittedFrequency\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"EmittedFrequency\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"flicker fusion frequency\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"FlickerFusionFrequency\""}],
           "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FlickerFusionFrequency\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"Larmor frequency\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"LarmorFrequency\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"LarmorFrequency\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"network speed\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"NetworkSpeed\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"NetworkSpeed\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"microwave frequency\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"MicrowaveFrequency\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"MicrowaveFrequency\\\
\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"Nyquist frequency\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"NyquistFrequency\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"NyquistFrequency\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"Nyquist rate\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"NyquistRate\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"NyquistRate\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"observed frequency\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ObservedFrequency\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ObservedFrequency\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"radio frequency\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"RadioFrequency\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"RadioFrequency\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"synchotron frequency\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"SynchotronFrequency\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SynchotronFrequency\\\"]\"", "\"physical quantity\""},
       "Entity"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"name\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Name\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Name\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"frequency\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"named SI unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"NamedSIUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"NamedSIUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"Hz\"", "hertz", "\"Hertz\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"physical property type\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"PhysicalPropertyType\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"PhysicalPropertyType\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"quantity variable\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"QuantityVariable\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"QuantityVariable\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"\"\[Nu]\"", "\"Frequency\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " frequency"}], TooltipStyle -> 
       "TextStyling"]& )]}], ",", 
   RowBox[{
    TemplateBox[{"\"SI base unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SIBaseUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"SIBaseUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{"\"per \"", "\[InvisibleSpace]", "\"second\""}], 
      "reciprocal second", 
      FractionBox["1", "\"Seconds\""]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"SI unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SIUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"SIUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"Hz\"", "hertz", "\"Hertz\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"standard identifiers\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"StandardIdentifiers\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"StandardIdentifiers\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"ISO 31/II-1978\"\>", "\[Rule]", "\<\"2-3.1\"\>"}], ",", 
      RowBox[{"\<\"ISO 31-2:1992\"\>", "\[Rule]", "\<\"2-3.1\"\>"}], ",", 
      RowBox[{"\<\"ISO 80000-3:2006\"\>", "\[Rule]", "\<\"3-15.1\"\>"}], ",", 
      RowBox[{"\<\"ISO 80000-3:2019\"\>", "\[Rule]", "\<\"3-17.1\"\>"}], ",", 
      RowBox[{"\<\"Wikidata\"\>", "\[Rule]", "\<\"Q11652\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"standard symbols\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"StandardSymbols\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"StandardSymbols\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"ISO\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"f\"\>", ",", "\<\"\[Nu]\"\>"}], "}"}]}], ",", 
      RowBox[{"\<\"Wikidata\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"f\"\>", ",", "\<\"\[Nu]\"\>", ",", "\<\"F\"\>"}], 
        "}"}]}], ",", 
      RowBox[{"\<\"Wikipedia\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"f\"\>", ",", "\<\"\[Nu]\"\>"}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"symbols\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Symbols\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Symbols\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"f\"\>", ",", "\<\"F\"\>", ",", "\<\"\[Nu]\"\>"}], "}"}]}]}],
   "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8724312340913973`*^9},
 CellLabel->"Out[401]=",
 CellID->274598903,ExpressionUUID->"bbc54090-1898-40de-bfad-c7bdf637eb19"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Entity", "[", 
   RowBox[{"\"\<PhysicalQuantity\>\"", ",", "\"\<Frequency\>\""}], "]"}], 
  "[", "\"\<PropertyAssociation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.872431155037982*^9, 3.872431243383872*^9}},
 CellLabel->"In[401]:=",
 CellID->87735755,ExpressionUUID->"200c0e1a-b16c-47bd-9f17-377a3902c497"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"physicalquantities", "=", 
  RowBox[{"{", 
   RowBox[{
   "\"\<Angle\>\"", ",", "\"\<SolidAngle\>\"", ",", "\"\<Frequency\>\"", ",", 
    "\"\<Force\>\"", ",", "\"\<Pressure\>\"", ",", "\"\<Energy\>\"", ",", 
    "\"\<Power\>\"", ",", "\"\<ElectricCharge\>\"", ",", 
    "\"\<ElectricPotential\>\"", ",", "\"\<ElectricCapacitance\>\"", ",", 
    "\"\<ElectricResistance\>\"", ",", "\"\<ElectricConductance\>\"", ",", 
    "\"\<MagneticFlux\>\"", ",", "\"\<MagneticFluxDensity\>\"", ",", 
    "\"\<MagneticInductance\>\"", ",", "\"\<Celsius\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.872431323574464*^9, 3.8724313412628107`*^9}, {
  3.8724317389837184`*^9, 3.872431795727542*^9}, {3.8724318688707314`*^9, 
  3.872431909178043*^9}},
 CellLabel->"In[418]:=",
 CellID->330561072,ExpressionUUID->"ea4047a4-ede7-40ae-b8e7-f2d4136d2dc4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Angle\"\>", ",", "\<\"SolidAngle\"\>", 
   ",", "\<\"Frequency\"\>", ",", "\<\"Force\"\>", ",", "\<\"Pressure\"\>", 
   ",", "\<\"Energy\"\>", ",", "\<\"Power\"\>", ",", "\<\"ElectricCharge\"\>",
    ",", "\<\"ElectricPotential\"\>", ",", "\<\"ElectricCapacitance\"\>", 
   ",", "\<\"ElectricResistance\"\>", ",", "\<\"ElectricConductance\"\>", 
   ",", "\<\"MagneticFlux\"\>", ",", "\<\"MagneticFluxDensity\"\>", 
   ",", "\<\"MagneticInductance\"\>", ",", "\<\"Celsius\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8724317962626114`*^9, {3.872431886393739*^9, 3.872431894904127*^9}, 
   3.87243192947709*^9},
 CellLabel->"Out[418]=",
 CellID->135055235,ExpressionUUID->"82f98c9b-a5b8-4f15-a580-5621b2f2a315"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Entity", "[", 
     RowBox[{"\"\<PhysicalQuantity\>\"", ",", "#"}], "]"}], "[", 
    "\"\<SIUnit\>\"", "]"}], "&"}], "/@", "physicalquantities"}]], "Input",
 CellChangeTimes->{{3.8724317981323786`*^9, 3.8724318410004416`*^9}},
 CellLabel->"In[419]:=",
 CellID->22367071,ExpressionUUID->"c676c7a8-629b-4bad-a54d-a2bcd8e7cf9c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"1", "\"rad\"", "radian", "\"Radians\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"sr\"", "steradian", "\"Steradians\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Hz\"", "hertz", "\"Hertz\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"N\"", "newton", "\"Newtons\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Pa\"", "pascal", "\"Pascals\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"J\"", "joule", "\"Joules\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"W\"", "watt", "\"Watts\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"C\"", "coulomb", "\"Coulombs\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"V\"", "volt", "\"Volts\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"F\"", "farad", "\"Farads\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"\[CapitalOmega]\"", "ohm", "\"Ohms\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"S\"", "siemens", "\"Siemens\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"Wb\"", "weber", "\"Webers\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"T\"", "tesla", "\"Teslas\""},
    "Quantity"], ",", 
   TemplateBox[{"1", "\"H\"", "henry", "\"Henries\""},
    "Quantity"], ",", 
   RowBox[{"Missing", "[", 
    RowBox[{"\<\"UnknownEntity\"\>", ",", 
     RowBox[{"{", 
      RowBox[{"\<\"PhysicalQuantity\"\>", ",", "\<\"Celsius\"\>"}], "}"}]}], 
    "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.872431805984067*^9, 3.8724318466874*^9}, {
   3.8724318891234126`*^9, 3.8724318986981993`*^9}, 3.8724319351477456`*^9},
 CellLabel->"Out[419]=",
 CellID->378783946,ExpressionUUID->"d8bc0700-775a-4e34-aec7-53069dc92afb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Entity", "[", 
   RowBox[{"\"\<PhysicalQuantity\>\"", ",", "\"\<Pressure\>\""}], "]"}], "[", 
  "\"\<PropertyAssociation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.872431342985298*^9, 3.8724313518145275`*^9}},
 CellLabel->"In[409]:=",
 CellID->145322550,ExpressionUUID->"0ee22b2e-247e-45fe-bf41-62bfe1426944"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"abbreviations\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Abbreviations\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Abbreviations\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"algebraic types\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AlgebraicTypes\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"AlgebraicTypes\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"positive real\"\>", ",", "\<\"scalar\"\>"}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"alternate names\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AlternateNames\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"AlternateNames\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"base physical quantity\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"BasePhysicalQuantity\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"BasePhysicalQuantity\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"canonical unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"CanonicalUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"CanonicalUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"Pa\"", "pascal", "\"Pascals\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Classes\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Classes\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"dimensions\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Dimensions\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Dimensions\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\<\"LengthUnit\"\>", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"MassUnit\"\>", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"TimeUnit\"\>", ",", 
        RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"entity classes\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"EntityClasses\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"EntityClasses\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"instances\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Instances\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Instances\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{"\"absolute pressure\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsolutePressure\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsolutePressure\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"air pressure\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AirPressure\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"AirPressure\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"ambient pressure\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AmbientPressure\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"AmbientPressure\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"atmospheric pressure\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"AtmosphericPressure\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AtmosphericPressure\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"Casimir pressure\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CasimirPressure\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"CasimirPressure\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"critical pressure\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"CriticalPressure\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CriticalPressure\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"equilibrium vapor pressure\"", 
        RowBox[{"Entity", "[", 
          
          RowBox[{"\"PhysicalQuantity\"", ",", 
            "\"EquilibriumVaporPressure\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"EquilibriumVaporPressure\\\"]\
\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"ground pressure\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"GroundPressure\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"GroundPressure\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"osmotic pressure\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"OsmoticPressure\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"OsmoticPressure\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"partial pressure\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"PartialPressure\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"PartialPressure\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"radiation pressure\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"RadiationPressure\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"RadiationPressure\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"Reid vapor pressure\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"ReidVaporPressure\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ReidVaporPressure\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"static pressure\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"StaticPressure\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"StaticPressure\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"surface pressure\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"SurfacePressure\""}], "]"}],
         "\"Entity[\\\"PhysicalQuantity\\\", \\\"SurfacePressure\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"total pressure\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"TotalPressure\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"TotalPressure\\\"]\"", 
        "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"true vapor pressure\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueVaporPressure\""}], 
          "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"TrueVaporPressure\\\"]\"", "\"physical quantity\""},
       "Entity"], ",", 
      TemplateBox[{"\"vapor pressure\"", 
        RowBox[{"Entity", "[", 
          RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporPressure\""}], "]"}], 
        "\"Entity[\\\"PhysicalQuantity\\\", \\\"VaporPressure\\\"]\"", 
        "\"physical quantity\""},
       "Entity"]}], "}"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"name\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Name\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Name\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"pressure\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"named SI unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"NamedSIUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"NamedSIUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"Pa\"", "pascal", "\"Pascals\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"physical property type\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"PhysicalPropertyType\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"PhysicalPropertyType\\\"]\""},
     "EntityProperty"], "\[Rule]", "\<\"intensive\"\>"}], ",", 
   RowBox[{
    TemplateBox[{"\"quantity variable\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"QuantityVariable\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"QuantityVariable\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"\"P\"", "\"Pressure\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " pressure"}], TooltipStyle -> 
       "TextStyling"]& )]}], ",", 
   RowBox[{
    TemplateBox[{"\"SI base unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SIBaseUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"SIBaseUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", 
      RowBox[{
       "\"kg\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"m\"", 
        "\[ThinSpace]", 
        SuperscriptBox["\"s\"", "2"], "\[InvisibleSpace]", "\")\""}], 
      "kilogram per meter second squared", 
      FractionBox["\"Kilograms\"", 
       RowBox[{"\"Meters\"", " ", 
         SuperscriptBox["\"Seconds\"", "2"]}]]},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"SI unit\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SIUnit\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"SIUnit\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    TemplateBox[{"1", "\"Pa\"", "pascal", "\"Pascals\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"standard identifiers\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"StandardIdentifiers\""}], 
        "]"}], "\"EntityProperty[\\\"PhysicalQuantity\\\", \
\\\"StandardIdentifiers\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"ISO 31/III-1978\"\>", "\[Rule]", "\<\"3-13.1\"\>"}], ",", 
      RowBox[{"\<\"ISO 31-3:1992\"\>", "\[Rule]", "\<\"3-15.1\"\>"}], ",", 
      RowBox[{"\<\"ISO 80000-4:2006\"\>", "\[Rule]", "\<\"4-15.1\"\>"}], ",", 
      RowBox[{"\<\"ISO 80000-4:2019\"\>", "\[Rule]", "\<\"4-14.1\"\>"}], ",", 
      RowBox[{"\<\"Wikidata\"\>", "\[Rule]", "\<\"Q39552\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"standard symbols\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"StandardSymbols\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"StandardSymbols\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"ISO\"\>", "\[Rule]", 
       RowBox[{"{", "\<\"p\"\>", "}"}]}], ",", 
      RowBox[{"\<\"IUPACGoldBook\"\>", "\[Rule]", 
       RowBox[{"{", "\<\"p\"\>", "}"}]}], ",", 
      RowBox[{"\<\"IUPACGreenBook\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"p\"\>", ",", "\<\"P\"\>"}], "}"}]}], ",", 
      RowBox[{"\<\"Wikidata\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"p\"\>", ",", "\<\"P\"\>"}], "}"}]}], ",", 
      RowBox[{"\<\"Wikipedia\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\<\"p\"\>", ",", "\<\"P\"\>"}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{
    TemplateBox[{"\"symbols\"", 
      RowBox[{"EntityProperty", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Symbols\""}], "]"}], 
      "\"EntityProperty[\\\"PhysicalQuantity\\\", \\\"Symbols\\\"]\""},
     "EntityProperty"], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"p\"\>", ",", "\<\"P\"\>"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8724313528556776`*^9},
 CellLabel->"Out[409]=",
 CellID->601194943,ExpressionUUID->"e6df1d86-ab1d-47a3-b9ba-983b993be074"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", "\"\<CanonicalUnit\>\"", "]"}], "&"}], ",", 
   RowBox[{
    RowBox[{"Entity", "[", 
     RowBox[{"\"\<PhysicalQuantity\>\"", ",", "\"\<Temperature\>\""}], "]"}], 
    "[", "\"\<Instances\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8724319396860824`*^9, 3.872431992579328*^9}, {
  3.872432032573822*^9, 3.8724320456907177`*^9}, {3.872432140668091*^9, 
  3.872432152602349*^9}},
 CellLabel->"In[430]:=",
 CellID->16833971,ExpressionUUID->"3b215e4e-a53c-46f0-ad6d-d161634d021b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"air temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AirTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"AirTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"ambient temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AmbientTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmbientTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"autoignition temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AutoignitionTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AutoignitionTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"average temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AverageTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"body temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"BodyTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"BodyTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"boiling temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"BoilingTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BoilingTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"brightness temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"BrightnessTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BrightnessTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"chill temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"ChillTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"ChillTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"cloud point temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"CloudPointTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CloudPointTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"core body temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"CoreBodyTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoreBodyTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"critical temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"CriticalTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CriticalTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Curie temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"CurieTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"CurieTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Debye temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"DebyeTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"DebyeTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"dew point temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"DewPointTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DewPointTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"distillation temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"DistillationTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DistillationTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"dry\[Hyphen]bulb temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"DryBulbTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DryBulbTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"drying temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"DryingTemperature\""}], "]"}],
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DryingTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"dust ignition temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"DustIgnitionTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DustIgnitionTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"effective temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"EffectiveTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"EffectiveTemperature\\\
\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"electron temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"ElectronTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ElectronTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"equilibrium temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"EquilibriumTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"EquilibriumTemperature\
\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Fermi temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"FermiTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"FermiTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"flash temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"FlashTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"FlashTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"freezing temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"FreezingTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FreezingTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"frost point temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"FrostPointTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FrostPointTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"gel point temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"GelPointTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"GelPointTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Hawking temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"HawkingTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"HawkingTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"ion temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"IonTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"IonTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Krafft temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"KrafftTemperature\""}], "]"}],
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"KrafftTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"local temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"LocalTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"LocalTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"mean radiant temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"MeanRadiantTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"MeanRadiantTemperature\
\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"melting temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"MeltingTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MeltingTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"N\[EAcute]el temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"NeelTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"NeelTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"outside air temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"OutsideAirTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"OutsideAirTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"plasma temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"PlasmaTemperature\""}], "]"}],
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"PlasmaTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"service temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"ServiceTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ServiceTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"reference temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"ReferenceTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ReferenceTemperature\\\
\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"room temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"RoomTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"RoomTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"skin temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SkinBodyTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SkinBodyTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"stagnation temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"StagnationTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StagnationTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"sublimation temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SublimationTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"SublimationTemperature\
\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"superconduction transition temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", 
          "\"SuperconductionTransitionTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SuperconductionTransitionTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"surface temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SurfaceTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SurfaceTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Ungel point temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"UngelPointTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UngelPointTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Unruh temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"UnruhTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"UnruhTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"wet bulb globe temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"WetBulbGlobeTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WetBulbGlobeTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"wet\[Hyphen]bulb temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"WetBulbTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WetBulbTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.8724319565755568`*^9, 3.8724319814266195`*^9}, {
   3.8724320234657555`*^9, 3.872432046294632*^9}, 3.872432182012871*^9},
 CellLabel->"Out[430]=",
 CellID->25555082,ExpressionUUID->"839716d2-bf6e-404b-950c-6d7e6b4acdc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "[", "\"\<NamedSIUnit\>\"", "]"}], "&"}], ",", 
   RowBox[{
    RowBox[{"Entity", "[", 
     RowBox[{"\"\<PhysicalQuantity\>\"", ",", "\"\<Temperature\>\""}], "]"}], 
    "[", "\"\<Instances\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8724319396860824`*^9, 3.872431992579328*^9}, {
  3.872432032573822*^9, 3.8724320456907177`*^9}, {3.872432140668091*^9, 
  3.872432152602349*^9}, {3.872432203131852*^9, 3.8724322072668977`*^9}},
 CellLabel->"In[431]:=",
 CellID->154899546,ExpressionUUID->"34b7f35d-b0c9-4b59-92d7-d810744dc298"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    TemplateBox[{"\"air temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AirTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"AirTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"ambient temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AmbientTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmbientTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"autoignition temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AutoignitionTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AutoignitionTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"average temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AverageTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"body temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"BodyTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"BodyTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"boiling temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"BoilingTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BoilingTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"brightness temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"BrightnessTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"BrightnessTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"chill temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"ChillTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"ChillTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"cloud point temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"CloudPointTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CloudPointTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"core body temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"CoreBodyTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoreBodyTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"critical temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"CriticalTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CriticalTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Curie temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"CurieTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"CurieTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Debye temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"DebyeTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"DebyeTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"dew point temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"DewPointTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DewPointTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"distillation temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"DistillationTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DistillationTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"dry\[Hyphen]bulb temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"DryBulbTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DryBulbTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"drying temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"DryingTemperature\""}], "]"}],
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"DryingTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"dust ignition temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"DustIgnitionTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DustIgnitionTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"effective temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"EffectiveTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"EffectiveTemperature\\\
\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"electron temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"ElectronTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ElectronTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"equilibrium temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"EquilibriumTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"EquilibriumTemperature\
\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Fermi temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"FermiTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"FermiTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"flash temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"FlashTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"FlashTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"freezing temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"FreezingTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FreezingTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"frost point temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"FrostPointTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FrostPointTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"gel point temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"GelPointTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"GelPointTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Hawking temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"HawkingTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"HawkingTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"ion temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"IonTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"IonTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Krafft temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"KrafftTemperature\""}], "]"}],
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"KrafftTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"local temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"LocalTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"LocalTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"mean radiant temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"MeanRadiantTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"MeanRadiantTemperature\
\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"melting temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"MeltingTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MeltingTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"N\[EAcute]el temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"NeelTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"NeelTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"outside air temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"OutsideAirTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"OutsideAirTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"plasma temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"PlasmaTemperature\""}], "]"}],
       "\"Entity[\\\"PhysicalQuantity\\\", \\\"PlasmaTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"service temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"ServiceTemperature\""}], 
        "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"ServiceTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"reference temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"ReferenceTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ReferenceTemperature\\\
\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"room temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"RoomTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"RoomTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"skin temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SkinBodyTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SkinBodyTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"stagnation temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"StagnationTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"StagnationTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"sublimation temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SublimationTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"SublimationTemperature\
\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"superconduction transition temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{
         "\"PhysicalQuantity\"", ",", 
          "\"SuperconductionTransitionTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SuperconductionTransitionTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"surface temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"SurfaceTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SurfaceTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Ungel point temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"UngelPointTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"UngelPointTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"Unruh temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"UnruhTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"UnruhTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"wet bulb globe temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"WetBulbGlobeTemperature\""}], 
        "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"WetBulbGlobeTemperature\\\"]\"",
       "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{
    TemplateBox[{"\"wet\[Hyphen]bulb temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"WetBulbTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WetBulbTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8724322370955005`*^9},
 CellLabel->"Out[431]=",
 CellID->259503909,ExpressionUUID->"71fa4428-3024-4fd4-a7e7-4974cc599e23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KeyMap", "[", 
  RowBox[{"CanonicalName", ",", 
   RowBox[{
    TemplateBox[{"\"air temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AirTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"AirTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "[", "\"\<PropertyAssociation\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.872432052464123*^9, 3.8724320750071945`*^9}},
 CellLabel->"In[426]:=",
 CellID->290722634,ExpressionUUID->"0a8d3126-8e6e-4067-ad63-b1b96c85b338"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Abbreviations\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"AlgebraicTypes\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"positive real\"\>", ",", "\<\"scalar\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"AlternateNames\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"BasePhysicalQuantity\"\>", "\[Rule]", 
    TemplateBox[{"\"temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Temperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"Temperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"]}], ",", 
   RowBox[{"\<\"CanonicalUnit\"\>", "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"Classes\"\>", "\[Rule]", 
    RowBox[{"{", 
     TemplateBox[{"\"physical quantity instances\"", 
       RowBox[{"EntityClass", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"PhysicalQuantityInstance\""}], 
         "]"}], "\"EntityClass[\\\"PhysicalQuantity\\\", \
\\\"PhysicalQuantityInstance\\\"]\"", "\"physical quantities\""},
      "EntityClass"], "}"}]}], ",", 
   RowBox[{"\<\"Dimensions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"\<\"TemperatureUnit\"\>", ",", "1"}], "}"}], "}"}]}], ",", 
   RowBox[{"\<\"EntityClasses\"\>", "\[Rule]", 
    RowBox[{"{", 
     TemplateBox[{"\"physical quantity instances\"", 
       RowBox[{"EntityClass", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"PhysicalQuantityInstance\""}], 
         "]"}], "\"EntityClass[\\\"PhysicalQuantity\\\", \
\\\"PhysicalQuantityInstance\\\"]\"", "\"physical quantities\""},
      "EntityClass"], "}"}]}], ",", 
   RowBox[{"\<\"Instances\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"air temperature\"\>"}], ",", 
   RowBox[{"\<\"NamedSIUnit\"\>", "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"PhysicalPropertyType\"\>", "\[Rule]", "\<\"intensive\"\>"}], 
   ",", 
   RowBox[{"\<\"QuantityVariable\"\>", "\[Rule]", 
    TemplateBox[{"\"AirTemperature\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " air temperature"}], TooltipStyle -> 
       "TextStyling"]& )]}], ",", 
   RowBox[{"\<\"SIBaseUnit\"\>", "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"SIUnit\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"None\"\>", "]"}]}], ",", 
   RowBox[{"\<\"StandardIdentifiers\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"Wikidata\"\>", "\[Rule]", "\<\"Q1160424\"\>"}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"StandardSymbols\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Symbols\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.872432056450133*^9, 3.8724320752762156`*^9}},
 CellLabel->"Out[426]=",
 CellID->297713219,ExpressionUUID->"f8d58ec4-64a9-4e71-8acb-9dc55b2fe5ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KeyMap", "[", 
  RowBox[{"CanonicalName", ",", 
   RowBox[{
    TemplateBox[{"\"ambient temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AmbientTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmbientTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "[", "\"\<PropertyAssociation\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.872432052464123*^9, 3.8724320882515726`*^9}},
 CellLabel->"In[427]:=",
 CellID->717757460,ExpressionUUID->"060ba3f0-a9b0-44ea-ba7f-f1fc1411286e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Abbreviations\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"AlgebraicTypes\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"positive real\"\>", ",", "\<\"scalar\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"AlternateNames\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"BasePhysicalQuantity\"\>", "\[Rule]", 
    TemplateBox[{"\"temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Temperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"Temperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"]}], ",", 
   RowBox[{"\<\"CanonicalUnit\"\>", "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"Classes\"\>", "\[Rule]", 
    RowBox[{"{", 
     TemplateBox[{"\"physical quantity instances\"", 
       RowBox[{"EntityClass", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"PhysicalQuantityInstance\""}], 
         "]"}], "\"EntityClass[\\\"PhysicalQuantity\\\", \
\\\"PhysicalQuantityInstance\\\"]\"", "\"physical quantities\""},
      "EntityClass"], "}"}]}], ",", 
   RowBox[{"\<\"Dimensions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"\<\"TemperatureUnit\"\>", ",", "1"}], "}"}], "}"}]}], ",", 
   RowBox[{"\<\"EntityClasses\"\>", "\[Rule]", 
    RowBox[{"{", 
     TemplateBox[{"\"physical quantity instances\"", 
       RowBox[{"EntityClass", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"PhysicalQuantityInstance\""}], 
         "]"}], "\"EntityClass[\\\"PhysicalQuantity\\\", \
\\\"PhysicalQuantityInstance\\\"]\"", "\"physical quantities\""},
      "EntityClass"], "}"}]}], ",", 
   RowBox[{"\<\"Instances\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"ambient temperature\"\>"}], ",", 
   RowBox[{"\<\"NamedSIUnit\"\>", "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"PhysicalPropertyType\"\>", "\[Rule]", "\<\"intensive\"\>"}], 
   ",", 
   RowBox[{"\<\"QuantityVariable\"\>", "\[Rule]", 
    TemplateBox[{"\"AmbientTemperature\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " ambient temperature"}], TooltipStyle -> 
       "TextStyling"]& )]}], ",", 
   RowBox[{"\<\"SIBaseUnit\"\>", "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"SIUnit\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"None\"\>", "]"}]}], ",", 
   RowBox[{"\<\"StandardIdentifiers\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"Wikidata\"\>", "\[Rule]", "\<\"Q52019992\"\>"}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"StandardSymbols\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Symbols\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8724320896775937`*^9},
 CellLabel->"Out[427]=",
 CellID->55277644,ExpressionUUID->"8b7beffe-f220-41b9-918d-04d7515feb6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KeyMap", "[", 
  RowBox[{"CanonicalName", ",", 
   RowBox[{
    TemplateBox[{"\"average temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageTemperature\""}], 
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AverageTemperature\\\"]\"", "\"physical quantity\""},
     "Entity"], "[", "\"\<PropertyAssociation\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.872432052464123*^9, 3.8724321030050335`*^9}},
 CellLabel->"In[428]:=",
 CellID->367669348,ExpressionUUID->"2d581ed6-3d9d-4244-8d70-6e008f54a8b1"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Abbreviations\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"AlgebraicTypes\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"positive real\"\>", ",", "\<\"scalar\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"AlternateNames\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"BasePhysicalQuantity\"\>", "\[Rule]", 
    TemplateBox[{"\"temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Temperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"Temperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"]}], ",", 
   RowBox[{"\<\"CanonicalUnit\"\>", "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"Classes\"\>", "\[Rule]", 
    RowBox[{"{", 
     TemplateBox[{"\"physical quantity instances\"", 
       RowBox[{"EntityClass", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"PhysicalQuantityInstance\""}], 
         "]"}], "\"EntityClass[\\\"PhysicalQuantity\\\", \
\\\"PhysicalQuantityInstance\\\"]\"", "\"physical quantities\""},
      "EntityClass"], "}"}]}], ",", 
   RowBox[{"\<\"Dimensions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"\<\"TemperatureUnit\"\>", ",", "1"}], "}"}], "}"}]}], ",", 
   RowBox[{"\<\"EntityClasses\"\>", "\[Rule]", 
    RowBox[{"{", 
     TemplateBox[{"\"physical quantity instances\"", 
       RowBox[{"EntityClass", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"PhysicalQuantityInstance\""}], 
         "]"}], "\"EntityClass[\\\"PhysicalQuantity\\\", \
\\\"PhysicalQuantityInstance\\\"]\"", "\"physical quantities\""},
      "EntityClass"], "}"}]}], ",", 
   RowBox[{"\<\"Instances\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"average temperature\"\>"}], ",", 
   RowBox[{"\<\"NamedSIUnit\"\>", "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"PhysicalPropertyType\"\>", "\[Rule]", "\<\"intensive\"\>"}], 
   ",", 
   RowBox[{"\<\"QuantityVariable\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"{", "}"}], "\"AverageTemperature\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " average temperature"}], TooltipStyle -> 
       "TextStyling"]& )]}], ",", 
   RowBox[{"\<\"SIBaseUnit\"\>", "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"SIUnit\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"None\"\>", "]"}]}], ",", 
   RowBox[{"\<\"StandardIdentifiers\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"Wikidata\"\>", "\[Rule]", "\<\"Q12716876\"\>"}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"StandardSymbols\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Symbols\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.872432104663975*^9},
 CellLabel->"Out[428]=",
 CellID->263182249,ExpressionUUID->"fb74b564-f564-4109-b041-7b602730c9ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KeyMap", "[", 
  RowBox[{"CanonicalName", ",", 
   RowBox[{
    TemplateBox[{"\"body temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"BodyTemperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"BodyTemperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"], "[", "\"\<PropertyAssociation\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.872432052464123*^9, 3.872432120631304*^9}},
 CellLabel->"In[429]:=",
 CellID->604124077,ExpressionUUID->"c435a98d-9e81-4c59-9a1d-1583e1f7db8c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Abbreviations\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"AlgebraicTypes\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"positive real\"\>", ",", "\<\"scalar\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"AlternateNames\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"BasePhysicalQuantity\"\>", "\[Rule]", 
    TemplateBox[{"\"temperature\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"PhysicalQuantity\"", ",", "\"Temperature\""}], "]"}], 
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"Temperature\\\"]\"", 
      "\"physical quantity\""},
     "Entity"]}], ",", 
   RowBox[{"\<\"CanonicalUnit\"\>", "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"Classes\"\>", "\[Rule]", 
    RowBox[{"{", 
     TemplateBox[{"\"physical quantity instances\"", 
       RowBox[{"EntityClass", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"PhysicalQuantityInstance\""}], 
         "]"}], "\"EntityClass[\\\"PhysicalQuantity\\\", \
\\\"PhysicalQuantityInstance\\\"]\"", "\"physical quantities\""},
      "EntityClass"], "}"}]}], ",", 
   RowBox[{"\<\"Dimensions\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"\<\"TemperatureUnit\"\>", ",", "1"}], "}"}], "}"}]}], ",", 
   RowBox[{"\<\"EntityClasses\"\>", "\[Rule]", 
    RowBox[{"{", 
     TemplateBox[{"\"physical quantity instances\"", 
       RowBox[{"EntityClass", "[", 
         RowBox[{
          "\"PhysicalQuantity\"", ",", "\"PhysicalQuantityInstance\""}], 
         "]"}], "\"EntityClass[\\\"PhysicalQuantity\\\", \
\\\"PhysicalQuantityInstance\\\"]\"", "\"physical quantities\""},
      "EntityClass"], "}"}]}], ",", 
   RowBox[{"\<\"Instances\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"NotApplicable\"\>", "]"}]}], ",", 
   RowBox[{"\<\"Name\"\>", "\[Rule]", "\<\"body temperature\"\>"}], ",", 
   RowBox[{"\<\"NamedSIUnit\"\>", "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"PhysicalPropertyType\"\>", "\[Rule]", "\<\"intensive\"\>"}], 
   ",", 
   RowBox[{"\<\"QuantityVariable\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"{", "}"}], "\"BodyTemperature\""},
     "QuantityVariable",
     DisplayFunction->(TooltipBox[
       StyleBox[#, FontColor -> GrayLevel[0.4], ShowStringCharacters -> 
        False], 
       RowBox[{"Quantity variable:", " body temperature"}], TooltipStyle -> 
       "TextStyling"]& )]}], ",", 
   RowBox[{"\<\"SIBaseUnit\"\>", "\[Rule]", 
    TemplateBox[{"1", "\"K\"", "kelvin", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"SIUnit\"\>", "\[Rule]", 
    RowBox[{"Missing", "[", "\<\"None\"\>", "]"}]}], ",", 
   RowBox[{"\<\"StandardIdentifiers\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"Wikidata\"\>", "\[Rule]", "\<\"Q751803\"\>"}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"StandardSymbols\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Symbols\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8724321223771887`*^9},
 CellLabel->"Out[429]=",
 CellID->182779417,ExpressionUUID->"52325624-2d67-4be7-8b67-20feb909796c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 CellTags->"DefaultContent",
 CellID->313242344,ExpressionUUID->"2ca61632-ec42-49f9-9c2f-35016e53bec8"],

Cell["\<\
Text about additional examples expanding scope (and see other sections for \
options, applications, etc):\
\>", "Text",
 CellTags->"DefaultContent",
 CellID->291939446,ExpressionUUID->"338eb44a-cc12-4efc-a176-5b59777b45b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyFunction", "[", 
  RowBox[{"x", ",", "y", ",", "z"}], "]"}]], "Input",
 CellTags->"DefaultContent",
 CellLabel->"In[2]:= ",
 CellID->448965068,ExpressionUUID->"8d614e68-6084-4374-b2cc-76f723b5d16e"],

Cell[BoxData[
 RowBox[{"x", " ", "y", " ", "z"}]], "Output",
 CellTags->"DefaultContent",
 CellLabel->"Out[2]= ",
 CellID->494498970,ExpressionUUID->"ceed45b3-aaad-4f69-af9b-871f95961e0e"]
}, Open  ]]
}, Open  ]],

Cell["Options", "Subsection",
 CellTags->"DefaultContent",
 CellID->879773335,ExpressionUUID->"ed87f971-cc12-4a24-a9c4-3fcbaa49e772"],

Cell["Applications", "Subsection",
 CellTags->"DefaultContent",
 CellID->542143288,ExpressionUUID->"a3798574-d5b3-4bf7-8744-34599865b22d"],

Cell["Properties and Relations", "Subsection",
 CellTags->"DefaultContent",
 CellID->727494039,ExpressionUUID->"5892072c-5030-404a-ba9f-c1a5959feed9"],

Cell[CellGroupData[{

Cell["Possible Issues", "Subsection",
 CellTags->"DefaultContent",
 CellID->471245215,ExpressionUUID->"9259402a-3dcd-45dd-b4e9-9e722b44e3aa"],

Cell["\<\
There are some inconsistencies in Mathematica because the following identity, \
which is true, returns False in Mathematica:\
\>", "Text",
 CellChangeTimes->{{3.8724296713805647`*^9, 3.8724296891256046`*^9}},
 CellID->64544,ExpressionUUID->"e5bb9831-6bd0-4896-a55e-5280743174a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Quantity", "[", 
   RowBox[{"1", ",", "\"\<Candelas\>\""}], "]"}], "===", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox["1", "683"], 
     RowBox[{"Quantity", "[", 
      RowBox[{
      "1", ",", "\"\<MonochromaticRadiation540THzLuminousEfficacy\>\""}], 
      "]"}]}], ")"}], 
   RowBox[{"Quantity", "[", 
    RowBox[{"1", ",", "\"\<Kilograms\>\""}], "]"}], 
   SuperscriptBox[
    RowBox[{"Quantity", "[", 
     RowBox[{"1", ",", "\"\<Meters\>\""}], "]"}], "2"], 
   SuperscriptBox[
    RowBox[{"Quantity", "[", 
     RowBox[{"1", ",", "\"\<Seconds\>\""}], "]"}], 
    RowBox[{"-", "3"}]], " ", 
   SuperscriptBox[
    RowBox[{"Quantity", "[", 
     RowBox[{"1", ",", "\"\<Steradians\>\""}], "]"}], 
    RowBox[{"-", "1"}]]}]}]], "Input",
 CellChangeTimes->{{3.8724294543134084`*^9, 3.872429514209593*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[371]:=",
 CellID->298664010,ExpressionUUID->"4cad78d5-7a63-43c5-bf26-749d3787aff3"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.8724295155680575`*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[371]=",
 CellID->361132217,ExpressionUUID->"0ab7dd19-2ca8-4fb1-8279-fa4b2d129b63"]
}, Open  ]]
}, Open  ]],

Cell["Neat Examples", "Subsection",
 CellTags->"DefaultContent",
 CellID->303071976,ExpressionUUID->"c78bc25b-ae31-4d97-bbbc-4fd1283f14dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->871630328,ExpressionUUID->"b829b65e-00f9-473e-bddf-d7a71cc3c60b"],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this function.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4257a24d-d194-48ba-8835-77fcef5000d9"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Contributed By", "ContributorInformation", "TemplateCellGroup"},
 CellID->771147648,ExpressionUUID->"3d8e9a45-58a3-4f32-8c6e-ba70265b2b92"],

Cell["Author Name", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->855757352,ExpressionUUID->"57b31d45-11cd-4a54-afaa-4070e87cbaf6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the function in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "67aad18a-baca-49f8-88de-2f848172d1cd"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->854882061,ExpressionUUID->"a9802e3a-cd02-4427-abc2-92356b350ed2"],

Cell["keyword 1", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->560424104,ExpressionUUID->"f82872f4-d372-4cde-ae54-704270a4ac7d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Categories", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->193940140,ExpressionUUID->"29830577-69ad-4da4-9438-49157b664ad4"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
            "\"Cloud & Deployment\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Data Manipulation & Analysis"}], 
            "\" \"", "\"Data Manipulation & Analysis\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "External Interfaces & Connections"}], 
            "\" \"", "\"External Interfaces & Connections\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geographic Data & Computation"}], 
            "\" \"", "\"Geographic Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
            "\"Graphs & Networks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Images"}], "\" \"", "\"Images\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            False, {False, "Knowledge Representation & Natural Language"}], 
            "\" \"", "\"Knowledge Representation & Natural Language\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
            "\" \"", "\"Notebook Documents & Presentation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Repository Tools"}], "\" \"", 
            "\"Repository Tools\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}],
             "\" \"", "\"Social, Cultural & Linguistic Data\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Strings & Text"}], "\" \"", 
            "\"Strings & Text\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
            "\"System Operation & Setup\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "User Interface Construction"}], 
            "\" \"", "\"User Interface Construction\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Wolfram Physics Project"}], "\" \"", 
            "\"Wolfram Physics Project\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Core Language & Structure"}], "\" \"",
             "\"Core Language & Structure\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Engineering Data & Computation"}], 
            "\" \"", "\"Engineering Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Financial Data & Computation"}], 
            "\" \"", "\"Financial Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geometry"}], "\" \"", "\"Geometry\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
            "\" \"", "\"Higher Mathematical Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Just For Fun"}], "\" \"", 
            "\"Just For Fun\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
            "\"Machine Learning\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Programming Utilities"}], "\" \"", 
            "\"Programming Utilities\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            False, {False, "Scientific and Medical Data & Computation"}], 
            "\" \"", "\"Scientific and Medical Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
            "\"Sound & Video\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
            "\" \"", "\"Symbolic & Numeric Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
            "\"Time-Related Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Visualization & Graphics"}], "\" \"", 
            "\"Visualization & Graphics\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxVTlsKwjAQFLHainiTHqJUCwWh0vUCabpqME1CdvOR25sgiH7NMA9mmrKGAjhqhO0Q2A\
WuYdc+Ub5wvq9oc1GUlKJnXIiqJrBdBCtZQ3n11qHnCPtWMD6sV0ipOzhW1tB9/elmHINGKs+\
zYjElVnRCE36N6oQaf518wOqwmP/BY28YvfMpmxegakyEMBGmf4cRyQYv8RYdQtkFI3PmDU1ZTKI=\
"},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->106874216,ExpressionUUID->"e3f64824-f0a3-4b6a-aeb8-9c62b0efb6ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Symbols", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List up to twenty documented, system-level Wolfram Language symbols \
related to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "811057b0-6026-410d-b124-0fef2b366e32"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Symbols"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Symbols", "TemplateCellGroup"},
 CellID->525877127,ExpressionUUID->"1d022705-bdcd-47d6-88f9-06965183299c"],

Cell["SymbolName (documented Wolfram Language symbol)", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->195255409,ExpressionUUID->"a910994c-1a2d-4e47-a677-48f8686ebc78"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this function.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5e24e213-dacb-44e6-acc1-459b8ec0046b"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->869341850,ExpressionUUID->"2eac8d31-b508-43ad-9c89-63ba1f45c0e5"],

Cell["Resource Name (resources from any Wolfram repository)", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->694609509,ExpressionUUID->"a0d04679-79b7-49ae-9bb4-756155941472"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source/Reference Citation",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
function and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "568054bf-8f90-4b38-acc0-3c795ad6c3d6"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Source/Reference Citation", "TemplateCellGroup"},
 CellID->788767010,ExpressionUUID->"9196a14a-b943-4ca5-90cc-68dbbea065b2"],

Cell["Source, reference or citation information", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->512303561,ExpressionUUID->"cbbbcfca-0597-4981-953b-c6ee9bc8ccfe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d1aa7eb7-e16f-49e0-b3ea-7fa524d841e1"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->341958311,ExpressionUUID->"c1f5076a-1f52-498e-b6b4-256d9e1a4669"],

Cell["Link to other related material", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->938599834,ExpressionUUID->"1af1372f-068b-4c6b-80a5-f3a83cce8410"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tests",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"VerificationTests", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Specify an optional list of tests for verifying that the function \
is working properly in any environment. Tests can be specified as \
Input/Output cell pairs or as symbolic ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "VerificationTest", "SymbolsRefLink", ShowStringCharacters -> 
                 True, FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/VerificationTest", 
                ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " expressions for including additional options."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoVerificationTests"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "bee55a93-2ffc-470e-b657-a08e99289006"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "VerificationTests"},
 DefaultNewCellStyle->"Input",
 CellTags->{"TemplateCellGroup", "Tests", "VerificationTests"},
 CellID->187055128,ExpressionUUID->"5dfae20f-f69b-4e7e-86ec-840000090690"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyFunction", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input",
 CellTags->"DefaultContent",
 CellLabel->"In[3]:=",
 CellID->770806,ExpressionUUID->"6eed87f8-bc11-462e-88b7-f6c7990a7f4b"],

Cell[BoxData[
 RowBox[{"x", " ", "y"}]], "Output",
 CellTags->"DefaultContent",
 CellLabel->"Out[3]=",
 CellID->759771806,ExpressionUUID->"7f4e0110-ef9a-41ff-b191-6de21d940df2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your function to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "92867965-5ee0-4783-94ee-44942986f39d"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->465977791,ExpressionUUID->"a29002f7-13f8-4cfb-ad58-b6a6c79fee56"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f160d887-c924-462b-8a5f-ab27da400d70"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->267876551,ExpressionUUID->"75b3517f-645f-4ac1-a1ff-1b6e0ac6ff39"],

Cell["13.0+", "Text",
 CellTags->{"DefaultContent", "ScrapeDefault"},
 CellID->788185540,ExpressionUUID->"c92f5121-c54c-4042-ae33-2921dcfed8a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your function is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8e128f28-1aa1-4f52-be38-567734b12c69"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->752514832,ExpressionUUID->"aed64dd8-abda-4cef-afde-10052d1e3009"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
            "\"Windows\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", "\"Mac\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Unix", {False, "Unix"}], "\" \"", "\"Unix\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNkNuKwkAMhsEerLDsE/gKfQipCoJLF7PL7m0PUQenM8Mkg87bmwot3iX5/\
3w5bIoSMuCoEfI6sAtcwrK6YnfD/pxQelTEsPxTprd3gvyr6Wr4h/\
TXqIc0HhgHmmznBaWnIKDZPgWzkkj/\
BJmLL9iELL69deg5wrqyg2tYtUorjrUUJTEXiCRDZcnasbLmxX6fTsWuV9y0EmX7RhPOwmqLGt+\
V8VKrw2CoSkr4PBhG77xYRjCsNiZCaAnlIx8nJBt8hz/RIRT7YLrR8wRtF2wJ"},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->470277234,ExpressionUUID->"cacc9a45-7bf4-43db-b4a1-e29a0cb07a42"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your function."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2dbf74da-e72a-494e-a1d6-ef97740bf76c"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->789112653,ExpressionUUID->"08449730-8c80-44c1-96a7-f28c94a11a4d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebooks"}], "\" \"", 
            "\"Notebooks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
            "\"Parallel Kernels\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
            "\"Cloud Access\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlUM1qwzAMHmuzJlDKLrv3BfIQIVugrKyl2gs4jsJMFdtY8sFvP2eDkLHb96cPSU1ZQw\
GSCOHpEsVHqWHXfqG+4zA+8PZsOCvFSXDicfPLx0fe3mKeqD6cYO/cnVdwcZ+vKigipOM7BovE/\
5Ulu2/JxeHYaI3Mf1kN5TU4j0ESvLRu8kpMb8hI6lBJDJgTu4sX4+\
xP33pDLt8GI6rPqOgUMS5G9YqEa2c+21GcLLebGg4nKxh8yJG5GKrGJog9Y37G/\
obsYtD4mTxC2UWr58w3NfBx2Q=="},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->32088781,ExpressionUUID->"931ceeb1-5f4f-4728-afb6-53d27b9248e4"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your function is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "f7d46795-aff7-4e30-a6ab-23b4669575d9"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->939592672,ExpressionUUID->"6be8212b-30a6-477e-8cef-ef3f9af13ebd"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Session", {False, "Session"}], "\" \"", 
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Script", {False, "Script"}], "\" \"", 
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
            
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
            
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdUdFqwzAMhK1tEtj2EXvPR3RpChmDlmqw58RRialjG0su5O/\
nlMTJ9mRJd9yd5H2awxZ4UAi7k2frOYek6FDcsL0mtPmSxJAAEkmjYQfCScuQgW9u6DQqeP3BprzXy\
tf8YIR2f64CQ3TYeoUtpB81i+7TNMGpYuxp1r0+0eYSKIv+XERkNpzeOF8FWMqI/\
sv0t120p6jTu9KO0ZcyonGb9V7p2RmLjgd4L0xvg08jleRhcS31XTqje9TjgU92nNEouj4EpWUruW5\
CtT3WijAC2QEVrpHxl4zyvabiOYe3SjM66wLlsXG210M4C2Ewe7kgGe8Efg82xD96LUbOL+VQrkA=\
"},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->360666327,ExpressionUUID->"6660b95b-8c1d-4892-8d64-f1aef23988e8"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your function is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "840b0465-022c-42e0-8715-9a025ccbedec"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->624931977,ExpressionUUID->"3db95d20-fbfa-4096-9fd4-837d6b86a18a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[True, {False, True}], "\" \"", 
            "\"Supported in cloud\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNjkEKwkAMRVGqVhAX7tx5gR5Cq0JBqBgvUNsUB6eTYZIsentnQMVdyH/vJ/\
u8gBnIaBHmtYpXKWBRPrF9YddPOLsYFs7uQTFyleDA320/\
5eym0duAek9BsNsZt2stafc18msgj0FG2JY0+EbMw1gjY5mgjxbv1V4MOU6N/\
82cnzojzSNOs3NjGX/B8ogW/5P0NFkdHJeTAtaVEww+RCQVw+\
JAZLFxBaxuyKShxfvoEfKzujYRb6FXWpA="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->818043737,ExpressionUUID->"9cece0d2-f0fd-4058-bb72-fbd93e490ba1"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the function documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "1ffeae65-1dd7-46fa-9812-127d58cdb82c"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->897529167,ExpressionUUID->"ffc7efdb-ad7a-40f5-b59d-7bfc40e8e349"],

Cell["Additional information about limitations, issues, etc.", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->908162033,ExpressionUUID->"213cfb93-d2d5-445a-b1f6-ab495b5dbdeb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Submission Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter any additional information that you would like to communicate \
to the reviewer here. This section will not be included in the published \
resource.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "bb9a5d16-b9d2-4e75-bd4d-c3f5797f81e9"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Submission Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Submission Notes", "TemplateCellGroup"},
 CellID->321610809,ExpressionUUID->"36bbfdff-817d-48c8-a722-c8779ef08132"],

Cell["Additional information for the reviewer.", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->711457694,ExpressionUUID->"0ab227ca-5b49-4d30-b084-e7d6641340e2"],

Cell["", "Text",
 CellChangeTimes->{{3.872432271242346*^9, 3.872432272242138*^9}},
 CellID->201039185,ExpressionUUID->"6188e568-c137-4c64-bb33-1794e3238c6f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PhysicalQuantityData", "[", "]"}]], "Input",
 CellChangeTimes->{{3.87243240748686*^9, 3.8724324158707037`*^9}},
 CellLabel->"In[432]:=",
 CellID->73405405,ExpressionUUID->"9df86cff-5450-47e2-96af-d9e393f96d00"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         TemplateBox[{"\"Abbe number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbbeNumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbbeNumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absackle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absackle\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absackle\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"abseleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Abseleration\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Abseleration\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absement\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absement\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absement\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"abserk\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Abserk\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Abserk\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absnap\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absnap\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absnap\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute altitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteAltitude\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteAltitude\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute bearing\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteBearing\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteBearing\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute chemical activity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsoluteChemicalActivity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteChemicalActivity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute elongation\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteElongation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteElongation\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute global warming potential\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsoluteGlobalWarmingPotential\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteGlobalWarmingPotential\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"absolute humidity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteHumidity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteHumidity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute magnitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteMagnitude\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteMagnitude\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute magnitude H\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteMagnitudeH\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteMagnitudeH\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute magnitude M\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteMagnitudeM\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteMagnitudeM\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute magnitude M_B\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteMagnitudeMB\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteMagnitudeMB\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute bolometric magnitude M_bol\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsoluteMagnitudeMBolometric\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteMagnitudeMBolometric\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"absolute visual magnitude M_V\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteMagnitudeMV\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteMagnitudeMV\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteMass\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsolutePressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsolutePressure\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute vorticity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteVorticity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteVorticity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absolute vorticity vertical component\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsoluteVorticityVerticalComponent\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsoluteVorticityVerticalComponent\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"absop\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absop\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absop\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absorbance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absorbance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absorbance\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absorbed dose of ionizing radiation\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsorbedDoseOfIonizingRadiation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsorbedDoseOfIonizingRadiation\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"absorbed dose rate of ionizing radiation\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsorbedDoseRateOfIonizingRadiation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsorbedDoseRateOfIonizingRadiation\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"absorptance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Absorptance\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Absorptance\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absorption cross section\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsorptionCrossSection\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsorptionCrossSection\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absorption number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsorptionNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsorptionNumber\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"absorptivity temperature coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AbsorptivityTemperatureCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbsorptivityTemperatureCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"abundance ratio\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AbundanceRatio\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AbundanceRatio\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"accelerating frequency\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcceleratingFrequency\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AcceleratingFrequency\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acceleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Acceleration\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"Acceleration\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acceleration gradient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AccelerationGradient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AccelerationGradient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acceleration number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AccelerationNumber\""}], 
             "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AccelerationNumber\\\"]\"",
            "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acceleration spectral density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AccelerationSpectralDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AccelerationSpectralDensity\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"acceptor density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AcceptorDensity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AcceptorDensity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acentric factor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AcentricFactor\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcentricFactor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"achieved availability\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AchievedAvailability\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AchievedAvailability\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acoustic absorption coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcousticAbsorptionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticAbsorptionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"acoustic attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcousticAttenutationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticAttenutationCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"acoustic dissipation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcousticDissipationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticDissipationCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"acoustic energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AcousticEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acoustic impedance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AcousticImpedance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AcousticImpedance\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"acoustic reflection coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcousticReflectionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticReflectionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"acoustic transmission coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcousticTransmissionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcousticTransmissionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"acousto\[Hyphen]optical figure of merit\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AcoustoOpticalFigureOfMerit\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AcoustoOpticalFigureOfMerit\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"actinic dose\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActinicDose\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ActinicDose\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"action\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Action\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Action\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"activation energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActivationEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ActivationEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"active energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActiveEnergy\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"ActiveEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"active power\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActivePower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ActivePower\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"activity coefficient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActivityCoefficient\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ActivityCoefficient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"activity factor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActivityFactor\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ActivityFactor\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"actual exhaust speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ActualExhaustSpeed\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ActualExhaustSpeed\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic bulk modulus\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticBulkModulus\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AdiabaticBulkModulus\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic compressibility\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticCompressibility\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AdiabaticCompressibility\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic heat capacity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticHeatCapacity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AdiabaticHeatCapacity\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic lapse rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AdiabaticLapseRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AdiabaticLapseRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic linear compressibility\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticLinearCompressibility\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AdiabaticLinearCompressibility\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"adiabatic molar heat capacity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticMolarHeatCapacity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AdiabaticMolarHeatCapacity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"adiabatic specific heat capacity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AdiabaticSpecificHeatCapacity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AdiabaticSpecificHeatCapacity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"adiabatic work\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AdiabaticWork\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AdiabaticWork\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"aerodynamic force\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AerodynamicForce\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AerodynamicForce\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"age\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Age\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Age\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"agricultural yield\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AgriculturalYield\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AgriculturalYield\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"agricultural yield rate\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AgriculturalYieldRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AgriculturalYieldRate\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"air change rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AirChangeRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AirChangeRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"airflow permeability\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AirflowPermeability\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AirflowPermeability\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"air pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AirPressure\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AirPressure\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"airspeed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Airspeed\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Airspeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"air temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AirTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AirTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"albedo\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Albedo\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Albedo\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"alcohol by volume\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AlcoholByVolume\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AlcoholByVolume\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Alfv\[EAcute]n number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AlfvenNumber\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AlfvenNumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Almansi strain\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AlmansiStrain\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AlmansiStrain\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"alpha disintegration energy\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AlphaDisintegrationEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AlphaDisintegrationEnergy\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"alternating current voltage\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AlternatingCurrentVoltage\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AlternatingCurrentVoltage\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"altitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Altitude\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Altitude\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"altitude angle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AltitudeAngle\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AltitudeAngle\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"ambient pressure\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmbientPressure\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AmbientPressure\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"ambient temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmbientTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmbientTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"amount of substance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Amount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Amount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"amount concentration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmountConcentration\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmountConcentration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"amount fraction\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmountFraction\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmountFraction\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"amount of light\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmountOfLight\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmountOfLight\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"amount ratio\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmountRatio\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"AmountRatio\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Amp\[EGrave]re number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmpereNumber\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"AmpereNumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"amplifier current frequency sensitivity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AmplifierCurrentFrequencySensitivity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmplifierCurrentFrequencySensitivity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"amplifier noise slope\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AmplifierNoiseSlope\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AmplifierNoiseSlope\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"plane angle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Angle\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Angle\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle gradient\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleGradient\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleGradient\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"anglement\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Anglement\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Anglement\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of attack\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfAttack\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfAttack\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of deviation\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfDeviation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfDeviation\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of incidence\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfIncidence\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfIncidence\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of optical rotation\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AngleOfOpticalRotation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfOpticalRotation\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of reflection\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfReflection\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngleOfReflection\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of refraction\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfRefraction\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngleOfRefraction\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of repose\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfRepose\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfRepose\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle of vanishing stability\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AngleOfVanishingStability\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfVanishingStability\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"angle per distance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AnglePerDistance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AnglePerDistance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angle per time magnetic flux density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"AnglePerTimeMagneticFluxDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AnglePerTimeMagneticFluxDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"angular acceleration\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularAcceleration\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularAcceleration\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular aperture\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularAperture\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularAperture\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular curvature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularCurvature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularCurvature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"angular diameter\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularDiameter\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularDiameter\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"2819"}, "OutputSizeLimit`Skeleton"], ",", 
         TemplateBox[{"\"volume scattering source function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeScatteringSourceFunction\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeScatteringSourceFunction\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volume scattering transmission function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumeScatteringTransmissionFunction\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeScatteringTransmissionFunction\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volume spread rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeSpreadRate\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeSpreadRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume synthesis rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeSynthesisRate\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumeSynthesisRate\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volume time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumeTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumeTime\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumetric airflow\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumetricAirflow\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumetricAirflow\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumetric flux\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumetricFlux\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricFlux\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumetric heat capacity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumetricHeatCapacity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricHeatCapacity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumetric radioactive activity density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumetricRadioactiveActivityDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricRadioactiveActivityDensity\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volumetric radius\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumetricRadius\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricRadius\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"volumetric thermal expansion coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumetricThermalExpansionCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VolumetricThermalExpansionCoefficient\\\"]\"", "\"physical quantity\""}, 
          "Entity"], ",", 
         TemplateBox[{"\"volumic total cross section\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"VolumicTotalCrossSection\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumicTotalCrossSection\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vorticity\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Vorticity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Vorticity\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"vorticity advection\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"VorticityAdvection\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"VorticityAdvection\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wafer count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaferCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaferCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wafer rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaferRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaferRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"waffle count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaffleCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaffleCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"longitudinal wake field\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WakeFieldLongitudinal\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WakeFieldLongitudinal\\\"]\
\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"longitudinal wake potential\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WakePotentialLongitudinal\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WakePotentialLongitudinal\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"transversal wake potential\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WakePotentialTransversal\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WakePotentialTransversal\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"walking speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WalkingSpeed\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"WalkingSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"warping constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WarpingConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WarpingConstant\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"water energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaterEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaterEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"water number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaterNumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaterNumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"water potential\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaterPotential\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaterPotential\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave amplitude\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveAmplitude\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveAmplitude\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave attenuation coefficient\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveAttenuationCoefficient\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveAttenuationCoefficient\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave coherence length\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveCoherenceLength\""}],
              "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveCoherenceLength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"1\[Hyphen]dimensional bound state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState1DMomentumRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState1DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"1\[Hyphen]dimensional bound state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState1DPositionRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState1DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"2\[Hyphen]dimensional bound state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState2DMomentumRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState2DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"2\[Hyphen]dimensional bound state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState2DPositionRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState2DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"3\[Hyphen]dimensional bound state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState3DMomentumRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState3DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"3\[Hyphen]dimensional bound state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState3DPositionRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState3DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"4\[Hyphen]dimensional bound state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState4DMomentumRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState4DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"4\[Hyphen]dimensional bound state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionBoundState4DPositionRepresentation\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionBoundState4DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"1\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState1DMomentumRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState1DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"1\[Hyphen]dimensional scattering state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState1DPositionRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState1DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"2\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState2DMomentumRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState2DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"2\[Hyphen]dimensional scattering state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState2DPositionRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState2DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"3\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState3DMomentumRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState3DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"3\[Hyphen]dimensional scattering state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState3DPositionRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState3DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"4\[Hyphen]dimensional scattering state momentum space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState4DMomentumRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState4DMomentumRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{
          "\"4\[Hyphen]dimensional scattering state position space wave \
function\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WaveFunctionScatteringState4DPositionRepresentation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WaveFunctionScatteringState4DPositionRepresentation\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wavelength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Wavelength\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wavelength\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wavelength temperature product\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WavelengthTemperatureProduct\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WavelengthTemperatureProduct\\\"]\"", "\"physical quantity\""}, "Entity"],
          ",", 
         TemplateBox[{"\"wave mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wavenumber\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Wavenumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wavenumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave power\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WavePower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WavePower\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveSpeed\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wave vector\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveVector\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveVector\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"weak coupling\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WeakCoupling\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"WeakCoupling\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"weak mixing angle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WeakMixingAngle\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WeakMixingAngle\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wear factor\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WearFactor\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WearFactor\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wear rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WearRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WearRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Weber number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WeberNumber\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WeberNumber\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wedge count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WedgeCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WedgeCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"weight\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Weight\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Weight\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Weiss constant\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WeissConstant\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WeissConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Weissenberg number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WeissenbergNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WeissenbergNumber\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wet biomass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WetBiomass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WetBiomass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wet bulb globe temperature\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WetBulbGlobeTemperature\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WetBulbGlobeTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wet\[Hyphen]bulb temperature\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WetBulbTemperature\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WetBulbTemperature\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wet mass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WetMass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WetMass\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wetted perimeter\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WettedPerimeter\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WettedPerimeter\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"width\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Width\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Width\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Wiedemann\[Hyphen]Franz law ratio\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WiedemannFranzLawRatio\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WiedemannFranzLawRatio\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wilting point\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WiltingPoint\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"WiltingPoint\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wind energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WindEnergy\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WindEnergy\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"winding count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WindingCount\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"WindingCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wind power\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WindPower\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WindPower\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wind speed\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WindSpeed\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WindSpeed\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wing area\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WingArea\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WingArea\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wing count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WingCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WingCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wing loading\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WingLoading\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WingLoading\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wingspan\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Wingspan\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Wingspan\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"current\[Hyphen]carrying capacity of a wire\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"WireCurrentCarryingCapacity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WireCurrentCarryingCapacity\\\"]\"", "\"physical quantity\""}, "Entity"], 
         ",", 
         TemplateBox[{"\"Wolfram credit count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WolframCreditCount\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WolframCreditCount\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Womersley number\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WomersleyNumber\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WomersleyNumber\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"word correct count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WordCorrectCount\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WordCorrectCount\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"word count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WordCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WordCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"word per page\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WordPerPage\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WordPerPage\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"word rate\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WordRate\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WordRate\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"word size\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WordSize\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WordSize\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Work\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Work\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work function\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkFunction\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorkFunction\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"working tension\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkingTension\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WorkingTension\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"working time\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkingTime\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorkingTime\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work per weight\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkPerWeight\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WorkPerWeight\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work to elastic limit\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkToElasticLimit\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"WorkToElasticLimit\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"work to maximum load\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorkToMaximumLoad\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorkToMaximumLoad\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"world population\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WorldPopulation\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorldPopulation\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wrap count\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WrapCount\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"WrapCount\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"wrap linear density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"WrapLinearDensity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WrapLinearDensity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"X\[Hyphen]ray brilliance\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"XRayBrilliance\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"XRayBrilliance\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"X\[Hyphen]ray detector sensitivity\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"XRayDetectorSensitivity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"XRayDetectorSensitivity\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yarn yield\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YardYield\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"YardYield\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yarn inverse linear density\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"YarnInverseLinearDensity\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"YarnInverseLinearDensity\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yarn linear density\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YarnLinearDensity\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"YarnLinearDensity\
\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yaw\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Yaw\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Yaw\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"yield strength\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YieldStrength\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"YieldStrength\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Young modulus\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YoungModulus\""}], "]"}],
            "\"Entity[\\\"PhysicalQuantity\\\", \\\"YoungModulus\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"Yukawa coupling\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"YukawaCoupling\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"YukawaCoupling\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"zenith angle\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ZenithAngle\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"ZenithAngle\\\"]\"", 
           "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"zero\[Hyphen]point energy\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"ZeroPointEnergy\""}], 
             "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ZeroPointEnergy\\\
\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"zeroth\[Hyphen]order rate constant\"", 
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"PhysicalQuantity\"", ",", 
               "\"ZerothOrderRateConstant\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ZerothOrderRateConstant\\\"]\"", "\"physical quantity\""}, "Entity"], ",", 
         TemplateBox[{"\"zoomass\"", 
           RowBox[{"Entity", "[", 
             RowBox[{"\"PhysicalQuantity\"", ",", "\"Zoomass\""}], "]"}], 
           "\"Entity[\\\"PhysicalQuantity\\\", \\\"Zoomass\\\"]\"", 
           "\"physical quantity\""}, "Entity"]}], "}"}], Short[#, 5]& ], 
   "line" -> 432, "sessionID" -> 19481530930193409726, "byteCount" -> 485632, 
   "size" -> 5, "stored" -> False, "expr" -> Missing["NotStored"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.872432419421234*^9},
 CellLabel->"Out[432]=",
 CellID->104133020,ExpressionUUID->"a71af164-6bcd-486f-9147-b19d2c16f76c"]
}, Open  ]],

Cell["A", "Text",
 CellChangeTimes->{{3.872432448886124*^9, 3.8724324494090242`*^9}},
 CellID->178969966,ExpressionUUID->"6dd70545-1c88-4a27-9b34-2e08cd25b591"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AssociationMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"#", "[", "\"\<CanonicalUnit\>\"", "]"}], ",", 
      RowBox[{"#", "[", "\"\<SIUnit\>\"", "]"}], ",", 
      RowBox[{"#", "[", "\"\<SIBaseUnit\>\"", "]"}]}], "}"}], "&"}], ",", 
   RowBox[{"PhysicalQuantityData", "[", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8724324234910216`*^9, 3.8724324578574514`*^9}},
 CellLabel->"In[433]:=",
 CellID->493430613,ExpressionUUID->"8f6f6af0-34b3-46a2-b101-d8b3b48d6e39"],

Cell[BoxData[
 TemplateBox[{
  "URLFetch", "ssl", 
   "\"An SSL error occurred. The raw details are: \\\"libcurl error \
(\\!\\(\\*RowBox[{\\\"35\\\"}]\\)): \\!\\(\\*RowBox[{\\\"\\\\\\\"schannel: \
failed to receive handshake, SSL/TLS connection \
failed\\\\\\\"\\\"}]\\)\\\"\"", 2, 433, 156, 19481530930193409726, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.872433971910855*^9},
 CellLabel->"During evaluation of In[433]:=",
 CellID->22738089,ExpressionUUID->"39a2af29-43a6-4cfd-a39d-60f8b12ac6b0"],

Cell[BoxData[
 TemplateBox[{
  "EntityValue", "nodat", 
   "\"Unable to download data. Some or all results may be missing.\"", 2, 433,
    157, 19481530930193409726, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.872433972312033*^9},
 CellLabel->"During evaluation of In[433]:=",
 CellID->615296961,ExpressionUUID->"5af4c0cb-e9ec-4878-8e1b-83519aac3cc0"],

Cell[BoxData[
 TemplateBox[{
  "URLFetch", "ssl", 
   "\"An SSL error occurred. The raw details are: \\\"libcurl error \
(\\!\\(\\*RowBox[{\\\"35\\\"}]\\)): \\!\\(\\*RowBox[{\\\"\\\\\\\"schannel: \
failed to receive handshake, SSL/TLS connection \
failed\\\\\\\"\\\"}]\\)\\\"\"", 2, 433, 158, 19481530930193409726, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.872433972668347*^9},
 CellLabel->"During evaluation of In[433]:=",
 CellID->443339492,ExpressionUUID->"f3b7cbd5-503c-450d-ba40-498ccc786a97"],

Cell[BoxData[
 TemplateBox[{
  "EntityValue", "nodat", 
   "\"Unable to download data. Some or all results may be missing.\"", 2, 433,
    159, 19481530930193409726, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8724339729706535`*^9},
 CellLabel->"During evaluation of In[433]:=",
 CellID->49832043,ExpressionUUID->"d7702ed0-5c05-4580-b5bc-69b4655e814b"],

Cell[BoxData[
 TemplateBox[{
  "URLFetch", "ssl", 
   "\"An SSL error occurred. The raw details are: \\\"libcurl error \
(\\!\\(\\*RowBox[{\\\"35\\\"}]\\)): \\!\\(\\*RowBox[{\\\"\\\\\\\"schannel: \
failed to receive handshake, SSL/TLS connection \
failed\\\\\\\"\\\"}]\\)\\\"\"", 2, 433, 160, 19481530930193409726, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8724339731981287`*^9},
 CellLabel->"During evaluation of In[433]:=",
 CellID->261091272,ExpressionUUID->"a8bd39d0-aabb-4c35-8f75-bcf3b55b7499"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"URLFetch\\\", \
\\\"::\\\", \\\"ssl\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 433, 161, 19481530930193409726, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8724339733883967`*^9},
 CellLabel->"During evaluation of In[433]:=",
 CellID->647958852,ExpressionUUID->"102709b8-788a-42bf-aab8-fcda0d511f7f"],

Cell[BoxData[
 TemplateBox[{
  "EntityValue", "nodat", 
   "\"Unable to download data. Some or all results may be missing.\"", 2, 433,
    162, 19481530930193409726, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8724339735788755`*^9},
 CellLabel->"During evaluation of In[433]:=",
 CellID->418358923,ExpressionUUID->"562b100e-4076-4b05-9445-f04959b7cb9c"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"EntityValue\\\", \\\"::\
\\\", \\\"nodat\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 433, 163, 19481530930193409726, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8724339737991257`*^9},
 CellLabel->"During evaluation of In[433]:=",
 CellID->212328181,ExpressionUUID->"5a3733bd-a40f-4ddc-8074-1804e6106f20"],

Cell[BoxData[
 TemplateBox[{
  "EntityValue", "conopen", 
   "\"Using \\!\\(\\*RowBox[{\\\"EntityValue\\\"}]\\) requires internet \
connectivity. Please check your network connection. You may need to configure \
your firewall program or set a proxy in the Internet Connectivity tab of the \
Preferences dialog.\"", 2, 433, 164, 19481530930193409726, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.872434286326848*^9},
 CellLabel->"During evaluation of In[433]:=",
 CellID->14718010,ExpressionUUID->"e9dcf118-4e22-4bb9-8fbb-9462d82f5884"],

Cell[BoxData[
 TemplateBox[{
  "EntityValue", "conopen", 
   "\"Using \\!\\(\\*RowBox[{\\\"EntityValue\\\"}]\\) requires internet \
connectivity. Please check your network connection. You may need to configure \
your firewall program or set a proxy in the Internet Connectivity tab of the \
Preferences dialog.\"", 2, 433, 165, 19481530930193409726, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8724342867868443`*^9},
 CellLabel->"During evaluation of In[433]:=",
 CellID->78084987,ExpressionUUID->"70de6d48-b80c-4c7d-89f2-c863c27605bd"],

Cell[BoxData[
 TemplateBox[{
  "EntityValue", "conopen", 
   "\"Using \\!\\(\\*RowBox[{\\\"EntityValue\\\"}]\\) requires internet \
connectivity. Please check your network connection. You may need to configure \
your firewall program or set a proxy in the Internet Connectivity tab of the \
Preferences dialog.\"", 2, 433, 166, 19481530930193409726, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.872434287281846*^9},
 CellLabel->"During evaluation of In[433]:=",
 CellID->175043491,ExpressionUUID->"fc7c9efd-3cdd-4b64-8495-7a590b0d73d8"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"EntityValue\\\", \\\"::\
\\\", \\\"conopen\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 433, 167, 19481530930193409726, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.872434287489847*^9},
 CellLabel->"During evaluation of In[433]:=",
 CellID->54582453,ExpressionUUID->"e4dd08ef-7225-494e-9f7a-c932321d9b64"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{574.8, Automatic},
WindowMargins->{{Automatic, -4.7999999999999545`}, {Automatic, 0}},
Visible->True,
TaggingRules->{
 "ResourceType" -> "Function", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "1.6.4", "CreationTimestamp" -> 
  3.8724292188328055`17.3405584775276*^9, "UpdatedTimestamp" -> 
  3.8724292188328055`17.3405584775276*^9, "CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWVtT20YUrjEQBhxaMulMkyc98EAyadJpO9NL2iauDcQdIMCa9JW1dGQ0rHeV3RWg\
X9a/17MrydhGciTbTFNPJsja1XfOnut3LH9JPWqJQSgi7u3ehBKUCgT3a2rlJApA+/nLS2qp4+P/\
9Sb38M/K7seIMrW5/QGkWT+KBj2Q0refnbdmB6EDOMGLRiuSErj+QFkE/\
hfq0e4VXlFtnhIaekJc4q7lg0Bp1ejSfj/g/dOIgSKNU1Aiki504xDIcptqimouv+\
cuFGq58icT7qXZlgButwTXcKOPqb7w60UnPwLwFNnJ5JFYaRi0WIBqn7fBD3gwqu757SOOUSp7LG+\
rWj6KGEPFXt5dTAWcQh9VBYma+kE/ktY0w+O+KavUKYRCBVrIOAFMcFQKVLf+\
q6m1PRqwSKJnaurhMXUZ6A5XmjJGvinS0F+\
dxdgzmbXRFWOeWSdaYjz8JQIjr35IQ3uGiLvmSX8lkUyeFBrXKkeVCeuNBIuELNDmNmFCt2qkdk6Wf\
v195MbS63WrPMavIs/KKv/\
cXy6wUp2AkbfeFtfcJoFSv5RFzS7eRxrdCJ5JqHX0NKMuNDGuFgi7YZKuDYzG4CHuxjvBPHQkBiZXf\
5QFPpbBFQKeXyVlYV8CfpPqwRlXaTnIsUa7KjoNQ+DeGb+\
g3GPgtYAxNdUwi5IwxUb4tbKVXITFipcikK0uDPAAGoy4fSmicH5QzN1Gk5krLAdXGNBft3BTX8gA1\
LetC3Ave+IGb2/e3jbSSSNbs982UR6NmLb5zXWOpuTL7BaBJDdzXV26mg0doS674iz08Dqt+\
8VeXgD4mIPreONBlgJr+0z0KDu/MC1t1KLqp7Ji90G/\
CzwPeFKIyqfrHuVu3LoQgQvtgDLRH1WskSomNXZJ7K9YlCm/\
zFOd4uqWXTU9icDHCPDU5FFqAeZlAk+\
wXQzPOy5gBCxrKStdGdnUnrNKVGl22UUWdCkNUd9XVYH3quRYSmUmpY5ZKLPnEVwP7Zlr4yRB1GFVl\
bcjBQfQp27c6XMhk+qU+VotG2/kJ9/rspJycCcSb1oazilmWo1dUqsH+\
KQtjHtV7dYHnZWxcYkLSyVMiQ3UHLAuUgXqPtQtzEak0JY1r5rdnbbJS6ufetDBmt3HSF3rcCss/\
oSR60OtCw6eApeue9mJ1LAz3IHt3Vp7KH5EZk3tVm6DlAseuJQdSxECWsvyuVl1HlE0f4hYSotho6m\
UcAPLvU9Us3Juh6m2JEb144GJobWmJSNdsRg4GyZkk1igQ9DUM/\
NBOoGRtVagkwHkSbLj1Sn4IE10O9nSbXVZjFdGhE6olUxPwxkqGUGXD9Dmd0bPL+zn+\
VucCeYZVqZMEhX4/fNClGqEvhrONAb/YyESDoGXtA/ERYdU4+1nhZhJt8uLg0TYzET+3kROZ/\
YlrVeGz88E9Zmx+OP5vVCB1t+HtFl4/k6hHpPEvjht/ydMfqZqgQDffbJeTVLn1tzOtQz+\
VSHMfVD2YqXHzDMzUX9RiD8fM6+KW5aK/1bOHv8tAZ9Lyc+Idv9ceA7iShpi/ZnMkHl49+\
uS7SqXbc+s6ox0uzPlN/bsx3HMtiicFDuddi8UdpH0ex7nlCTdtbHf2yfeAuUz8R/sZ+etcc9oqyP/\
1LoXgXJ4qqpjqBiVytHC6YHj2i7iOb4UA4c6HK5BOmmHeeEogf8G4Pi4KcIocAY0NkjOtZCIpBy4CT\
F2wHvptIUTi8i5DtSFgdYydmikxQAPizZgseMKjrgaw8/RYwrhboqrgxC39hhk0t/cTg/\
1dHpYy6aH8TlCbaLrk2YjJJVx4TBiHTj5bmz4CqLgfdhDgg6L1CGioG9x+\
xY6tG9AO9zDs2EcDuvRetMalxpasHaEJNB0BOvNVRIPeoKRp8nbn0PKEUyeJ9+Snkce5811pZ/+\
KouXDOV2vNqeXMp9D7QyIujZnSeKiMG4/\
WyabbVsUI30dbWyR5mC4Y6npzAQV7A7CHW8e0ORJGTUV01ufdzMGR2GbTwVmCj3d8A9cd0NNHoiRcl\
98fkvn3IKDA=="]]], "DefinitionNotebookFramework" -> 
  "DefinitionNotebookClient", 
  "RuntimeConfiguration" -> {
   "LoadingMethod" -> "Paclet", "PacletName" -> "FunctionResource", 
    "Contexts" -> {
     "FunctionResource`", "FunctionResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Legacy"}, "ToolsOpen" -> True, "StatusMessage" -> 
  "", "SubmissionReviewData" -> {"Review" -> False}, "AutoUpdate" -> True},
CreateCellID->True,
FrontEndVersion->"13.1 for Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.92157, 0.34118, 0.10588], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}], 
   Cell["Hint Styles", "Section"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell["Template Boxes", "Section"], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Subscripted Variable\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert subscripted variable placeholder\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3787878858871814623; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Subscripted Variable"; 
                    DefinitionNotebookClient`SubscriptInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3787878858871814623]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2572781756330727330; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2572781756330727330]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              GrayLevel[0.9]}}, 
          GridBoxFrame -> {
           "Columns" -> False, "RowsIndexed" -> {1 -> GrayLevel[0.9]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.022222], {
                   FaceForm[{
                    RGBColor[0.87451, 0.27843, 0.031373], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{45., 22.5}, {45., 10.074}, {34.926, 0.}, {22.5, 
                    0.}, {10.074, 0.}, {0., 10.074}, {0., 22.5}, {0., 
                    34.926}, {10.074, 45.}, {22.5, 45.}, {34.926, 45.}, {45., 
                    34.926}, {45., 22.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLckSxqe7SdlhmnN3zvPblg4w/smyffOl/K0cEp5e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcLUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzAHLC+HjtHICGz32fruGQC1Zo57BASv+uCpsW
RP9Me4g9YjoQe3gcHICqlx/z1nNgAAEFB4j6Y/oOQMvOfVd2gLhjlgGEz+zg
oBnTf+irhiFEfw/UvDJDiP2+9g7qhhxrZGYZQtS9sHP48vdKxcs2Q4i72u0c
pEHOSTSEuxfsTiFDiPhCWwcXoHd+rzRwWOS67fPfEFuHx0tnH1EoMHDYUJQx
8a2MrUPQDrnW14IGUPfaOnzTAFq0VR8aXrYOoFA6V64HcccvWwfTuF2ePEy6
UPPtHIC+CH68VBvOP70QaNFeLTg/X6j5wKlELYdPl3yTBCLsIP7U0YK49y3U
PR80HQJ6p+cJHbaB88HqZ1jD1QNdUyWSZwWJH2stiHtuWcLdC+ND4lvfwbzT
MeHpBEt4+IPld1lA4p9DH+LuVgu4eeh8sH18hnA+2J6velB3aUHSyxE9iP8U
9aDpBMH3A/rWskQHYt8JBQw+TD0kPpTh5sHSMzgd/0TwYe6B8WHulY1Ksb7f
rwDng+PHSQES31csIPF7UREePgCOg02w
                    "], {{19.051, 14.242}, {19.051, 27.594}, {23.828, 
                    27.594}, {23.828, 26.543}, {21.426, 26.309}, {21.375, 
                    26.258}, {21.375, 24.219}, {21.375, 17.535}, {21.375, 
                    15.602}, {21.426, 15.547}, {23.828, 15.316}, {23.828, 
                    14.242}}, {{24.578, 18.75}, {24.578, 23.078}, {24.578, 
                    23.539}, {24.953, 23.914}, {25.418, 23.91}, {29.746, 
                    23.91}, {30.203, 23.91}, {30.578, 23.539}, {30.578, 
                    23.078}, {30.578, 18.75}, {30.582, 18.289}, {30.207, 
                    17.91}, {29.746, 17.91}, {25.418, 17.91}, {24.953, 
                    17.906}, {24.574, 18.285}, {24.578, 18.75}}, {{31.328, 
                    14.242}, {31.328, 15.316}, {33.684, 15.539}, {33.789, 
                    15.602}, {33.789, 17.641}, {33.789, 24.188}, {33.789, 
                    26.227}, {33.684, 26.281}, {31.328, 26.512}, {31.328, 
                    27.586}, {36.113, 27.586}, {36.113, 14.234}}}]}}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], AspectRatio -> Automatic, Background -> 
                  RGBColor[0.98824, 0.41961, 0.20392], 
                  ImageSize -> {45., 45.}, 
                  PlotRange -> {{0., 45.}, {0., 45.}}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Function Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {2 -> RGBColor[1., 1., 1.]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> RGBColor[1., 1., 1.], 
                 StripOnInput -> False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Function Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> RGBColor[1., 1., 1.], 
               StripOnInput -> False], 
              "https://resources.wolframcloud.com/FunctionRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Open Sample\"", 
                "\"View a completed sample definition notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 4393071033038384034; (
                DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                DefinitionNotebookClient`ViewExampleNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[4393071033038384034]]& , 
              "\"View a completed sample definition notebook\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Style Guidelines\"", 
                "\"View general guidelines for authoring resource \
functions\""}, "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring resource functions\"", 
              False}, "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[0.99412, 0.7098, 0.60196]], "Grid"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Check\"", "\"Check notebook for potential errors\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 7891204313296928191; (
                DefinitionNotebookClient`$ClickedButton = "Check"; 
                DefinitionNotebookClient`CheckDefinitionNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[7891204313296928191]]& , 
              "\"Check notebook for potential errors\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{"\"Preview\"", "\"Generate a preview notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 4299709568580201021; (
                DefinitionNotebookClient`$ClickedButton = "Preview"; 
                DefinitionNotebookClient`PreviewResource[
                  ButtonNotebook[], "Notebook"]), 
               DefinitionNotebookClient`ButtonCodeID[4299709568580201021]]& , 
              "\"Generate a preview notebook\"", True}, 
             "OrangeButtonTemplate"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"For my cloud account\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1389539917011878958; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "For my cloud account"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPrivate"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1389539917011878958]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], 
              "\"In this session only (without documentation)\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8586347731213964380; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only (without documentation)"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8586347731213964380]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your function submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your function submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your function to the Wolfram Function \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your function to the Wolfram Function \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.98824, 0.41961, 0.20392], 
              RGBColor[0.92157, 0.34118, 0.10588]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.98824, 0.41961, 0.20392], 2 -> 
              RGBColor[0.92157, 0.34118, 0.10588]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[0.98824, 0.41961, 0.20392]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.022222], {
                FaceForm[{
                  RGBColor[0.87451, 0.27843, 0.031373], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{45., 22.5}, {45., 10.074}, {34.926, 0.}, {22.5, 
                 0.}, {10.074, 0.}, {0., 10.074}, {0., 22.5}, {0., 34.926}, {
                 10.074, 45.}, {22.5, 45.}, {34.926, 45.}, {45., 34.926}, {
                 45., 22.5}}}]}, {
                FaceForm[{
                  RGBColor[1., 1., 1.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                  2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLckSxqe7SdlhmnN3zvPblg4w/smyffOl/K0cEp5e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcLUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzAHLC+HjtHICGz32fruGQC1Zo57BASv+uCpsW
RP9Me4g9YjoQe3gcHICqlx/z1nNgAAEFB4j6Y/oOQMvOfVd2gLhjlgGEz+zg
oBnTf+irhiFEfw/UvDJDiP2+9g7qhhxrZGYZQtS9sHP48vdKxcs2Q4i72u0c
pEHOSTSEuxfsTiFDiPhCWwcXoHd+rzRwWOS67fPfEFuHx0tnH1EoMHDYUJQx
8a2MrUPQDrnW14IGUPfaOnzTAFq0VR8aXrYOoFA6V64HcccvWwfTuF2ePEy6
UPPtHIC+CH68VBvOP70QaNFeLTg/X6j5wKlELYdPl3yTBCLsIP7U0YK49y3U
PR80HQJ6p+cJHbaB88HqZ1jD1QNdUyWSZwWJH2stiHtuWcLdC+ND4lvfwbzT
MeHpBEt4+IPld1lA4p9DH+LuVgu4eeh8sH18hnA+2J6velB3aUHSyxE9iP8U
9aDpBMH3A/rWskQHYt8JBQw+TD0kPpTh5sHSMzgd/0TwYe6B8WHulY1Ksb7f
rwDng+PHSQES31csIPF7UREePgCOg02w
                  "], {{19.051, 14.242}, {19.051, 27.594}, {23.828, 27.594}, {
                  23.828, 26.543}, {21.426, 26.309}, {21.375, 26.258}, {
                  21.375, 24.219}, {21.375, 17.535}, {21.375, 15.602}, {
                  21.426, 15.547}, {23.828, 15.316}, {23.828, 14.242}}, {{
                  24.578, 18.75}, {24.578, 23.078}, {24.578, 23.539}, {24.953,
                   23.914}, {25.418, 23.91}, {29.746, 23.91}, {30.203, 
                  23.91}, {30.578, 23.539}, {30.578, 23.078}, {30.578, 
                  18.75}, {30.582, 18.289}, {30.207, 17.91}, {29.746, 
                  17.91}, {25.418, 17.91}, {24.953, 17.906}, {24.574, 
                  18.285}, {24.578, 18.75}}, {{31.328, 14.242}, {31.328, 
                  15.316}, {33.684, 15.539}, {33.789, 15.602}, {33.789, 
                  17.641}, {33.789, 24.188}, {33.789, 26.227}, {33.684, 
                  26.281}, {31.328, 26.512}, {31.328, 27.586}, {36.113, 
                  27.586}, {36.113, 14.234}}}]}}, {
              ImageSize -> 12, AspectRatio -> Automatic, Background -> None, 
               ImageSize -> {45., 45.}, PlotRange -> {{0., 45.}, {0., 45.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.95686, 0.80196, 0.75]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4HW4NCUIlyHPAkQfuPPftue4ZskMQUA2UAQoTpQhYVJ3
XXgumzLgQkBZoBo8hjwLFLtuzQJSbIbDELA4UA1QJXZDwqSgJhCBgCrh7kE2
BL8vsPsL1RBgiOHzBQ5/QcIZbggw5ElyBgQBdSEbAoxBMgwB6gLqhaRGIAOY
EsgwBKgLYggQUG4IVVxCxTChSuxQJZ1QJcVSK+9QJxdTqTyhWslGbhmLHxBT
2gMAMUz3Hw==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4HW4NCUIlyF3/cTOOAvtteRZb8ABQUA2UAQoTowhL0Ol
jtrxL9dmw4WAskA1eAy57y++yYgTjwkQBFQDVInVEKD5xJgANwfuHmRD8PsC
q7/QDAGGGEkmQBAknOGGAEOeDEOAupANAcYgGYYAdQH1QlIjkAFMCWQYAtQF
MQQIKDeEKi6hYphQJXaokk6okmKplXeokoupVZ5Qq2Qju4zFD4gp7QFpR8IT

             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4HW4NCUIlyHvKz2/LG7+eWr737fPIAjIBooAxYkx5E2M
0rets/E4GygLVIPHkHclTn+e3gaK/P76+drsrsN5IRudFCEIyAaKAMWBskA1
QJVYDQGaDzHh5amDm9xUl2uzYSKgOFAWYg7cPciGQHwBVINVOzKCmANUj2YI
MMQgvsDlBjT3QPwFCWe4IcCQBzKAviZoAgQBVQLVA3UhGwKMQSADGHpEGgJU
CVQP1AXUC0mNQAYwJQAZwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8oRaJRvZZSx+QExpDwAxBaHa
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.92157, 0.34118, 0.10588], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.92157, 0.34118, 0.10588], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJzNWHlMVEcYf28XlGM5VlcRapRDDFK0sBaLBWVXUDxTKpe4JgvoQlALAsvV
hHIoV4KK6wGiQlUqoqDcKKysDSZtPZJWTTzaxGrV2mqrNtqKB3Qnz8+Zd6Cv
tn90vkgyv+/4zc58M9/3dEtIXZoooSgqw8r8Z2l8tjo9PT43wtE8iUrJSE5K
0a1akKLXJenSAxKkZlD58h9y+X+M8Z7a/I3G7V/lHQgKp2kGmzw9rcrQb+j/
ZItPIGBvNywsVVGVJ01DWAqbpBYUFZ1hGsTYvssRqTLHt4nvoIgvbP6ZjM+I
Nt9PzUePPdbvcvX+ZwzTQ9vv8yMh6R04fFNY0/ciOkM8wzjXY4+F47xJgiPF
cqRuY3kOlnUGLFq4khsv53NPv8zd7NXs/lYsR+158Gm9l1Tu7IYwmq7oJaMd
uWMnR7jMMXLd/isYt7UXx4F9Rjtj1NmNXPPsCKyh6S9+AHzUOHEcpR3gMWM+
iQdHrq1kZFkmidvYQS633399ZBf31G21F/ZdLmmvPo0zVcyalCFg33Qr78Ce
7+qv5jdOm8W3e39u9yN+npR3ieHQ5ArlWGwW28pBIXwfilvFcESnC2eyMoS0
ii8UstncZ2XDjiaROihGjbMcyWVJLBP0N2ELC8vm229icHFPKKo+Y3zK3Jj6
q2lV3gFvZpk4BfSqKHwfFC4fLNDml3cVt2IGO7m+5sRzfoSNxglemGVV8dZT
yRXqaKeJ5V1gkWIALX5bk8r5u+3x3qEbwvuN3kJ1DN9j5mLQdz60skXIeM9X
PoPMnWYzdD4cjoGRMC3XRyI5+CNolyQhJK4A5mWdXGs7Ofs3HP+z9nz16fbf
Scz41Muf67c8B7Q7z6L5RiPMAxZxbfU1OFbDtVDNSGtmnb4qQz/W1F1ElYsc
8rG9A6BF8x1fw2zhSnbddHHHJ115kl3rJNI1mzBL6HI2x9SglrugQzHzG7Ft
RQ95IglF+DfwqylNb2gRugnWMnNteFWLj/+FsNlLyd3tfoTrTPWZV+vUcBnQ
cHbre8HoTzy3ljGYxzT2Cep3MespaibRtZWwGy9vnPmkmXPgjy1fgte7Mxlk
fhwZa/8V+9EQTZuPzwg4HBSA1J4XZqCotB1gExTO58hrYOoYM5RzcCcAHHIn
QKpPD8eBzx12GHP0PAlfjXPI3C8J7JXlSNjt9vuSYVrKkjbwUs4R2quCwxLU
mFJTZpCoaQjXuPqrgPmqhBhs7XH1lTsxmP889su24lOEZuzEyJE7ZJ3Gu23o
Z9bDHvitrb2A0Um+NedwxKO/IGzrKZhn15FnRFHeAdh2zSZuXxscCXtpGorR
kxqpRWx2zxPQsTk8/bgrxe+MaWj9UXw/be11pZih5VduxzPCqu03kiPFALPM
3VyOCV5kv9P3ovJk6rbkipI2du3n39AwLegO3UBzn0CYH3vMfzHUMeyM4Mu6
7Vwfiqr6BrRxBWhO0/suAxK5jm8fpoX7LszAz4bJStAanylcGCwiFbD9V2ja
xk4ZosmNTsc+Xv51F4Xit9yduwJbqaJ0JYEfoT4xaw9YFDaBVuaId93cVb58
MxPLsL/UIlSz2URmft3FGL2tA7YI1UAONF7HOeWnxhb6XULrJFnQsLHz+XDW
x6ooZQjcOD4DKXsvkfnu6i1kYxpaVcw/H/5QRQl7L0lk27HfLJCtp8Rw6EqF
fDe08F+54MjaC0jX8aDpFtglV4jhCAoH+44HzPvdfFuTy63xMGwd5GMpKq8B
fNTRpNZj2vw4RvznkfhoZ7A/fBO9AdzTEhrM70HiNBGj1jJcRY3PJvmSHod+
Ao3Yr2j8HVXeNXMx7Cr7K7HmHOzFZGXWHpytjmPEcXx2kIzWcG15juOYqUHk
dz+S2OwRVmFa3DkhaboljgF1R9wc6R3A/RJIz5PWe1wsNlssB0XFZgllI8Qe
TrOhxcJSPAfqIjabhOLkNYSvFsL3XlqsG67qv264eqcYuv4gI9V/bz+Kptcf
IbETz4ualXP+zf/+WMuWJO08i2J1P0qrYjJTIl2WyXx5NV6PK1C88/bR/7vx
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1:eJzNWG1MU1cY7m1vS4GWttBLy0dLWyhl5aultrT0C2QzM5rMIWgyluDHkMwf
YgBF9gc1cWpijDNuRNFsv2Rmuqmb/NjIYIFkG2qyAYnAljidODfdmItu+AHs
Xi6n59x7D3LH9mPnRJLzvB/Pue95z3nfat3UWLVFKpFImpX0n6qNrRVNTRvb
1mrpRc225tcbttW/tnJbS31DfZN/k4wGS+b/MSb/jxFvt7QX95R86TytXyMh
WEztye1w97v7c97SBAG2tEHIqRpXX/ksnPlnCVIiMTWXz0DMN5rZSGqX4l+u
t+wp+wn1z05Lu7ZCiIYfOjoTnf+MQfd8aFLoiZmRR4FbeEl02tQsnkFpCT/E
+1lsUtViOezHOJYzhZdSVqVt5vvLe0/ldpzk7mbZN2I5vEPAJnjPdlBpnQOJ
4s9Qb2V3SB0Dk9rM7b4xiJNJ4jigjSINiaAV3TO1FjEgSr+PWRjFcRR+AiyS
X0RxqjrnCDtNO1Bcpga5HJp8tud4m/2Yd9g3WvixZxBmqpg96SqBfmDCeXrZ
t6XjzjOaMEbvhfADYZ4UdYvhMLfhcsy8k6sl1+PvQ8EFMRymJnwm6ypRLcse
nI7rc1kC1xshk+sVRmkcn8V2AGvfi1jKy24vxhBvs+71XI4+Zm9M6XhuR5J/
cZaE54CcqoH3IS49eaWlvai74AJkIHWOE9GnQg/FPQl5kMW6zz2QfSh1nTKr
qBto2I8CKXxbbQeF0VYVB27i4828hanrhRYpq4E8dF+WOBcFe8xmZv5OcxhC
9xdiYKexjm9DSP0/AGl6A4NYdoN14SW+NqnjfkPkT++QZzD0G4pFH6u9fDvz
LiD1XGHWxT1gnbKKr+s4AX35rxtqpfHsPrXl7n4o8Y4wlQsditTIIyBl1iVf
gVXaZm7djLfBk3b1cWsdIcs5DFkMr3A5NKHg3RgH7dN5BsmUT9ETse6F34Cp
pkTBedxNkKno2hCrxZG/GIyq4mTKA1hnPJdj+6wVMEiYlzg6PX8mT2UqFlMV
cU/Q0cnuJ/8ciuYcAdGYv3H0SbPnIByuL4BVUoBFjBtQX74xeQrwZmmHZwQ4
5PrYmQ7hGSSS3HeADt0XCTicXWwdY4duOewEAIfCEMu/wYU44LmDCEOOyFTG
VphDdL+EiZU0DkQ7NEks0FIWXgRWuuW4WOV/QDCNqSTJh6Lls7DGlY4DTFuO
YyCTYPVVGFgseQX3Zct6Yy6mxyFSdget0zDa7n52P9wB31rvMERVLs9VxOPP
DOYeAOu8d9Ezor/Qj0TwML+vpapBLOlvb0ElBGlujUzF7iCHQ+Xm7xS+M3RN
/AjeTzLJth8yBH/hdzxSZfBXlMN+NHZfTvI5EvLQfic67eqzH8s+VHiRW/uF
N9RYB2SBm8xaEwTr8EPhi5G6npsRwml/m29Dv4FfA6llNxs+3yhAMrcL9Y11
4L7jGYTZoC6JffmTuHQWy2wEmG+MvvRqXaW5zdSE2Hi9Izj/wbuGV6EWVWN7
U/8S0yc6TsXux1kgJbUw6nRXOf9m2g5Ae4I01Lp60cz3jphaSA3UMNSCHPDf
gDmlrYAajk7cPlEWZsjUmjL9y1SNrhLcOCEDOn3X0HxPdOJ0ymet+4TnIxxU
Dd46fQtXj/tmgekeEMNh24+zLTgvfOWoau8wIwv9HpgAetmHxHDo1wB92nbu
/S67bW7j13gwSI0ila6+XcAmdR0qVRUZN7AzeQWKK9KAfuAW8wbwTws32O9h
pjILojIVrKLRJyoXahH4EUjE/oqGv6OKulNWg6hyfyV6roJYqEscp2C2yilx
HM73UW/+6+ZdckoTQn/3M9PcKlUa62DnNBerCXEMTHfEz5HII9gvxbCp4D0+
Zm4Vy0H3kjtx2Qh8LyShs1UunoPpIly9OD/OroytONx3La1+oar/rJHotB8N
/4F6Kv1Onkz3hx+iWPRp/jm6Y/gX//sjU6U3eK4wvsIPcjvYzCRkph3sLy//
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell["Documentation", "Section"], 
   Cell["Usage", "Subsection"], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell["Details & Options", "Subsection"], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell["Examples", "Subsection"], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell["Links", "Section"], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell["Annotation", "Section"], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell["Special Input", "Section"], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 1053094956087266899; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Function", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[1053094956087266899]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 4898876371082581810; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Function", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[4898876371082581810]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell["Misc", "Section"], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[0.9]]}, Visible -> False, FrontEndVersion -> 
  "13.1 for Microsoft Windows (64-bit) (June 16, 2022)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"df315f7d-4b91-450f-a44f-defea101f3d1"
]


Notebook[{

Cell[CellGroupData[{
Cell["RhumbLineDistance", "Title",
 CellTags->{"Name", "TemplateCell", "Title"},
 CellID->482641636,ExpressionUUID->"601f7e07-b89e-4a6f-b18b-cd14272e46ab"],

Cell["\<\
Find the distance between two geographical locations along a rhumb line\
\>", "Text",
 CellTags->{"Description", "TemplateCell"},
 CellID->999226920,ExpressionUUID->"4e1ec309-5d9b-44f1-823f-c445945d079d"],

Cell[CellGroupData[{

Cell[TextData[{
 "Definition",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Function", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Define your function using the name you gave in the Title line \
above. You can add input cells and extra code to define additional input \
cases or prerequisites. All definitions, including dependencies, will be \
included in the generated resource function.\n\nThis section should be \
evaluated before creating the Examples section below.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoFunction"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e1626a85-6353-47a0-8c79-5e887e817d61"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Function"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Definition", "Function", "TemplateCellGroup"},
 CellID->72845326,ExpressionUUID->"d0fb7077-fd00-40ae-b09b-732c37e75e04"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "RhumbLineDistance", "]"}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.8967271623246584`*^9, 3.8967271758134985`*^9}, {
  3.896770115984949*^9, 3.8967701169008904`*^9}},
 CellLabel->"In[65]:=",
 CellID->4644295,ExpressionUUID->"769a9166-8019-43f6-bb93-7a182f6c4063"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "RhumbLineDistance", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"UnitSystem", "->", "\"\<Metric\>\""}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.8967701255630627`*^9, 3.896770243214852*^9},
 CellLabel->"In[66]:=",
 CellID->455947235,ExpressionUUID->"0f16c149-c399-4c14-ba48-39bbe6357e9d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RhumbLineDistance", "[", 
   RowBox[{"pointA_", ",", "pointB_", ",", 
    RowBox[{"options", ":", 
     RowBox[{"OptionsPattern", "[", "RhumbLineDistance", "]"}]}]}], "]"}], ":=", 
  RowBox[{"UnitConvert", "[", 
   RowBox[{
    RowBox[{"GeoLength", "[", 
     RowBox[{"GeoPath", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"GeoPosition", "[", "pointA", "]"}], ",", 
         RowBox[{"GeoPosition", "[", "pointB", "]"}]}], "}"}], ",", 
       "\"\<RhumbLine\>\""}], "]"}], "]"}], ",", 
    RowBox[{"OptionValue", "[", "UnitSystem", "]"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.896770250880105*^9, 3.8967702825505805`*^9}},
 CellLabel->"In[67]:=",
 CellID->132658619,ExpressionUUID->"9496c302-8e00-4150-90a1-ef433af6e770"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RhumbLineDistance", "[", "pointA_", "]"}], ":=", 
  RowBox[{"RhumbLineDistance", "[", 
   RowBox[{"Here", ",", "pointA"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.896770225008398*^9, 3.896770237588295*^9}},
 CellLabel->"In[68]:=",
 CellID->208238280,ExpressionUUID->"b7b768ac-552d-4f95-8243-91e4911f15ca"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"RhumbLineDistance", "[", "pointA_", "]"}], ":=", 
    RowBox[{"GeoLength", "[", 
     RowBox[{"GeoPath", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Here", ",", "pointA"}], "}"}], ",", "\"\<RhumbLine\>\""}], 
      "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RhumbLineDistance", "[", 
     RowBox[{"pointA_", ",", "pointB_"}], "]"}], ":=", 
    RowBox[{"GeoLength", "[", 
     RowBox[{"GeoPath", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"pointA", ",", "pointB"}], "}"}], ",", "\"\<RhumbLine\>\""}], 
      "]"}], "]"}]}]}], "*)"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{3.896770138241087*^9},
 CellTags->"DefaultContent",
 CellLabel->"In[80]:=",
 CellID->767066191,ExpressionUUID->"50338d06-a308-4d03-8345-08dca34d211f"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "RhumbLineDistanceList", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8967703324345617`*^9, 3.896770336458292*^9}},
 CellLabel->"In[69]:=",
 CellID->929978307,ExpressionUUID->"209c3e7c-fc80-4eb4-afcc-eb04c1017325"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RhumbLineDistanceList", "[", 
   RowBox[{"locs_", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{"QuantityArray", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"RhumbLineDistance", "@@@", 
      RowBox[{"Subsequences", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], "&"}], "@@", 
    RowBox[{"GeoPosition", "[", 
     RowBox[{"MapAt", "[", 
      RowBox[{
       RowBox[{"GeoPosition", "@*", "LatitudeLongitude"}], ",", "locs", ",", 
       RowBox[{"Most", "/@", 
        RowBox[{"Position", "[", 
         RowBox[{"locs", ",", 
          RowBox[{
          "GeoPositionXYZ", "|", "GeoGridPosition", "|", "GeoPositionENU"}]}],
          "]"}]}]}], "]"}], "]"}]}], "]"}]}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.896729406639246*^9, 3.896729432534608*^9}, {
  3.896729534362076*^9, 3.8967295464678383`*^9}, {3.8967296244224243`*^9, 
  3.89672963725745*^9}, {3.896730273934602*^9, 3.8967302872401667`*^9}},
 CellLabel->"In[70]:=",
 CellID->645252690,ExpressionUUID->"ff439f0a-f2d3-463c-a978-9c3ba9bf9bf0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RhumbLineDistanceList", "::", "usage"}], "=", 
   "\"\<RhumbLineDistanceList[{\!\(\*SubscriptBox[StyleBox[\"loc\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]\),\!\(\*SubscriptBox[StyleBox[\"loc\", \"TI\"], \
StyleBox[\"2\", \"TR\"]]\),\!\(\*StyleBox[\"\[Ellipsis]\", \
\"TR\"]\),\!\(\*SubscriptBox[StyleBox[\"loc\", \"TI\"], StyleBox[\"n\", \
\"TI\"]]\)}] returns the list of loxodromic distances between consecutive \
pairs of locations.\>\""}], ";"}]], "Input",
 TaggingRules->{},
 InitializationCell->True,
 CellChangeTimes->{{3.896732788595636*^9, 3.8967328027951107`*^9}},
 CellLabel->"In[71]:=",
 CellID->688151410,ExpressionUUID->"b627a76f-20c5-4fd3-a780-c1bd77f9894a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RhumbLineDistance", "[", 
   RowBox[{"locs_", "?", "VectorQ"}], "]"}], ":=", 
  RowBox[{"Total", "[", 
   RowBox[{"RhumbLineDistanceList", "[", "locs", "]"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8967703440073986`*^9, 3.896770356725294*^9}, {
  3.8967704325395107`*^9, 3.896770452064274*^9}},
 CellLabel->"In[72]:=",
 CellID->556492733,ExpressionUUID->"f4d62be8-586e-4e41-a7fd-5f6b2728a574"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RhumbLineDistance", "[", 
   RowBox[{"loc1_", ",", 
    RowBox[{"loc2_", "/;", 
     RowBox[{"MatrixQ", "@@", 
      RowBox[{"GeoPosition", "[", "loc2", "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"QuantityArray", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"RhumbLineDistance", "[", 
      RowBox[{"loc1", ",", "#"}], "]"}], "&"}], "/@", "loc2"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.896770550687703*^9, 3.8967706176923075`*^9}, {
   3.896770674945577*^9, 3.8967706788063097`*^9}, {3.896770729782528*^9, 
   3.896770731160568*^9}, {3.896770970345597*^9, 3.8967709783138165`*^9}, 
   3.896771039659176*^9},
 CellLabel->"In[73]:=",
 CellID->68440470,ExpressionUUID->"ffe1f519-407d-423f-8c7f-8416a8b02f3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RhumbLineDistance", "[", 
   RowBox[{
    RowBox[{"loc1_", "/;", 
     RowBox[{"MatrixQ", "@@", 
      RowBox[{"GeoPosition", "[", "loc1", "]"}]}]}], ",", 
    RowBox[{"loc2_", "/;", 
     RowBox[{"MatrixQ", "@@", 
      RowBox[{"GeoPosition", "[", "loc2", "]"}]}]}]}], "]"}], ":=", 
  RowBox[{"QuantityArray", "[", 
   RowBox[{"Outer", "[", 
    RowBox[{"RhumbLineDistance", ",", 
     RowBox[{"Identity", "@@", "loc1"}], ",", 
     RowBox[{"Identity", "@@", "loc2"}], ",", "1"}], "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "I", " ", "can", " ", "do", " ", "this", " ", "faster", " ", "with", " ", 
    "\"\<Data\>\""}], "*)"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.896770550687703*^9, 3.8967706176923075`*^9}, {
  3.896770674945577*^9, 3.8967706788063097`*^9}, {3.896770729782528*^9, 
  3.896770731160568*^9}, {3.896770970345597*^9, 3.8967709783138165`*^9}, {
  3.896771039659176*^9, 3.896771054860553*^9}, {3.8967731789452057`*^9, 
  3.8967731927356987`*^9}, {3.896773287707915*^9, 3.8967732925595026`*^9}, {
  3.8967733514485493`*^9, 3.8967733583777695`*^9}},
 CellLabel->"In[83]:=",
 CellID->55285265,ExpressionUUID->"10a4a38d-7268-4c16-b349-1e92ceffdcda"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Documentation", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Documentation"},
 CellTags->{"Documentation", "TemplateSection"},
 CellID->429741307,ExpressionUUID->"004df476-b26b-46f4-a714-76b1de06d444"],

Cell[CellGroupData[{

Cell[TextData[{
 "Usage",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Usage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Document input usage cases by first typing an input structure, \
then pressing ", 
           Cell[
            BoxData[
             StyleBox[
              DynamicBox[
               ToBoxes[
                
                If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                 "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
               Evaluator -> "System"], ShowStringCharacters -> False]]], 
           " to add a brief explanation of the function\[CloseCurlyQuote]s \
behavior for that structure. Pressing ", 
           Cell[
            BoxData[
             StyleBox[
              DynamicBox[
               ToBoxes[
                
                If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                 "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
               Evaluator -> "System"], ShowStringCharacters -> False]]], 
           " repeatedly will create new cases as needed. Every input usage \
case defined above should be demonstrated explicitly here.\n\nSee existing \
documentation pages for examples."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoUsage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d0985175-5068-4e29-aabd-c659604cf040"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Usage"},
 DefaultNewCellStyle->{"UsageInputs", FontFamily -> "Source Sans Pro"},
 CellTags->{"TemplateCellGroup", "Usage"},
 CellID->542419310,ExpressionUUID->"8e736b5e-4b15-420c-9c51-078683e30954"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RhumbLineDistance", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox[
      StyleBox["lat", "TI"], 
      StyleBox["1", "TR"]], ",", 
     SubscriptBox[
      StyleBox["lon", "TI"], 
      StyleBox["1", "TR"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox[
      StyleBox["lat", "TI"], 
      StyleBox["2", "TR"]], ",", 
     SubscriptBox[
      StyleBox["lon", "TI"], 
      StyleBox["2", "TR"]]}], "}"}]}], "]"}]], "UsageInputs",
 CellChangeTimes->{{3.896770196831558*^9, 3.896770198612414*^9}},
 FontFamily->"Source Sans Pro",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->67839508,ExpressionUUID->"3612e68b-6356-463f-a246-0483b44c7eaa"],

Cell["\<\
gives the rhumbline distance between latitude-longitude positions on the \
Earth.\
\>", "UsageDescription",
 CellChangeTimes->{{3.8967701927528753`*^9, 3.8967702122823334`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->746063541,ExpressionUUID->"d4854d96-325b-43f2-9ad9-585c1c3bf659"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RhumbLineDistance", "[", 
  RowBox[{
   SubscriptBox[
    StyleBox["loc", "TI"], 
    StyleBox["1", "TR"]], ",", 
   SubscriptBox[
    StyleBox["loc", "TI"], 
    StyleBox["2", "TR"]]}], "]"}]], "UsageInputs",
 FontFamily->"Source Sans Pro",
 CellID->126379249,ExpressionUUID->"faadfe6d-138f-4faf-917f-137fa1fa02ec"],

Cell["\<\
gives the rhumbline distance between locations specified by position objects \
or geographical entities.\
\>", "UsageDescription",
 CellChangeTimes->{{3.896770174820107*^9, 3.8967702161560144`*^9}},
 CellID->307336805,ExpressionUUID->"e5bb1fd9-c3ff-47c0-970d-af5bbad2d4f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RhumbLineDistance", "[", 
  StyleBox["loc", "TI"], "]"}]], "UsageInputs",
 FontFamily->"Source Sans Pro",
 CellID->381784022,ExpressionUUID->"40043620-1713-49e2-bc23-cc40803849ee"],

Cell[TextData[{
 "finds the rhumb line distance from ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Here", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/Here",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "cb32960c-83dd-4e42-ab4f-9055c4a1062f"],
 " to ",
 Cell[BoxData[
  StyleBox["loc", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "4bd4e3da-fc6a-458a-86f0-2e16058ed2be"],
 "."
}], "UsageDescription",
 CellID->175690666,ExpressionUUID->"9610da35-7947-4ac1-a99e-d31e03d057a3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Options",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a detailed explanation of how the function is used and \
configured (e.g. acceptable input types, result formats, options \
specifications, background information). This section may include multiple \
cells, bullet lists, tables, hyperlinks and additional styles/structures as \
needed.\n\nAdd any other information that may be relevant, such as when the \
function was first discovered or how and why it is used within a given field. \
Include all relevant background or contextual information related to the \
function, its development, and its usage.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e8103e1d-0516-48c0-94ee-08a9b8f6884c"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Notes"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details & Options", "Notes", "TemplateCellGroup"},
 CellID->908801236,ExpressionUUID->"cce7ccb3-f120-4208-bb9b-9da0e4dcc49a"],

Cell["\<\
A rhumb line, or loxodrome, is a path of constant bearing, defined as its \
angle with its local meridian. A rhumb line is longer than a geodesic path, \
but is easier for sailors and navigators because they don't have to \
constantly change course.\
\>", "Notes",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8729490334009547`*^9, 3.872949039670209*^9}, {
  3.8729491844384856`*^9, 3.8729492026045876`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->968435018,ExpressionUUID->"c179c16f-1d3d-43bb-8d18-b3eb71749494"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Examples", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Demonstrate the function\[CloseCurlyQuote]s usage, starting with \
the most basic use case and describing each example in a preceding text cell.\
\n\nWithin a group, individual examples can be delimited by inserting page \
breaks between them (either using ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"[Right-click]\"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontColor -> GrayLevel[0.28627], 
                 FontSize -> 14, StripOnInput -> False], 
                StyleBox[
                "\" \[FilledRightTriangle] \"", FontFamily -> 
                 "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                 GrayLevel[0.5], StripOnInput -> False], 
                StyleBox[
                "\"Insert Page Break\"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontColor -> GrayLevel[0.28627], 
                 FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
              ShowStringCharacters -> False]]], 
           " between cells or through the menu using ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"Insert\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontColor -> GrayLevel[0.28627], FontSize -> 14, 
                 StripOnInput -> False], 
                StyleBox[
                "\" \[FilledRightTriangle] \"", FontFamily -> 
                 "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                 GrayLevel[0.5], StripOnInput -> False], 
                StyleBox[
                "\"Page Break\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontColor -> GrayLevel[0.28627], FontSize -> 14, 
                 StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
              False]]], 
           ").\n\nExamples should be grouped into Subsection and \
Subsubsection cells similarly to existing documentation pages. Here are some \
typical Subsection names and the types of examples they normally contain:\n  \
", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Basic Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "most basic function usage\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Scope: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
               "RowDefault"], ShowStringCharacters -> False]]], 
           "input and display conventions, standard computational attributes \
(e.g. threading over lists)\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Options: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
               "RowDefault"], ShowStringCharacters -> False]]], 
           "available options and parameters for the function\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Applications: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "standard industry or academic applications\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Properties and Relations: \"", FontFamily -> 
                 "Source Sans Pro", FontWeight -> "SemiBold", FontSize -> 14, 
                 StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
              False]]], "how the function relates to other functions\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Possible Issues: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "limitations or unexpected behavior a user might experience\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Neat Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "particularly interesting, unconventional, or otherwise unique \
usage"}], "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExamples"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "787e85ec-e7cf-46fd-a940-545dd4e183b6"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Examples"},
 CellTags->{"Examples", "TemplateCellGroup"},
 CellID->553094467,ExpressionUUID->"2e828166-d7db-48f0-a694-b36c217ee377"],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->279727361,ExpressionUUID->"743c6a6f-eb6b-4a4b-941e-b3d0f45cc450"],

Cell["\<\
Find the rhumb line distance to Null Island with 0 latitude and 0 longitude:\
\>", "Text",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->591710080,ExpressionUUID->"9b7345c9-967e-427c-83ca-87f602f6b0e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RhumbLineDistance", "[", 
  RowBox[{"GeoPosition", "[", "\"\<NullIsland\>\"", "]"}], "]"}]], "Input",
 TaggingRules->{},
 CellLabel->"In[43]:=",
 CellID->33934475,ExpressionUUID->"055778ee-8211-40e3-96ff-61ff6c3e31fa"],

Cell[BoxData[
 TemplateBox[{"9473.125859004258`", "\"km\"", "kilometers", "\"Kilometers\""},
  
  "Quantity"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.871373406081092*^9, 3.896770294386861*^9, 
  3.8967706853017635`*^9, 3.8967707701748476`*^9},
 CellLabel->"Out[43]=",
 CellID->282513553,ExpressionUUID->"c351fdde-ab76-4b84-9127-589afceafe82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "2b653baa-2ef0-40d4-949c-1069169d3b5a"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->14107562,ExpressionUUID->"6b66e88f-403e-4522-959e-b743da650813"],

Cell["\<\
Find the rhumb line distance between the North and South Poles:\
\>", "Text",
 TaggingRules->{},
 CellID->507244428,ExpressionUUID->"20a618bf-2f1a-4cb0-821f-4419fb148344"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RhumbLineDistance", "[", 
  RowBox[{
   RowBox[{"GeoPosition", "[", "\"\<NorthPole\>\"", "]"}], ",", 
   RowBox[{"GeoPosition", "[", "\"\<SouthPole\>\"", "]"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellLabel->"In[42]:=",
 CellID->33808075,ExpressionUUID->"03268cc1-d911-4d5f-9457-3eadfcd482c3"],

Cell[BoxData[
 TemplateBox[{"20003.931458460924`", "\"km\"", "kilometers", "\"Kilometers\""},
  "Quantity"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.896770704533969*^9, 3.8967707675127287`*^9},
 CellLabel->"Out[42]=",
 CellID->224947997,ExpressionUUID->"f6ae15f9-749d-4ade-ae22-ddcb5f40b597"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "bfe03a3b-4d4e-432f-8fa2-1d9936db5828"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->302594690,ExpressionUUID->"da965623-ee4a-4ab7-9716-35d3acfea93d"],

Cell["\<\
Rhumb line Distance between two positions on the reference ellipsoid:\
\>", "ExampleText",
 CellChangeTimes->{{3.89677050232041*^9, 3.896770504404358*^9}},
 CellID->2119008066,ExpressionUUID->"a547de58-a0bc-4566-bc89-41fed913d3df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RhumbLineDistance", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"37", ",", 
     RowBox[{"-", "109"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40.113", ",", 
     RowBox[{"-", "88.261"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.896770491758662*^9},
 CellLabel->"In[27]:=",
 CellID->1452291609,ExpressionUUID->"6a85c5ee-6655-46be-8542-eadce90ad6a5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantityArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              
              RasterBox[{{{0.66, 0.66, 0.66}, {0.49, 0.49, 0.49}, {0.74, 0.74,
                0.74}}, {{0.4, 0.4, 0.4}, {0.8, 0.8, 0.8}, {0.52, 0.52, 
               0.52}}, {{0.72, 0.72, 0.72}, {0.59, 0.59, 0.59}, {0.79, 0.79, 
               0.79}}, {{0.58, 0.58, 0.58}, {0.66, 0.66, 0.66}, {0.32, 0.32, 
               0.32}}}, {{-0.25, -0.33}, {1.25, 2.33}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.3], 
                
                LineBox[{{{-0.25, 2.33}, {1.25, 2.33}}, {{-0.25, 1.67}, {1.25,
                  1.67}}, {{-0.25, 1.}, {1.25, 1.}}, {{-0.25, 0.33}, {1.25, 
                 0.33}}, {{-0.25, -0.33}, {1.25, -0.33}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.3], 
                
                LineBox[{{{-0.25, -0.33}, {-0.25, 2.33}}, {{0.25, -0.33}, {
                 0.25, 2.33}}, {{0.75, -0.33}, {0.75, 2.33}}, {{
                 1.25, -0.33}, {1.25, 2.33}}}]}}}, PlotRangeClipping -> True, 
             Background -> GrayLevel[0.93], 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {None, None}, FrameStyle -> {{
                Directive[
                 GrayLevel[0.2], 
                 AbsoluteThickness[1]], 
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]]}, {
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], 
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]]}}, FrameTicks -> {{{{-0.25, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.583, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {1.417, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {2.25, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.028, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.306, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.861, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.139, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.694, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.972, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}}, None}, {
               None, None}}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImagePadding -> 2, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
               Automatic}, PlotRangePadding -> {{1, 0}, {0, 0}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "2", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Unit: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"Meters\"", Short[#, 2]& ], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              
              RasterBox[{{{0.66, 0.66, 0.66}, {0.49, 0.49, 0.49}, {0.74, 0.74,
                0.74}}, {{0.4, 0.4, 0.4}, {0.8, 0.8, 0.8}, {0.52, 0.52, 
               0.52}}, {{0.72, 0.72, 0.72}, {0.59, 0.59, 0.59}, {0.79, 0.79, 
               0.79}}, {{0.58, 0.58, 0.58}, {0.66, 0.66, 0.66}, {0.32, 0.32, 
               0.32}}}, {{-0.25, -0.33}, {1.25, 2.33}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.3], 
                
                LineBox[{{{-0.25, 2.33}, {1.25, 2.33}}, {{-0.25, 1.67}, {1.25,
                  1.67}}, {{-0.25, 1.}, {1.25, 1.}}, {{-0.25, 0.33}, {1.25, 
                 0.33}}, {{-0.25, -0.33}, {1.25, -0.33}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.3], 
                
                LineBox[{{{-0.25, -0.33}, {-0.25, 2.33}}, {{0.25, -0.33}, {
                 0.25, 2.33}}, {{0.75, -0.33}, {0.75, 2.33}}, {{
                 1.25, -0.33}, {1.25, 2.33}}}]}}}, PlotRangeClipping -> True, 
             Background -> GrayLevel[0.93], 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {None, None}, FrameStyle -> {{
                Directive[
                 GrayLevel[0.2], 
                 AbsoluteThickness[1]], 
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]]}, {
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], 
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]]}}, FrameTicks -> {{{{-0.25, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.583, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {1.417, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {2.25, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.028, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.306, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.861, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.139, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.694, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.972, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}}, None}, {
               None, None}}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImagePadding -> 2, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
               Automatic}, PlotRangePadding -> {{1, 0}, {0, 0}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "2", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Unit: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"Meters\"", Short[#, 2]& ], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"MinMax: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"0", "\"m\"", "meters", "\"Meters\""}, 
                    "Quantity", SyntaxForm -> Mod], ",", 
                    
                    TemplateBox[{"0", "\"m\"", "meters", "\"Meters\""}, 
                    "Quantity", SyntaxForm -> Mod]}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  QuantityArray[
   StructuredArray`StructuredData[{2}, {{0, 0}, "Meters", {{1}}}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8967704929538584`*^9, 3.8967707082658567`*^9},
 CellLabel->"Out[27]=",
 CellID->304245912,ExpressionUUID->"187aea5d-c052-472a-82dd-85ce5d67333c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "0366af5a-7cfb-4167-a059-826f8c752f2b"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1695350246,ExpressionUUID->"2704c717-6ea4-488a-85c7-6b6a19422dd0"],

Cell["Rhumb line Distance between two cities:", "ExampleText",
 CellChangeTimes->{{3.896770510973091*^9, 3.8967705114228725`*^9}},
 CellID->870348942,ExpressionUUID->"2dc3978d-0eff-4775-a818-8cb2de69bf0d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RhumbLineDistance", "[", 
  RowBox[{
   TemplateBox[{"\"Chicago\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"Chicago\"", ",", "\"Illinois\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}], 
     "\"Entity[\\\"City\\\", {\\\"Chicago\\\", \\\"Illinois\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
    "Entity"], ",", 
   TemplateBox[{"\"Tokyo\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           RowBox[{"\"Tokyo\"", ",", "\"Tokyo\"", ",", "\"Japan\""}], "}"}]}],
        "]"}], "\"Entity[\\\"City\\\", {\\\"Tokyo\\\", \\\"Tokyo\\\", \
\\\"Japan\\\"}]\"", "\"city\""},
    "Entity"]}], "]"}]], "Input",
 CellChangeTimes->{3.8967704958638487`*^9},
 CellLabel->"In[41]:=",
 CellID->938556126,ExpressionUUID->"fa5ede19-85ce-430f-8cca-189d0cbfed58"],

Cell[BoxData[
 TemplateBox[{"11529.41282271213`", "\"km\"", "kilometers", "\"Kilometers\""},
  
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.8967704969507313`*^9, {3.896770718996148*^9, 3.8967707634248886`*^9}},
 CellLabel->"Out[41]=",
 CellID->39516183,ExpressionUUID->"6f0edded-5247-43c6-ac03-ac643cd5ea24"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "25fa33cb-ef0e-49f2-abfb-781623c75b30"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->299763414,ExpressionUUID->"ffafd3f8-1746-4ff8-98b7-966d0aa165b4"],

Cell["\<\
Rhumb line distance between two fully specified geodetic positions:\
\>", "ExampleText",
 CellChangeTimes->{{3.8967705128709917`*^9, 3.8967705307291965`*^9}},
 CellID->658656031,ExpressionUUID->"05f10cfa-6e8f-4df7-bfce-e6508611c934"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RhumbLineDistance", "[", 
   RowBox[{
    RowBox[{"GeoPosition", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"37", ",", 
        RowBox[{"-", "109"}], ",", "150"}], "}"}], ",", "\"\<ITRF00\>\""}], 
     "]"}], ",", " ", 
    RowBox[{"GeoPosition", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"40.113", ",", 
        RowBox[{"-", "88.261"}], ",", "192.868"}], "}"}], ",", 
      "\"\<ITRF00\>\""}], "]"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{3.8967705177221684`*^9},
 CellLabel->"In[44]:=",
 CellID->32431111,ExpressionUUID->"07dc9cda-9ab1-4fab-93a8-353d841b9356"],

Cell[BoxData[
 TemplateBox[{"1839.9414402979435`", "\"km\"", "kilometers", "\"Kilometers\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.89677051507609*^9, 3.896770518542982*^9}, 
   3.896770776143217*^9},
 CellLabel->"Out[44]=",
 CellID->328563542,ExpressionUUID->"c55151d8-4aad-423b-a027-44064187507e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "3edc81aa-90a3-47ec-947f-5303504cf9b4"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1487907695,ExpressionUUID->"7ce6bb0d-08ac-4bc1-90e6-1f2ff8e5bf6b"],

Cell["\<\
Rhumb line distance from a location to a list of different locations:\
\>", "ExampleText",
 CellChangeTimes->{3.896770534230093*^9},
 CellID->1965044197,ExpressionUUID->"61b5aa7c-0626-4e7b-939b-7d1ca45695e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RhumbLineDistance", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"37", ",", 
     RowBox[{"-", "109"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"40.113", ",", 
       RowBox[{"-", "88.261"}]}], "}"}], ",", 
     TemplateBox[{"\"Chicago\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             
             RowBox[{"\"Chicago\"", ",", "\"Illinois\"", ",", 
               "\"UnitedStates\""}], "}"}]}], "]"}], 
       "\"Entity[\\\"City\\\", {\\\"Chicago\\\", \\\"Illinois\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
      "Entity"], ",", 
     RowBox[{"GeoPosition", "[", 
      RowBox[{"{", 
       RowBox[{"38.52", ",", 
        RowBox[{"-", "85.23"}]}], "}"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.8967705235591393`*^9},
 CellLabel->"In[45]:=",
 CellID->346811766,ExpressionUUID->"2bc18895-8bb7-452a-b6dd-b8699195a820"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantityArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              
              RasterBox[{{{0.66, 0.66, 0.66}, {0.49, 0.49, 0.49}, {0.74, 0.74,
                0.74}}, {{0.4, 0.4, 0.4}, {0.8, 0.8, 0.8}, {0.52, 0.52, 
               0.52}}, {{0.72, 0.72, 0.72}, {0.59, 0.59, 0.59}, {0.79, 0.79, 
               0.79}}, {{0.58, 0.58, 0.58}, {0.66, 0.66, 0.66}, {0.32, 0.32, 
               0.32}}}, {{-0.25, -0.33}, {1.25, 2.33}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.3], 
                
                LineBox[{{{-0.25, 2.33}, {1.25, 2.33}}, {{-0.25, 1.67}, {1.25,
                  1.67}}, {{-0.25, 1.}, {1.25, 1.}}, {{-0.25, 0.33}, {1.25, 
                 0.33}}, {{-0.25, -0.33}, {1.25, -0.33}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.3], 
                
                LineBox[{{{-0.25, -0.33}, {-0.25, 2.33}}, {{0.25, -0.33}, {
                 0.25, 2.33}}, {{0.75, -0.33}, {0.75, 2.33}}, {{
                 1.25, -0.33}, {1.25, 2.33}}}]}}}, PlotRangeClipping -> True, 
             Background -> GrayLevel[0.93], 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {None, None}, FrameStyle -> {{
                Directive[
                 GrayLevel[0.2], 
                 AbsoluteThickness[1]], 
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]]}, {
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], 
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]]}}, FrameTicks -> {{{{-0.25, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.583, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {1.417, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {2.25, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.028, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.306, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.861, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.139, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.694, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.972, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}}, None}, {
               None, None}}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImagePadding -> 2, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
               Automatic}, PlotRangePadding -> {{1, 0}, {0, 0}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "3", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Unit: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"Kilometers\"", Short[#, 2]& ], "SummaryItem"]}]}},
              GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              
              RasterBox[{{{0.66, 0.66, 0.66}, {0.49, 0.49, 0.49}, {0.74, 0.74,
                0.74}}, {{0.4, 0.4, 0.4}, {0.8, 0.8, 0.8}, {0.52, 0.52, 
               0.52}}, {{0.72, 0.72, 0.72}, {0.59, 0.59, 0.59}, {0.79, 0.79, 
               0.79}}, {{0.58, 0.58, 0.58}, {0.66, 0.66, 0.66}, {0.32, 0.32, 
               0.32}}}, {{-0.25, -0.33}, {1.25, 2.33}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.3], 
                
                LineBox[{{{-0.25, 2.33}, {1.25, 2.33}}, {{-0.25, 1.67}, {1.25,
                  1.67}}, {{-0.25, 1.}, {1.25, 1.}}, {{-0.25, 0.33}, {1.25, 
                 0.33}}, {{-0.25, -0.33}, {1.25, -0.33}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.3], 
                
                LineBox[{{{-0.25, -0.33}, {-0.25, 2.33}}, {{0.25, -0.33}, {
                 0.25, 2.33}}, {{0.75, -0.33}, {0.75, 2.33}}, {{
                 1.25, -0.33}, {1.25, 2.33}}}]}}}, PlotRangeClipping -> True, 
             Background -> GrayLevel[0.93], 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {None, None}, FrameStyle -> {{
                Directive[
                 GrayLevel[0.2], 
                 AbsoluteThickness[1]], 
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]]}, {
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], 
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]]}}, FrameTicks -> {{{{-0.25, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.583, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {1.417, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {2.25, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.028, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.306, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.861, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.139, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.694, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.972, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}}, None}, {
               None, None}}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImagePadding -> 2, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
               Automatic}, PlotRangePadding -> {{1, 0}, {0, 0}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "3", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Unit: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"Kilometers\"", Short[#, 2]& ], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"MinMax: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{
                    "1839.9414402979435`", "\"km\"", "kilometers", 
                    "\"Kilometers\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    
                    TemplateBox[{
                    "2101.211418330919`", "\"km\"", "kilometers", 
                    "\"Kilometers\""}, "Quantity", SyntaxForm -> Mod]}], 
                    "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  QuantityArray[
   StructuredArray`StructuredData[{
    3}, {{1839.9414402979435`, 1911.4962491197073`, 2101.211418330919}, 
     "Kilometers", {{1}}}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8967705255566463`*^9, 3.896770595152725*^9, 
  3.8967707782460337`*^9},
 CellLabel->"Out[45]=",
 CellID->617765478,ExpressionUUID->"849cf85c-a0aa-4f32-807d-ab6277081da4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "%", "]"}]], "Input",
 CellLabel->"In[46]:=",
 CellID->1448802707,ExpressionUUID->"8b893dd9-b297-436e-908d-fc8333258e2d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
    "1839.9414402979435`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "1911.4962491197073`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "2101.211418330919`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8967707820164404`*^9},
 CellLabel->"Out[46]=",
 CellID->150577478,ExpressionUUID->"eb4d76c9-b4aa-4dd8-b362-cb883187c9de"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "f07bca44-37fd-427f-9d86-c395ed4249d9"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->808241834,ExpressionUUID->"356571f4-e818-49f7-8b18-b0ce5816100d"],

Cell["Total distance between several locations:", "ExampleText",
 CellID->1286436763,ExpressionUUID->"b12e1ba7-46a3-4f17-b526-014a1919aa79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RhumbLineDistance", "[", 
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{"\"Los Angeles\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"City\"", ",", 
          RowBox[{"{", 
            
            RowBox[{"\"LosAngeles\"", ",", "\"California\"", ",", 
              "\"UnitedStates\""}], "}"}]}], "]"}], 
      "\"Entity[\\\"City\\\", {\\\"LosAngeles\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
     "Entity"], ",", 
    TemplateBox[{"\"Dallas\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"City\"", ",", 
          RowBox[{"{", 
            RowBox[{"\"Dallas\"", ",", "\"Texas\"", ",", "\"UnitedStates\""}],
             "}"}]}], "]"}], 
      "\"Entity[\\\"City\\\", {\\\"Dallas\\\", \\\"Texas\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
     "Entity"], ",", 
    TemplateBox[{"\"Miami\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"City\"", ",", 
          RowBox[{"{", 
            
            RowBox[{"\"Miami\"", ",", "\"Florida\"", ",", 
              "\"UnitedStates\""}], "}"}]}], "]"}], 
      "\"Entity[\\\"City\\\", {\\\"Miami\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
     "Entity"]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{3.896770868841755*^9},
 CellLabel->"In[64]:=",
 CellID->277317745,ExpressionUUID->"a9510194-c60e-4826-b4ea-1aefc9b58162"],

Cell[BoxData[
 TemplateBox[{"3803.6023158239777`", "\"km\"", "kilometers", "\"Kilometers\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8967707872890024`*^9, 3.8967708701916995`*^9},
 CellLabel->"Out[64]=",
 CellID->87938645,ExpressionUUID->"2ef99cb3-216e-4723-9ccd-fd0715e51b3f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 CellChangeTimes->{{3.896770806480013*^9, 3.896770807285102*^9}},
 CellID->104115286,ExpressionUUID->"9b99e55c-9e55-45cb-b261-169526d6262f"],

Cell[TextData[{
 "Distance between any two points on the Earth, using the parameters of the \
default datum ",
 Cell[BoxData["\"\<ITRF00\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "25fcc881-5c1b-4a7d-9e97-3e0e48f51930"],
 ":"
}], "ExampleText",
 CellID->1486048149,ExpressionUUID->"5de0dc08-1c6f-45fd-aa46-ab28f7656770"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RhumbLineDistance", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"46.42", ",", 
     RowBox[{"-", "21.02"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "30.23"}], ",", "40.51"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.8967708747936907`*^9},
 CellLabel->"In[65]:=",
 CellID->799921522,ExpressionUUID->"932ad014-34f7-4442-a78f-35484b89a51b"],

Cell[BoxData[
 TemplateBox[{"10530.791044730957`", "\"km\"", "kilometers", "\"Kilometers\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8967708147208815`*^9, 3.89677087870313*^9},
 CellLabel->"Out[65]=",
 CellID->476273558,ExpressionUUID->"2e328549-9cde-4968-98db-24b1a661519a"]
}, Open  ]],

Cell["Angles can also be specified as DMS strings:", "ExampleText",
 CellID->776425633,ExpressionUUID->"992c5bb6-ea3d-4d8a-9c0c-b52868911651"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RhumbLineDistance", "[", 
  RowBox[{"\"\<46\[Degree]25'12''N 21\[Degree]1'12''W\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<30\[Degree]13'48.''S\>\"", ",", "\"\<40\[Degree]30'36.''E\>\""}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.896770875644714*^9},
 CellLabel->"In[66]:=",
 CellID->1252944229,ExpressionUUID->"6b65291f-ac91-481b-be97-e1abd97371f2"],

Cell[BoxData[
 TemplateBox[{"10530.791044730959`", "\"km\"", "kilometers", "\"Kilometers\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8967708163803587`*^9, 3.8967708793059855`*^9},
 CellLabel->"Out[66]=",
 CellID->198346810,ExpressionUUID->"bed5c833-6c57-43a8-ad13-6e235f9a050e"]
}, Open  ]],

Cell[TextData[{
 "Or as ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Quantity"]], "paclet:ref/Quantity"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "578fbedd-9293-4950-a204-7c58f9e68589"],
 " objects:"
}], "ExampleText",
 CellID->1415911481,ExpressionUUID->"eb550384-a5e4-4ecd-a4dd-1283a8b4c774"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RhumbLineDistance", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Quantity", "[", 
      RowBox[{"46.42", ",", "\"\<AngularDegrees\>\""}], "]"}], ",", 
     RowBox[{"Quantity", "[", 
      RowBox[{
       RowBox[{"-", "21.02"}], ",", "\"\<AngularDegrees\>\""}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Quantity", "[", 
      RowBox[{
       RowBox[{"-", "30.23"}], ",", "\"\<AngularDegrees\>\""}], "]"}], ",", 
     RowBox[{"Quantity", "[", 
      RowBox[{"40.51", ",", "\"\<AngularDegrees\>\""}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.8967708764116197`*^9},
 CellLabel->"In[67]:=",
 CellID->1351503129,ExpressionUUID->"b575f89d-4f0b-4d02-955c-5a726513a4c0"],

Cell[BoxData[
 TemplateBox[{"10530.791044730957`", "\"km\"", "kilometers", "\"Kilometers\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8967708187607603`*^9, 3.896770879842985*^9},
 CellLabel->"Out[67]=",
 CellID->542643968,ExpressionUUID->"c519ece2-2cf4-485a-b2ae-7d497e84a3ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "7d1b6d1f-d23c-4334-baf4-e900ff072b8f"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->896047761,ExpressionUUID->"aff3a629-46b9-4fc6-bdfd-a6c529bab07b"],

Cell[TextData[{
 "Compute the distance between ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Entity"]], "paclet:ref/Entity"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "30a84e91-3488-4732-ab19-910eaba924ae"],
 " objects:"
}], "ExampleText",
 CellID->1719386363,ExpressionUUID->"ae3dbfed-44d7-48a8-b4cb-678dec413f6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RhumbLineDistance", "[", 
  RowBox[{
   TemplateBox[{"\"Spain\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"", "\"country\""},
    "Entity"], ",", 
   TemplateBox[{"\"Germany\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"", "\"country\""},
    "Entity"]}], "]"}]], "Input",
 CellChangeTimes->{3.896770883608837*^9},
 CellLabel->"In[1]:=",
 CellID->1186648909,ExpressionUUID->"52a094b5-f1e0-4bca-b241-ced167206ec8"],

Cell[BoxData[
 TemplateBox[{"1586.572530740763`", "\"km\"", "kilometers", "\"Kilometers\""},
  
  "Quantity"]], "Output",
 CellChangeTimes->{3.8967708215542192`*^9, 3.896770888424593*^9},
 CellLabel->"Out[1]=",
 CellID->226339709,ExpressionUUID->"6b1b503b-a208-4566-9c72-91ab29c3fbe4"]
}, Open  ]],

Cell[TextData[{
 "Or between an ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Entity"]], "paclet:ref/Entity"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "e36906d2-a82c-4894-b7b5-b6aef0eec723"],
 " object and a geo position:"
}], "ExampleText",
 CellID->425635623,ExpressionUUID->"81f8e540-eeb0-4f71-aeec-0a2198b6aacc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RhumbLineDistance", "[", 
  RowBox[{
   RowBox[{"GeoPosition", "[", 
    RowBox[{"{", 
     RowBox[{"40", ",", 
      RowBox[{"-", "4"}]}], "}"}], "]"}], ",", 
   TemplateBox[{"\"Germany\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}], 
     "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"", "\"country\""},
    "Entity"]}], "]"}]], "Input",
 CellChangeTimes->{3.896770884722435*^9},
 CellLabel->"In[2]:=",
 CellID->56037703,ExpressionUUID->"9fc68fbb-4a8e-4174-96c1-fa0ffe8ae770"],

Cell[BoxData[
 TemplateBox[{"1586.572530740763`", "\"km\"", "kilometers", "\"Kilometers\""},
  
  "Quantity"]], "Output",
 CellChangeTimes->{3.8967708239364796`*^9, 3.8967708890369186`*^9},
 CellLabel->"Out[2]=",
 CellID->301352504,ExpressionUUID->"757cbff8-1243-43a2-87e6-9965933a3bbe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "2e4965a9-4921-4a1e-b1d9-e14ac4763f26"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1688035667,ExpressionUUID->"9bd777bd-b5cc-4804-8f63-6f164055420f"],

Cell["Distance between geodetic positions, in different formats:", \
"ExampleText",
 CellID->1584615502,ExpressionUUID->"954e0b75-4f90-4041-a1b3-6f37ddd9fb67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"GeoPosition", "[", 
   RowBox[{"{", 
    RowBox[{"46.42", ",", 
     RowBox[{"-", "21.02"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{3.896770891927536*^9},
 CellLabel->"In[3]:=",
 CellID->237037318,ExpressionUUID->"e100ce0c-f8fe-4ab2-8c89-55771a866ad1"],

Cell[BoxData[
 RowBox[{"GeoPosition", "[", 
  RowBox[{"{", 
   RowBox[{"46.42`", ",", 
    RowBox[{"-", "21.02`"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.896770833198489*^9, 3.896770903646648*^9},
 CellLabel->"Out[3]=",
 CellID->166213121,ExpressionUUID->"c87b8bd2-f219-4afe-a6da-fc1d86021528"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q", "=", 
  RowBox[{"GeoGridPosition", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.7", ",", "0.9"}], "}"}], ",", "\"\<Mercator\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.8967708930257525`*^9},
 CellLabel->"In[4]:=",
 CellID->368251785,ExpressionUUID->"ebf265e8-bb48-4f43-892c-3f1dae0fc737"],

Cell[BoxData[
 RowBox[{"GeoGridPosition", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.7`", ",", "0.9`"}], "}"}], ",", "\<\"Mercator\"\>"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.89677083606143*^9, 3.8967709042806473`*^9},
 CellLabel->"Out[4]=",
 CellID->6389306,ExpressionUUID->"096cae59-9f92-4180-9940-ce6d2fa2a506"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RhumbLineDistance", "[", 
  RowBox[{"p", ",", "q"}], "]"}]], "Input",
 CellChangeTimes->{{3.8967708937727594`*^9, 3.8967709002490077`*^9}},
 CellLabel->"In[5]:=",
 CellID->408994752,ExpressionUUID->"8b68b4a9-36d1-4cc2-9a8a-058a350fa254"],

Cell[BoxData[
 TemplateBox[{"5475.6836090717015`", "\"km\"", "kilometers", "\"Kilometers\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8967708380587378`*^9, 3.8967709048176484`*^9},
 CellLabel->"Out[5]=",
 CellID->660780727,ExpressionUUID->"359a4aa5-dfff-4d96-a8ce-683b00ec5078"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RhumbLineDistance", "[", 
  RowBox[{
   RowBox[{"GeoPositionXYZ", "[", "p", "]"}], ",", 
   RowBox[{"GeoPositionENU", "[", 
    RowBox[{"q", ",", 
     RowBox[{"GeoPosition", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8967708963777895`*^9, 3.8967709011800966`*^9}},
 CellLabel->"In[6]:=",
 CellID->86420793,ExpressionUUID->"43836e49-6058-47b8-8029-e9254122894c"],

Cell[BoxData[
 TemplateBox[{"5475.6836090717015`", "\"km\"", "kilometers", "\"Kilometers\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8967708401309986`*^9, 3.8967709054396477`*^9},
 CellLabel->"Out[6]=",
 CellID->308156597,ExpressionUUID->"56e82d85-4ff9-43da-a817-626121724c92"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "f6d90143-9dcb-4fc5-b9b5-a7a78247e360"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1095211890,ExpressionUUID->"7a1d6913-c029-4e5a-a2c4-505e5b90ebcc"],

Cell["\<\
Compute distances from a common location to a list of positions, in any \
format:\
\>", "ExampleText",
 CellID->1143896793,ExpressionUUID->"0b75016d-f0bf-4100-b378-18c588c8aad2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RhumbLineDistance", "[", 
  RowBox[{"Here", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], ",", 
     TemplateBox[{"\"Paris\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             RowBox[{"\"Paris\"", ",", "\"IleDeFrance\"", ",", "\"France\""}],
              "}"}]}], "]"}], 
       "\"Entity[\\\"City\\\", {\\\"Paris\\\", \\\"IleDeFrance\\\", \
\\\"France\\\"}]\"", "\"city\""},
      "Entity"], ",", 
     RowBox[{"GeoPosition", "[", 
      RowBox[{"{", 
       RowBox[{"40", ",", "20"}], "}"}], "]"}], ",", 
     RowBox[{"GeoGridPosition", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"40", ",", "20"}], "}"}], ",", "\"\<Mercator\>\""}], "]"}]}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.896770909982189*^9},
 CellLabel->"In[7]:=",
 CellID->1199792007,ExpressionUUID->"1da24b0d-6a57-414b-9d19-9981be67be31"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantityArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              
              RasterBox[{{{0.66, 0.66, 0.66}, {0.49, 0.49, 0.49}, {0.74, 0.74,
                0.74}}, {{0.4, 0.4, 0.4}, {0.8, 0.8, 0.8}, {0.52, 0.52, 
               0.52}}, {{0.72, 0.72, 0.72}, {0.59, 0.59, 0.59}, {0.79, 0.79, 
               0.79}}, {{0.58, 0.58, 0.58}, {0.66, 0.66, 0.66}, {0.32, 0.32, 
               0.32}}}, {{-0.25, -0.33}, {1.25, 2.33}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.3], 
                
                LineBox[{{{-0.25, 2.33}, {1.25, 2.33}}, {{-0.25, 1.67}, {1.25,
                  1.67}}, {{-0.25, 1.}, {1.25, 1.}}, {{-0.25, 0.33}, {1.25, 
                 0.33}}, {{-0.25, -0.33}, {1.25, -0.33}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.3], 
                
                LineBox[{{{-0.25, -0.33}, {-0.25, 2.33}}, {{0.25, -0.33}, {
                 0.25, 2.33}}, {{0.75, -0.33}, {0.75, 2.33}}, {{
                 1.25, -0.33}, {1.25, 2.33}}}]}}}, PlotRangeClipping -> True, 
             Background -> GrayLevel[0.93], 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {None, None}, FrameStyle -> {{
                Directive[
                 GrayLevel[0.2], 
                 AbsoluteThickness[1]], 
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]]}, {
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], 
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]]}}, FrameTicks -> {{{{-0.25, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.583, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {1.417, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {2.25, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.028, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.306, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.861, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.139, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.694, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.972, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}}, None}, {
               None, None}}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImagePadding -> 2, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
               Automatic}, PlotRangePadding -> {{1, 0}, {0, 0}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "4", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Unit: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"Kilometers\"", Short[#, 2]& ], "SummaryItem"]}]}},
              GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              
              RasterBox[{{{0.66, 0.66, 0.66}, {0.49, 0.49, 0.49}, {0.74, 0.74,
                0.74}}, {{0.4, 0.4, 0.4}, {0.8, 0.8, 0.8}, {0.52, 0.52, 
               0.52}}, {{0.72, 0.72, 0.72}, {0.59, 0.59, 0.59}, {0.79, 0.79, 
               0.79}}, {{0.58, 0.58, 0.58}, {0.66, 0.66, 0.66}, {0.32, 0.32, 
               0.32}}}, {{-0.25, -0.33}, {1.25, 2.33}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.3], 
                
                LineBox[{{{-0.25, 2.33}, {1.25, 2.33}}, {{-0.25, 1.67}, {1.25,
                  1.67}}, {{-0.25, 1.}, {1.25, 1.}}, {{-0.25, 0.33}, {1.25, 
                 0.33}}, {{-0.25, -0.33}, {1.25, -0.33}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.3], 
                
                LineBox[{{{-0.25, -0.33}, {-0.25, 2.33}}, {{0.25, -0.33}, {
                 0.25, 2.33}}, {{0.75, -0.33}, {0.75, 2.33}}, {{
                 1.25, -0.33}, {1.25, 2.33}}}]}}}, PlotRangeClipping -> True, 
             Background -> GrayLevel[0.93], 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {None, None}, FrameStyle -> {{
                Directive[
                 GrayLevel[0.2], 
                 AbsoluteThickness[1]], 
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]]}, {
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], 
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]]}}, FrameTicks -> {{{{-0.25, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.583, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {1.417, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {2.25, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.028, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.306, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.861, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.139, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.694, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.972, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}}, None}, {
               None, None}}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImagePadding -> 2, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
               Automatic}, PlotRangePadding -> {{1, 0}, {0, 0}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "4", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Unit: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"Kilometers\"", Short[#, 2]& ], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"MinMax: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{
                    "6912.695725041822`", "\"km\"", "kilometers", 
                    "\"Kilometers\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    
                    TemplateBox[{
                    "12024.398879205306`", "\"km\"", "kilometers", 
                    "\"Kilometers\""}, "Quantity", SyntaxForm -> Mod]}], 
                    "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  QuantityArray[
   StructuredArray`StructuredData[{
    4}, {{9473.125859004258, 6912.695725041822, 8849.44125919021, 
     12024.398879205306`}, "Kilometers", {{1}}}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8967708429806876`*^9, 3.89677091128476*^9},
 CellLabel->"Out[7]=",
 CellID->427540870,ExpressionUUID->"a0011449-4765-4cbb-b7d4-778a52b1c063"]
}, Open  ]],

Cell[TextData[{
 "Normalize the resulting ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["QuantityArray"]], "paclet:ref/QuantityArray"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "6f254e27-89b9-41f7-b4ec-b7f1658c403c"],
 " object:"
}], "ExampleText",
 CellID->1738048651,ExpressionUUID->"2d69a9f2-125c-4c75-84ba-c4aed24edadb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "%", "]"}]], "Input",
 CellLabel->"In[8]:=",
 CellID->752820184,ExpressionUUID->"031ac547-1da4-4ce0-9d98-f5628417b264"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
    "9473.125859004258`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "6912.695725041822`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{"8849.44125919021`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"], ",", 
   TemplateBox[{
    "12024.398879205306`", "\"km\"", "kilometers", "\"Kilometers\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8967708453575125`*^9, 3.896770914718398*^9},
 CellLabel->"Out[8]=",
 CellID->430923993,ExpressionUUID->"c6669d6d-9067-4b35-b9de-42b11e5b3430"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "e54529d6-cd17-4e94-9eb9-b773695ec42f"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1791376873,ExpressionUUID->"8bd13a44-4ef4-4285-b4a3-8f16f9a7162a"],

Cell["\<\
Compute a matrix of distances between two lists of locations:\
\>", "ExampleText",
 CellID->2097857218,ExpressionUUID->"d51af108-0976-4cd5-8ce2-ccfa944993e7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1234", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"locs1", "=", 
   RowBox[{"RandomGeoPosition", "[", "100", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"locs2", "=", 
   RowBox[{"RandomGeoPosition", "[", "200", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.89677107099234*^9, 3.896771071773919*^9}, 
   3.8967732298141136`*^9},
 CellLabel->"In[79]:=",
 CellID->1299746480,ExpressionUUID->"2e0dcbac-4370-410e-8da7-60e715a22ac4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{"dists12", "=", 
   RowBox[{"RhumbLineDistance", "[", 
    RowBox[{"locs1", ",", "locs2"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.896770919818858*^9},
 CellLabel->"In[84]:=",
 CellID->730089892,ExpressionUUID->"5069909f-7b1a-4191-bf4f-14eec9a54533"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"42.1068899`", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantityArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
                 ImageSizeCache -> {
                  10.869016023673117`, {0., 10.869016023673117`}}], 
                Appearance -> None, BaseStyle -> {}, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                
                RasterBox[{{{0.66, 0.66, 0.66}, {0.49, 0.49, 0.49}, {0.74, 
                 0.74, 0.74}}, {{0.4, 0.4, 0.4}, {0.8, 0.8, 0.8}, {0.52, 0.52,
                  0.52}}, {{0.72, 0.72, 0.72}, {0.59, 0.59, 0.59}, {0.79, 
                 0.79, 0.79}}, {{0.58, 0.58, 0.58}, {0.66, 0.66, 0.66}, {0.32,
                  0.32, 0.32}}}, {{-0.25, -0.33}, {1.25, 2.33}}, {0, 1}], {{
                  GrayLevel[0.3], 
                  StyleBox[
                   
                   LineBox[{{{-0.25, 2.33}, {1.25, 2.33}}, {{-0.25, 1.67}, {
                    1.25, 1.67}}, {{-0.25, 1.}, {1.25, 1.}}, {{-0.25, 0.33}, {
                    1.25, 0.33}}, {{-0.25, -0.33}, {1.25, -0.33}}}], 
                   Antialiasing -> False]}, {
                  GrayLevel[0.3], 
                  StyleBox[
                   
                   LineBox[{{{-0.25, -0.33}, {-0.25, 2.33}}, {{0.25, -0.33}, {
                    0.25, 2.33}}, {{0.75, -0.33}, {0.75, 2.33}}, {{
                    1.25, -0.33}, {1.25, 2.33}}}], Antialiasing -> False]}}}, 
               Background -> GrayLevel[0.93], 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {None, None}, FrameStyle -> {{
                  Directive[
                   GrayLevel[0.2], 
                   AbsoluteThickness[1]], 
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]}, {
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]}}, FrameTicks -> {{{{-0.25, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.583, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {1.417, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {2.25, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.028, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.306, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.861, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.139, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.694, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.972, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}}, None}, {
                 None, None}}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImagePadding -> 2, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                 Automatic}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 0}, {0, 0}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"100", ",", "200"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Unit: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox["\"Kilometers\"", Short[#, 2]& ], 
                    "SummaryItem"]}]}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
                 ImageSizeCache -> {
                  10.869016023673117`, {0., 10.869016023673117`}}], 
                Appearance -> None, BaseStyle -> {}, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                
                RasterBox[{{{0.66, 0.66, 0.66}, {0.49, 0.49, 0.49}, {0.74, 
                 0.74, 0.74}}, {{0.4, 0.4, 0.4}, {0.8, 0.8, 0.8}, {0.52, 0.52,
                  0.52}}, {{0.72, 0.72, 0.72}, {0.59, 0.59, 0.59}, {0.79, 
                 0.79, 0.79}}, {{0.58, 0.58, 0.58}, {0.66, 0.66, 0.66}, {0.32,
                  0.32, 0.32}}}, {{-0.25, -0.33}, {1.25, 2.33}}, {0, 1}], {{
                  GrayLevel[0.3], 
                  StyleBox[
                   
                   LineBox[{{{-0.25, 2.33}, {1.25, 2.33}}, {{-0.25, 1.67}, {
                    1.25, 1.67}}, {{-0.25, 1.}, {1.25, 1.}}, {{-0.25, 0.33}, {
                    1.25, 0.33}}, {{-0.25, -0.33}, {1.25, -0.33}}}], 
                   Antialiasing -> False]}, {
                  GrayLevel[0.3], 
                  StyleBox[
                   
                   LineBox[{{{-0.25, -0.33}, {-0.25, 2.33}}, {{0.25, -0.33}, {
                    0.25, 2.33}}, {{0.75, -0.33}, {0.75, 2.33}}, {{
                    1.25, -0.33}, {1.25, 2.33}}}], Antialiasing -> False]}}}, 
               Background -> GrayLevel[0.93], 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {None, None}, FrameStyle -> {{
                  Directive[
                   GrayLevel[0.2], 
                   AbsoluteThickness[1]], 
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]}, {
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]], 
                  Directive[
                   Thickness[Tiny], 
                   GrayLevel[0.7]]}}, FrameTicks -> {{{{-0.25, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.583, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {1.417, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {2.25, 
                    FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.028, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.306, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.861, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.139, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.694, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.972, 
                    FormBox["\"\"", TraditionalForm], {0.12, 0}}}, None}, {
                 None, None}}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImagePadding -> 2, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
                 Automatic}, PlotRangeClipping -> True, 
               PlotRangePadding -> {{1, 0}, {0, 0}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"100", ",", "200"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Unit: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox["\"Kilometers\"", Short[#, 2]& ], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"MinMax: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{
                    "70.53885849684913`", "\"km\"", "kilometers", 
                    "\"Kilometers\""}, "Quantity"], ",", 
                    
                    TemplateBox[{
                    "20970.42610628704`", "\"km\"", "kilometers", 
                    "\"Kilometers\""}, "Quantity"]}], "}"}], 
                    "SummaryItem"]}]}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    QuantityArray[
     StructuredArray`StructuredData[{100, 200}, {CompressedData["
1:eJwUm3c81f8fxaMICYUoFVLJLDspjlEiRdoKhRCVpI2WzJSSVEJ29p7Xuttd
3HtR0bdQGpSUigrp9/n9cf/wcD8+73Fe5zzPH9S9glyPis6aNcuH+LCIz3Xy
okWVnXxc3jv54p5FPha1LpVXcWLgmurLEsv4Vrze/PPOsR1tqKsbfldFbkXG
hWfndrW24/Df7fdzFnagdfDu6CmpQrgsVB0LPUjFp3mCN9GhHdCrkjLROtyM
1k83Wq8PPMWhTN68dRvb8Gd7sshaEwp2LnruPDu1DroWawM4XncRejr9eq99
F/q1uK5BJR2oNLGd+drHxM/gu5NVrDY0pz+21ZRLRWj/XledM63wyZ+qKOut
Q63chDOnhgFtWR8Zy888ZEdvSZ1j14LFI6kBep+48Nu75OzNhE78N0bRnT/U
Dtsr1GZR1TosTh/+1kAVYpmRWdrOlwIYn6ctOrhBiLm9OYW1f6oxoRslX/m+
FMYdK5ZEN1SDsWDyj10yCRKbav9eFaVjv9qlHw9W0rHsYP96mZMNMHFckz/d
3Il3qweUxG8J0fLAdiTHnYnd0u27ho90YSjKIJ9N7YSBctCW5ZdpWNnQ0DUV
xMLBxuW2Xc+52Dl1q72+iYoknurt/+q5WO2mzdX/UAOtQfPGerc2xGQbHLwU
y0bpjanRpcvakJJcce/EDQ4kRFsqzl2sASdgiuSTRsf9lyJh4jdpiPD9YCS2
mofobwUWaRweetcoFdmsIJ6beslxkafgtoYPy0KhGh6SleQHJlS0b57D2p/P
w+Lblzd5P2/CwvjdD6bMGeiO6ZzhTvAwkftsc99eAT4eFGrHcWsQqRLycq5v
DWxemooVMKkYfus/4f+vC+nSwuMj4XxoXX//9YnRE1DmdWtuWcNAe6aDVe12
Dv6Y5YqcW82Eg95cfDCg4Lja/LcBcfkoTv0S27WDiT23uCcvLMmC7txriduG
yThV+l4kr4UFFiea3ruLAanfj9fYf2/DyqQTAfyOcvygX82LvMjC6973Bl65
rQiiDPCyrzDwu6F/iXUoCwcqaWbqigzcKLNYGfaLAye1RobIMh40/Px4131Y
MNhlUFSuRMUeMf6GJdcY8HrCeZ0U24AHvofKQ+2EeHjaskV5mo9Ej9YrJ0c5
WG3UtZae24ByyawUvTQSPq1Q7iOvFiLk86Lnz84zoTCuWZr8rBnyOcXu4b7E
fRTOEsSP0zG8wu0Yc5ACfjd5mnqCizdtJ+IGc2sROPMuPOilEOV+faIUEhNK
mpFSXz/xsXRX6IGKZgpin2jvcZ1fCL5TZo878bz2GVlphZES5MUOus5+R4cN
015k5wo2+PfsPqlw23BOUWEgpbkB/xSeJmyQ4GBHiMEZ2ks6ikLt014FVCE4
jbfk8mM2cd/SAzKrK6Docktyz4AAP8MX/dRYVwPF3O1V+lQ2PmtVbjQtKEfx
zJZv30KEkO/i9/08QkKNz9uerSdLMFa51ffHXiZee5/5vfVUFv6uW2m8PL0d
usNXPmccI2MOO40hm05D4XDAsLddHZbd3q1sElKFU3ef77x2vhNtu+aNxuxg
4aJLQns4twNVGs7Li5bSsN7PpmVLVheW/+c+NPseGdulj/Ju6XPg9Wr37H/v
KrDm/r+WOYpCZOQxLVrFalB/TEaSI8KAt8uI/HvdHKj/9/hv6fZGPG11sVyc
24bo6RcXQ5kleNf7+jV3BwXeWRLFk4lcPBxps1tWUY9l/UsqDro241GMs+zt
QBqC3bVMvaza0WA0obQ+phK1UVOU93wqFNa73xco1uJkxbLzo2lU7F6tkxgc
Uwf2fa0rlB9cSH2RLNhzhwrpTRECqw2FaHtm8JPxlAEll0NN1rvJqLI2Tl+w
n4Ogq+dpK9NocPdefab8UA1GSKrH1+dwEH/+mKBeqxVrRyJXSMwI8et06fst
gnq46Pz8dvYzA7V1pAXG79ugkKUZMPhEAH78wQNvuUL0v9xwWVueBOWg+y4G
4x04unPa7ox0CibXv76zpKUdMskeh/oe1KOxjepw/Z4QQZrh+YZCHu4sjndQ
/ZQAf25x44eMciy5Yt+zrvQJ0ur1jQrPM1A4+vK3/Ww+rtx6OU/cphM/5tam
RduysVr2QcD2dDr8NU4aF/6l4XKAVU1Oawv+2NrtjNjNxWj9kajTTwVo9hW0
vRkUYjh4VVWJKBWN9Q3xh+fXwejyLN6twjqcVN4ao9rWgr1eB5TS8jiIajD/
afaWiWEzIemCGAuOk58kA7LYeBi7Z5e9KAWaK3kX4vO5eLXpYvPu+YT+Avp3
vshjYHVP9ea+ABrYhYnim80JX5ZfVXzmv0o8mN8lolOdhexv90lbrXjYpSkS
f1+KirFymsQKx1ZIP9S2SInj45NIm8OtsruoT31TvsOwGnvJJ2oZTxvgldy1
8G41HYm+Y1krvtFxeJbdQmYYGW8sr8i0PmtH+ObXkTPObVhka3h6gyoL348q
aJxQpeJR5cpNMroC9OhJiK36xoDcBpmFEg5CpGZqb/OprUXlf+k+Oom3ISxe
XSrq24lqJ91j/+41o8ewVfYgoc+zluqHx5uYGOxzP5W4i4c+iajqVXwyfHLf
qukfJMNrz0H/enMOis22dWl95eFt1Z+GGBk6LkqGDN9ZxcUJ2tzWt+V82Lw+
I7ZZmop9t5YsmZVbDYnHxcev32LDMVE0rs+MgV0M3oaze9hoDLc51rKwHnsV
zwanuj/B9jGxJ/N5PIRozklb85aP0Y5/oqNDDZhZfZss3tkK88SDmwo086Fz
+mf6nrxaPGmo0wj/XYHCp+2TN/dWIW/09jutxlp4+FOKDumXY770Ft7VE3QY
a+ts5zq2wfqKl3p6ugDa+2tuJzkIsGTp87AlF3l41cmYPkHkkOXXc+/jLAmd
/7eiOMaBhdTUSwkTDnwcemXZ9eJ6FjHn+mci270g5nySsoRbD5uWZ3Lx+8kY
XOLsoPW4DnPWZhb1lHGwn7+mpEOOgda/Rd1L6+tQGBgWWUOhQ22XnXBGohyd
kusPixEck/5vucc9eT68Sb/facxhoXxbgFZwVQcwNctaOloAN411uckp1Zhl
1hpv/UmA6Z5J1w2BTShdvEN8JFCIOZ4/9MWt0qC+Tb5b/SAbX9pWfblzuA2X
WrMPbt/BgMuBh5dW9bZCNJ5zmlzAxZJ0kqL3qxrcsKCn8Ag/W/pidSNHqwEx
W1xb70YK8cK4OevThWIEVd7SzFhVhy7DvgNmqIL4XnCvPSXyPPXg8+gIMkZK
j28J9KiBtu3lT3PnUXA07ozIB4EQEt/N9Kz8Sdjp7Gi2h8idpNYTPJloJn5N
3Ap4f4qDWg9/BW5BO2hS9skPnbvg/vT2YNg8Ms63dpMsltRi7PQa8VlvyRif
LTmz6SOxn0fvwzdpl4H3cOGcl4SPfzObO3Nq9xM8PPNYT7iR0NHW2hSDeWx8
s/I55ntCiAOy5o4UmXaMRoveHJZuhOrJG8PFxSQslt9Hutxfjv0lG3ZYvG1E
xM0ixYLlbehu9dGue0zDzHaz6/vpVJBESw7qEvs6rvvQ77VKO9pMLtAfVlbB
aXjTthIfHvQcHR3juhlINnf2tVncCUXjxr+UVyQMpoaJzSsR4srtzl4lPxpg
s9DcVq0MhU1Kj08z27C3V2HZ7kVNmDR+nX95SzNURPyv3tjdAreIEWul5U0o
2T7Wc2QuAycdFpBsVwihfo4fQk2go3mCd2UzlQKtHFm7S9/ZOGv2o8nyah6G
n58TdVCthtyzNB6JKYRyzEU924FcXKQGFr1wbYPjXuN7l4opKHE8vM3qZhte
JDyitt+rw9Iii8TELAFW7wt0yF/YCV01lfUiW2jwJxd26Z/i4tl0iP0NdjuC
92yu5XWSYeY7ufJbFwXqh3e9e6FfgnVWB1IdDrfDPv1DwQSjBqMf40rifeuQ
trzq1uU3PJisH0jbkk3FqYgs+Z/9dJzJLN2r1MaB6wCD892BA2+JqbzfJBZU
DvPEWmvJcI3qW77tKgnb5kbsyT7UjDu6ylIDa1mYLqPU3HnDBvm95530/DqI
Fkb0ry1qBN3cUcU7txHpBX+usJsYqEiIfXqgsR0O8z7lnjhFQeDbJN+R7nbo
b1tDtV7QAvviT07eNDKCvtS/e/k+G/YvXY5kE/ljEsSHwc0MTH/Zr3M1sA20
2UuPn17LxY4MSatNxFzJ6N2ZLCbuV/WaTWr31FM0kn94M/7U4mphi/uLm6k4
4OMwc+DhQww9ND2eP1uI2bmxdy6MNWBLTehANZmNXE0ROqOhExEvGqWzjbm4
9k1i055AATL1jvSVBdNRfvTPrE53ChaefTjf5xsby45X7Ht2iQT/ts9zxzJa
YN39TDZ+DQVSab82WxkKoMPv6xrez8J+pblfExTqUOFkGz7nQRcMvKyX3Hxf
iyW/jlvNvKUibN/v/U0LOKD9CbM+78fDbXGDx7RQMvgS+243fkyDV/HuO8UP
Wbgud0Yyya0FIW7qy9zO0tHPfxt3NoaJ4006trdV21Eusm/l6lMCXMm8bjen
UYgFU0t2qQ01gVH6frW5TyNmrl02vxPOxu/h5fvm85pw79yeRnnjSpx4PB5e
/JmKJQtXstcKBUiVy0/+ZNAE2obUMs/PFARt13vVmyaElrWE/DnZZly6ZlFw
wJuHQyyV5e5/hTDs3t/s/ZeNMe9F20emO8D5SOqNuJOJ+9HxX8xrO/CicNBx
8yM+Bl7S3Vd1EuvMVUi7IiQ4K271fKfCGsz6eERPY0yIgj8fpp3iCJ0Z+Pza
kczE6CmniNvreQi13DvXxZGEMSNv6jToKG7OzOtrrIKe5bnLBWnZOOXV3lcY
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
LTXlIdYgeH7Icx62iMdsOreOi9kpHg8Ns5rh9tfu9hMif363t4Y+iOajp6r6
X7hTNtbozBgExlChn/puA9OKjBshK9bOZgrwSnxk67YdBL9M3Dh6XIWHtt35
YW6XWBi/EC7lrkiBzZfcHu+THGQoXLj/crwFlJyknet3MzH058/FX9uZcJOg
ssw3Efw6qLG5Q5GPlK5zj056U1B5ZiXl3agQ/6x1XCS76tGdtM5iXSQDIhzb
aN61cqy0/Xi0+Z8AN+o1zKcOl2OGPnvP0kke3Oxtst44CWDk5/R60paHHv34
d5zCTgSoGzzdcboCC2pdp4xE+ajafrPvDcGDSoZdKfN/tcPAvCmUEsDEqnX7
klsGK7FyWanWh/IW/An3lPVkUFCb5OkYFUbHg7aetZHMekid9gmY1c3Db8qG
mgC7csy+EPavMkGIX9O3DayjmlD+ejRi2Sk2qsIVyr/3tcPZJbfe8x/BDeP3
fw/8ZaLV+sHXCvUOOJ7XuPvjehfK9Rt4QlYrdq47tWyY4Ha6J6mpOo+DUecu
2+IaBnKytZpDx9jghIZbdNtnI/tH8Uzv+S7c9JyO2+fQgaP2lnWTFwXoiviz
aQGY0NmU42BI9INd82g++sNV+LTek7mB3YS4sYD642/ZWLJffl/FGzLsQ8ui
O03p2KBrrPmD2oxa2Fb/d4GE7brDO5rX8iGqx6pfoc3EXaW/rQHzuTjW2j4g
seI+fsvtXmBK9NHj1ElNYys21v53e7e2bhX6t/26GUwhfKI3bVXu7CY4Kchc
jdEQoq4kSmdwURUURQ80eRoIMGv/ZeVrO7PwpeeD6qMEAXLmLH+aU1KH8Si7
dZb+dLRtpvvVhAvQf9H9xeKcNuyUPXkCpp1YdltNI9K0DUZyz8PP61ARc76Z
xf2ZhTke2ikZxPyeC5tFko1iQaLbc8PKDhZcT3tfeWNE9FixzrBw7XY0Hx75
lkrkYg1Vawv9E+FfUinhr/a1oNTOJ+9eCBuvtyeqWorVYM73eUmce6VYduPl
V7H7QiQ+n7dgrx8FQ1Z20+TZrQiw3evisYyPRW3z16V978Ik7fC8p24MjEmF
X7J2awclJk7a5hMLRhaK40/9O9Hb1sOiXciGq5Nqu6obBWT6icFD8iz80Dit
ssCAjvNcWu9ab6LvSnyU/2FA8Pnns1vGj3ZAtTT67vW/DEwk3XIrr6ZjKFh8
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
zj6zclzz15xZvqwSsVYTcd7/KrDfSO397c8UVMlsHp8oZOL8ye8x/TZ1+BQX
8NTtSTVC+PdzLMwI36X0yst9aIXt3lt304kebTYYud63pgW7Z5HFog6QsdNR
cXR1HAWaD+LT6JW5oPCivgRYMaGw75pu+ptcTO5Slz+7pw0JKuMDnYs6ceJW
8AL/Ze14ytcqZj3rxNLlydc9yVUYdRHq7nnGQm22+nXrSCp+P3WU+k3qhKXv
4sWvmM341/VM/2IjAyzSyCvVGC72BW/v8vjDg4pjko3SkkJMnfWrMzLj40iO
tt8NeQpeS5xUu0H0J1VPmtPCWiHUjxyeNqyg4NdQ97fexAo8Ln756b/jZCxY
OBp0/3I1wUUS+ZihYdrYZek9AQO1UtNcvzVM3Plyz7RsPg3R3XPz8rN4cExb
MefeMw60PunXzlatRtAR7UlahAB992+dCeqhodRvmY38IxKcd75laSl3EJxM
EttfxMHLnaMDOuiE2fm0M4sK23FpebRq5vpO/A5Ql1Te14hPV5lf97SwEZ4a
t04jU4BYw+I3ou8L8dz8QsHdslzY5RmeD3zdibwNy7/KTxJ5+8wy3WIhBe7H
3z2ZfYIMlxPv7zy72oE6f3OPmvc8aP3zXvgqpxnMXwq8n9IUDFiK2Py3jo7s
ri3PY0UouGTOj3T+RcHJK19tJylknCo8vDVOqhuOKa3hs1ezkWCWX/l0rBT0
or8W2e/YuMjz5XyTroPxnXNmrx9RIOZIvsB5X4GR9/QDcflspDy7dyPajYtr
fTdWj7zhQkV5mxgrmQf0pL1jVnIRJf1+3at7TFQaGf8uvFcNyqPQsaQEJjLu
l98IcCVycoO0PHNBOT58PrJ5FnGPmhvWPLq5gAv2/qyUMWk21Ha8W7lorBMK
wgkj13kchG5av0LybDE8nEeOH5tNQ7ifzzmj6XqEqLnoOnmwsGlDZt6+GQb8
0m4HLFpGwn3+/sFkMhdzaFePzU3qQkSBpeNdwr+/No7NmgrqwDeDJ5QzUWTi
+WtQUitEXtc+mbE1lYjb2X824yUFu+bEbqV8DIawaNddk63pUJEcvVOeXo9G
87sHXhbWYc7M4n9Z56g4Rq3pbwngwW6D162llwR4eWfEbFZFK7bbGUdlpwow
2bfZdqKsE27zTd58Lq2Fja/z+8qeDgxs8JNKLeUi3ph6TUeHA+YtJ4O0rArc
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
hODrSPpoxzdijm7CnLulVHxMuP0q4zcd+tayykEb+ahpkqN9ekeFRcVh46m8
FmwsmjvPWy8PTV1hd6J4dRheGqowSPDa1t5iyzp1PqpNelNYpfVw6Q+kGRN5
KaiUXT5lzUT7Gc6E7m8qwke6kwePCvCMZ9RcsqgGHxmfv/JZLDyJDdVb4S2A
/6zSfjenVrDTVw7OncOBy4tVuw1ONKHB7qG58g0uVsyoOTE+UgaLOWllTytb
UOhDqo8N4ENWtbp7fkMdcJn5dSLkAd6rPD80vliE0jXvL6sqM7B7FcJ8NpeB
Qfeh8LRo+O4Q8Uuf6FdBlmxFS1sbWFanPF9VNcBlLOZZzE4+7nycy48j8qYs
ovhwVQAHSROPZ2lPVcNlhVG+W3QBsn6St5SqtGKlfbf3oWk1KKB9Wncyk4oj
4TP2q6VQsVPlC4sdz0D1/ac3Pp2rROztN+0jV4owk3Hy991/ItCmNy4/aSxE
i31y4b+AVvj53l/x4j4PD2+/qOseFGHlW8nj4flkHH7U9bKGxMD0b/Tv6hM1
wLz5+tSnAlyd9yZ8ROcu/LdcOSDxmY1i27UfVS7XYd+egesDgQxYGD11HPZt
xUNVh2VLSfUIFXwn0X2aobth24EwRSYmVVpH/DiFYKyScJAxZqLsQ0FwwFYq
0t2KPJMH2fA5mqmq9rgZpGuqfF4nF613RvwdbevQNBD9/uExHlLz/l2I1CBD
bVWsgYMHBTvnLvl51pOKDR6rN42nVuPWZOm+s2blMNLyXu46Jxt9DzukvQ9R
sGTO993L6hlodnlyqPq/SrSrbumNSuJhi4n6L5I/GxX2qvOvVXOhJvFxy88P
NOz+MBr15mIr+LwEv/QcJu6foMm5H3uO3DrX+eu6hbB5rrTh+gMybl37IsAR
KsF501Tu7KjBSMst+e9dfMz8UH300eIm7GfmV8f94OOQk9cT57Wt4Ojs2mfo
kg/vwj/MSbtS+Fn89O5uKsDE1OJBb2L+3O8oJUT3CIAdl2e/9GHjuV1ksGo6
BSezrCrdzv7//3jzJc0GKdBmtJ4zsS1B35rDzCPpHJw4ffjsHINK3Pgk24ao
eojWuUzd+S5Cg8kl5Xg7EX7uaDApyGAhy6DEVt+CA2u/1n0KW+mQc7uT/05O
iOrY+9uq6h/iXQem/91TB/5vd705P1rw67yPc3NIFoISa8uoTgw4Llk+qNYo
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
LG9CXDRln+0VAX4FGyRObE9FsFvDFNm5EfpFiW0i1SQclXZlSfrUwM3yAL8n
oxFVFatvrueyUW+Qflo8hODM8d6IbfItsAt/Mp67kIqkb4Wc0JMcVIwZhzSf
aECifsd30/d1oBWsdwk8wAIz4pdGRiULRXL3fv2hUnBm8QKXFZVNmBLJv3+D
04QUtsqr9fLEeZgvP2TMrUVAnzLL/zkTi8IO/H30tAXFm3Ndq+dxcHnBK263
YSX+Kzz84hqDi+FM5kvrJjqixOYruq9iI+boqTGXOWSsm952Z8viNvTNPSe1
U5eG1IhzNJKgHO5zJZ8tWUDGWEXZhwnRXNi/Ulu507oGt2Ypjh2fxYF33OKJ
xWMcfHF5+qeOyDszyrLLwpkmbNJ2iXVp4GDm5iwVXXcattzJsQojer/4jsRs
PfMa/Mf98ZtziODFtjsFdM00nJ4t7W4SScaKpmR/ZizhMbf0jf7sEeCfxsXF
Xsub0Wby0ar4JRm+1g/7J24z4GBip/2AXoX+11f/y7dowrug6QaZuUxoi2+g
dw9WwT/yLSXbiwFW3r1Z3YOlUH9MCll0iIN9oUnPUh2I9QQcDw+Ra0X5/PJl
AdersW1VWMRgHB++XVa2n5yJ8+j2KWrRHirWlelR4pMp+CM255YypRVrRD4U
x4VSse1oxvccGtH3vkeesvsqcDT6ojNj3XMMtC5p9Bol8kr6vfk9sQaoP5M4
etupGhtPuiWY17Yi96TKwNzzTfj6krPL+HMe/DabL7rrRnDX7k9HZsLpyGe/
87NTIXhJSe3VugAqilwWNsyZT8fTvaeOXQirgaWr4Pvtc88g4C+OfSHNgPZm
0izqhmr46qxalKrwBN29+fWbwui4s/Ta9Z65VDgrfTljDyFEk5zj2IVVuLFL
9/suSyLHrK2bBVsECOPnx8u9rsbtCqk/9Z9a4GLwY8LpbSPaNKca9uvQsFFv
u35xIgkFcevT73S1oChrxJLdIETy7K0DLl50fKXtYF5404KO7Fn711NeIKmz
/eA8wsNcGxKkhurpmB+8umjXjBBKddV1pEIBskdYHlk/SzCvRPc/m9wCDDXv
3RsnUwt3Wc9VsWYUPDclJzIShbhlcbtEhc6G7eZMsfT1rbBYrHj7uRgFR/yP
Op215mKku9B1mywX9uJaQWdvVcLeJGca3hxorZrKyU5qRtxhyUXRY8Q8/fUs
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
VfP2KnsUwcoqrsvyBA9B/j4rf6EVbb65JFthDeyzOMZxX4jeFKZLqLG4mB28
+6f3aToqiGo+ROTdT7Pr/reL2rBav++oRUQqKFF9HTv1mKi5U1JyO5YCyYtf
BqjEXFof3cRt7uFi+7bBg1vySLh2ZFTpzAYh8ieyF36xJfx8edIDlUutKPtj
oClVzMGPP4LdJUvr0L+rZNUvg2zcvENTjiE8vKfvZuSzPU2QTXhepOKZCa9d
gQscsvIQ07R9seafZpzt3q+trlGCRduSv5AIrnnYA+9TqQJo0EUJgyt5mPNN
8fNkfROyVbO8Xl4W4pbJoqfa3kKYa9YaSg8Uo096YpW4mIfPY1LV6WOtaLCP
Oto4JkD1vhIT3vVKXOUE9cppM9F3vCnovxeNOPV6UuuhMx9JUQVHLxmxYd+i
F5L6S4Bvp+UMGT1UbP70nnQ1rBJb56dM705kQylSd+CHQhuuy2gMLpUXYHJt
9Wzb+Aa8PfHzsbiKAqkaNZ5Pdhsk8ofrG1I4UJ3+Xbj2ARszQh7d3OHDwfoP
GLlQKkKC+uudawgezBzNSc/bkw3s9j1UtrQSCdqqez4HZ0GqciGvN/MpFvOn
Wx6eKcR33oiJZUsN6p1N9TbM4OH1AYMjMfLtKO36kP3lDAfUtxvWmIeIMLeM
pbW7mAb1KXRPs2tBQrOFpSKR//P6DV9Y7GxBXN27IZIHGWYbpXY9mkFB6xqH
3o+OIhRXOX9a7cfEzsc70+85VGL16kUJNrVi7IuuD4m+UoXgtkmDOuJ7/dWl
w77ac1AYuEA26DkfhhYjtkmfqbigI9t/NTwb4U4Zw/t1WRhIqSb1MYh82Ua3
klNmIbjz2UbBFjZyMvTL9/3/fdKDM1JvzxNgc/Qb6zVvhDi2lraJqVOHzhuO
75fQ63BM9rDr5UE29p0d3r2hpxan9uueXZZYDZvnfmc8zzAwNJR9XvRCBFVT
l4KgDWQY/XW8uIVPQ7+/y0OhoxjvFjf/Z2LShCD5w97dpUQv7f6zKJIkxhKt
8Q95RjyQhFW6njw+WBcG2senEmFhmhnzhMjH41cGA+ohxOyJjY7CPgFM3kZH
OgQx4dn1zYqTXwk9+0IZ6RdiiKXlw78S+Sb4fGXh4CEWtBq0c24c4YHL9Z+M
DanBwZ9pZ1LvU/GhI/avmU0ZjnNDEiM8c+Hg9bHqeDQLiy/1r7/OoUPgvl20
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
CgQNZ/dInaSAa5JI/c5mQ+tYRPQvTTJ+xaX/am4QwFsl4KHmIw54m4xLL+/g
wm+Vg/1CXzb2njumslSeDi8NUl/XHT4kzypDwoyGmZLfkubymRjjH887nV+K
zq7gpxWldAzZfs9Xd3uEDzfEjcN4WXi4qFXNOa0O3V+jEqMWM7HA6hy5MEaA
3XbHs3b9YMMnaqZIqJePPa6VqzVDufAXsz5fvagScsef5LhrNKAgoubL75Is
aF9Is7ttmIXVjwdz6GwKQniil3+mFaJe4H1r/68KyESenfa+wUTPKpfDwxKF
eLjR44SfAh2WaxUHOwOZGJ2/1CVLNhttqtvd6hMEuBlXd8CrmY5VOQ5T2lQy
Mi00n01EsLDLqUK3pZGEqMS0uHnnmiBUXfzkpAUH4rkKO8uu0LHuRIrGNbc0
bC+IO5dswQB63BxVi7kYvezaHiDRAKtCxXFzon/kqieFxx3qIRQgrn/AjIST
gWfmoYEPs72xFqsJnurY0mX114eK91nVLYcUSzDwyXPS+TMDKuWZ7Sk/uSCb
FKpc92VAd3tFtqhjDpytT52U1K3AVIxBvvRjHqYK7Dtv5ZPBU3qwPEBAx32b
qQpZHzaiVVdNBl5vhH0+8z7ZUwB2TmqOZgwXZ6zXCrbU12NjktLugSwalJMG
XdhlVISpWc6tyiDBuCH5QMFNNkS/Lj5U2sOCznPPR7V/K/F9h7fqJI0KmctJ
JBJxntINs8MWjpZC5eGq1nelLFj6rTdfdiMd+hO/6krsCa+f7KdpBuZj4dsv
5/MCeTi/X3z3zn0MhK5v1xjpZ8BkwWCCz90SeHkmpKtY07BlkUpc474qxBW4
z3nvI4BJWdemNZN8iKlqiH33KcfXtJrvW/MqcNTq8uL+LXyUOZSUUQnv1jx+
MXpwhAUVve5D5bpMRDntuxn4tAZyz3fu3zcuwGL+xYD00Drsm82bbpEthoI/
qdsspgzSKbLCTuNUnLJ1b6eF1WPorVNi0FMSMr5dzzmv1IA/rU8VlSMroFry
ZNOHAAomGt5yzu3hwEpsrXLoWgHM1R6cPz6Tj9b20ZHLJ9lQ21pbe5rZBEnj
HPXMSww8u93SoCDgYthZ4VhIvC8ueFIX713PwZ07yh+8Ce90LLxg0RjQhPuu
6x186qthHaL03UFagDc1JPOBtGbobzL5RKuuQsTm2Z6qCnyopZppxVbQkOC3
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
aNi9de3pSCrIJ78HLAgQYU/sljPGxD5mftYcEH8U4Z5nunnWzzY0yO7R6KsQ
wbbdTX/DRzb23lij63GmFVmOspV84rwrNM/5yW8lQzVRoj0qJ8SH0coZrRli
ZE6e1AgiOKF5jtuq5YvpGGsdEP0W1SLUrWV3glI9Zln6Kauf5GHgrKzCoovE
nj9K3t4XTPDwx44bK5/xwZ2lV3laQkfGz7bU3VJCmC/9zj9BJvYkq2RZyyQN
270fu7qWCdFGqck6rk/Dnmnn/BqJ/rA3mFgbok1H+ffENq31VKhK/3q3tF2A
LNNP6n/nUlF1+c0b9w1CqGtf6/w+lwH/TEtL7b95yKz+IG2WWowi2oFwY+cE
bHaPzL5K9PHAxKv+TNAwVnjdvL6Mg8uCQI2ayjL0ej8rLRLxMXp8n2q2AROm
hWKPgnUVKOvtfrt5bgvWJFd++0xwjdJBqa8Ff+vgfEQvJp3wfEG0+6xFv8Qo
War9yoNfjbbTEqcnFwSoXvz1+tlQEW6Zz+69EUX8Xt68vpRUDpITElqsm8n4
Vbbf5O8ZCuS3z9y85iYDhUq3Hmuvo4Cm9t8xY5Thzdg8tfsPK6GcLXS4TReh
XSUxMTwmEztJhjfaL1IQKn8ytKtQgC+dCHKvbYTJiyip0zPrcPtF0+IjpdmI
u8OL2N9EwtJjHbXO58qQ05c5qrKCjx+JSfFDmRRs61jW43HjMV46Ln950EOA
0//CdjYmidAt509u/y8Xtzsituk61uJv9YN3hw7TcUdm5eJHPTTMVT6tUz/e
hCLNI8tdL7Qiqv+MmziYBysT8/AL13nYGuC69NFRKnQcIjdFRLKgNDa65sN1
Knoa/0v5kcBAbCAl6N6LBygpcjd9S/BA/CGzECsZYt/85GruhNTil3RI/EVL
ETY5NMpa7aUh4q4K97ivCNp/ZKdv8KND4YVFSvYnEsa8NLYfKa/CjgspzH7v
Vsh7zJaNM26F77zgg3tNm+E5j+TR3iVGxHCvE82LjGVLDBz40xsx+LMz2KmF
D/LRfM3VC3LQozU8J+0PGZQ7jGU3CV9GYa7t9/QoRDL8p2tYkCCqizc4LS3B
+67/nqbkEM+dlktuf8rCiqk7n55Xp8F6ySDpV2QzVm+8Pvu1jBiy29IjNLKa
cKHiu/HGXTmY837dlKmKZKQ1+vV8L2sES2mZV/UiLg7TOnKnJf7/Pbe4+ylm
YjzTNxo1kOZgubvdo+/TJKhd+e3rvLdi3DykCMdANnZo8r2264qwW92LndZJ
BWX+9bDo92WYPEOT+zZQi6NP7BmnqXz4XDJGtE01ehc01pzfkQ8Femiv4zcR
XLf+ilx5sh5+WbNfNi1ogJ1Od32RsB6fRK6PT04KMX1/jonHOxrsj+qZ/9Hk
I+nH4a0f97Wg4GWO+m4zMr5/k1Oo+FyKq4m2uT2/WUiazl1hnSmA6Rz+Xv49
Bmzrfr1atqACW9f9eBYwqwKbI4TMNBof9zZ/+rpNj/D+uNI5tfPK0Zm4Laqi
pBXbF+lXvyN8vd7ksqK+IeHvvHC1QmKfrjC67pmWN2PnMXXLPDsh9mQL/a8c
oSPpXFjimJwI+cE7uAvviBGaZ+ZTtiEdrmbOKUVKXHzT2LPxXh0TZiMh37ZR
83Fuw80//0KzUD7Td++SeWTsHJkuOG9UD+PYvGlfQmjo7dr9UYVZhkZLz+Ci
XjFcl88f2tLCxE4FWsLOh2Q8OzGaOHs/BbbfUlbVLaiELVf3tZsGEwy6duM/
ZgmMj9Kjz3vRYZQps6BXngaNhnMKTarF2HiqSn3FEAnpXtVvv7uIEE87GnF5
RAyh3Bz9dXcpiNnd8CWDJkbyaNCzADMBWHY7dz8NYOLOurR966tb8OndEovG
x5exvj5hoYtBFTIrOEUDOynomS0f816OCsUvUrUhRSw4XRDxeu9TMS6SXuOs
TvjhyMSTPVpCrHQ7EUUi+mUTK9nmNNFzywc/9a87xCVm4gVl6GAttN/edyjT
IPJ/ZOGnJ/tJMNulfMJ7Ti2SkmLWZCjxobjjmZUUORoNtryRs1wuIn/vX5Gu
S8GQyvJFH5Jq8TVAU2kNqOgm9bpGLi4DW+Fh19lbdJzYoX9gh3UjTktRtRdQ
BKDXaSnnnycjrmLB4y9hVVi5x3f3nK8U6IeU62/MrkVKmfMu9nEG2iqeCss+
8rFs8B97U3YZvG2DZ74cJfjj4L2lgfIUyA7vfXI6gwNuMnVu4vIWbPvn4R1Y
UYSjrhFxC5fUYzpjefqsvyKwpF3kNS+wsHiJavN6zzrIn5hhv+QR4ZdD/F0b
1Aluf/Xe7o4DDSc3jus8m1sO4XqJtSuvDkOzDjg6RtXhaP7BOEPvGnB9/72/
eY0NyUkzx8xGPgpImcK1n/nwfzNv56cNJOwx2H7kmnozVIvsPbb8o8NHfcax
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
3ZXwZEXn3obUBuzviEyK9SMjdMcG88VObdjr9Wz409xiwt88ZI+qV+NHS8Ni
ZnEp2F7+nKhOPiyZJS86dhDn6a+UnCx5DPtXzTEc6xb4J16mX5lPRclI0Z7k
uST8eanpnCuWQCosXP5tiQBqP1c9WbFdArNra6auKRDh3cxblJsGbJjfSym7
xmDBs/nla52CWqgqrB0Y3NyIC2+WLv5+uAqnRwwfH9taBrWxDSn0d2k4LqkN
a/pFB3Xg9Tvz+3V4lXErsfcJcf+J59TneCXhacOe5srXxLkvbwrJJ3p48t8t
KYsSgoMNW7veRLCRG+t7pvMSDavTXrBba5rxQ1m2s5Lg9851om7uijZc7r/X
mn2di57NbReltrHQWDRsLyDy2LbZsS1iegGuGs5hV75loH6Rn0FuUjIcqIzV
yxeWg/T8jHr5fQlcndRDDv9tJbi+ZF0Y4UP21+NaZHpIeDJrxtCjxWI83uyh
EZlbgAvp/6WkEfO6XeCZ7VLagn2KNY6LD5GwOvu2Eme8FNcKSw5un8uDjtOS
bc5/RNAoto3/YctByc6FoVOOlmLVxCre5E8x9vFk2aXvxVid6nvwoUiCTpGW
zvnRdFzSZ6QY7yP6OnmvJf21EAtnX8yeMkjCHesYr8HrLTjSyH9T/lyAxtvu
wYftObCVd+D/zKRhmej5hhwrOkrWlJHPxVaj7STXMMC+Gi9IwVkOX4l8MKmO
T1OiI/ZVwa4jqyg43nhSr1XAhFdsfMh3/zas7ihZU2cqwEX9iwyFk3zcHvqS
eLWGgSilQMtnNTRkTcv6NlBVhC3p7+fGrCuCx9IgI5NAHkqF2rPVdhF9u+Aa
5eJyMaiXX/oWbOLiUEcdc/Z1Nvjzt2j+9mMgYfWCVTPPE/2YcDRtcoMYrS4J
ek81HsIuZHq8tZkIrbemxPNqa4jnYdO3JYkGdfsjprsCG7Aq1kOPtkWElzMU
X2+6TvD4LM2GUztYSJjXy25dLcFP2il/ZYNy3M2bGJGJ4uH5pytU5hkeDjgN
L4pgMTH88FVc/KgI+56mTttD8IaZpsqBV0XVqJE6OucseAh5Hv9yKpGD6b/G
Sq62FuPWLHVj6RUCHDYy/5o5KkBb9VK1OcWV4MW9y3yh1Ia69c1e77qq0BmG
U5JpHLQq5ernmLCwvmc8X3a6EGmpbsy5W1swnri36cubPGiee/116Z86bPLk
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
g60HuKCvLenV8uLh2LJPUSc/cgguqyqYbUTFP7XJy6zuXNiN7w3OJvxT2Jmi
THcj9s6ib9+Ruc0IU/5P0fCfAImne11eUgSo6Yp69oefCVs3rZ+HDwnhkBnu
rjKvGfxpDw/f/QzIUu7YmPSSELHu2O7zZ1vxodIy/8+WYrjLb398bqIMYo2j
u/bdoSJp++0rlVr1WLji7rivdj2s/9RZOcczcce4fDwyl0nkw44hpZV8HBcc
LvLWq8LyK+ORxT/bkKVRsibNToALIpvBsJvE8w+umn+6kYrNFfmSZ1WpEE/e
FXBcqgnesiv9zujVIZ11N//LZjKiHqqy3kyxEPbY//OPOsLjNNhW/9qZeJe8
6vLHSyTc37wox/5PLSiJM0vHNrVCwuTRrNd3OaioUls2zuDju/jrx4nniX0K
llA7e6EF8v6vk1/4MdEUvMvKt6AGCZ5+CRue8aBwLf5OFcGDWyJqvWpKBGj9
WLnOp70W3B5y9gtxEfbc+GIoP0OAo4fm8e/lV6FXzX+sby0X5pck3TM1mGg7
aTFAmdUIc6/UijvCQlSOOUo+Y9PQu0zdRjmQBi+Julc5viQMN44YHuqpwtQc
l7SsUyKIs2SkQ3+y4TEW/u6tYR3iXPo1Jev4MLiw7crdMDJyNimvelmbjYvJ
GxfsVCnH792TBg5viFz70t50hMfB/tclx2+206D8I+RdWTofcmpD7fv0S1Do
OOrc6/UMEd9u1BqrE3t9oKy4UJGEl5q/rGcZcvE48J9rSBgVGsYHvlKcRWiK
Xjyrc5MI985ZGPEtaNBIbl5zubYWviHhyv99EOB18Yb/MErsU9D6z+lkIciu
yu8uajZj2IWbEMchYVRN/rr0air8nLrcEzyfwWaZqCXAqAWRh2neA+dpeNzb
Mlfr0RNkqizzjH7SCuqm4AHOAxEcJbwDtPp4KNikfDleX4Aj08OXVGgCFApV
1DdNt8GhaGuFTC0Fg2X6Vt5dQrjzGN/fLGzDKcVTi/YZt2J/jHcIpiholtr3
8cTtRug3jL7DAsIj/rx12kd4VpDR7rhJVyG2HkrOVmhsQFvknGfiDY0wznp2
TvJ3K9RuTE03beYiKUOYulOlDXOzLCztwrj4OuxVSOJV49jNhJADHeWQ2bdu
pEmT8B2VscZ1O2hIbZC5IE4h47jeOLnjGR3s9IttZkdFuH3e7TafJcKPtsnP
QbNImCH+2SSSR4PHuaDkJURuKaz+91O4XwDRdvF5P0QilGUEtelolyH8vjP/
YgTRC27hZmnTdGwoPTzFvk3Gfs8U2jdJOnz+6Maca8zGoraEx75PWGji7212
P1MNi8XVXXlPypDd2Vuc3tyMTTo+D7Yl1uFbvGaE6hUmXh7wTp+3vw6npLwH
D5GJ5/lsYc3JxRWI0lPZ5i3Vhh33HkS9fcvFMt6PviOatQR/yTwqnc/GUwWv
HzfiiNdzZ+rev0FHapFmA5vXiMDMyZsL2/lYo8eer3ilkPh8tjlUi3a0RdRW
ntsiwAcDI3J0vAB/c+2Dfqm1oLxx2QDlQxnufv3W00XMXUiyo+7Gr2ywXRvo
CQFVmPSwq+UYVYOhealvjkMtXpc1GPR1cnGvbHfyiS4y8htsO6siS+Bq71Tp
Y0J4ZlsjTX+ChojF815tJ7xyjku96O3MCkxGnJ53QSwHjMQnxqP/aiEtFpzw
nzcZSuuXbzlH5GJxYkGHj0YLvtcfebJAhw0Wy423XJaGJbYqyza9p2Da3dRz
u08dOgM7d9/sInrhYLKi9k46nH6wZgstUpGh/Z/kAj0ecsSS6W3FVHyoYC3I
qeSjU1c1u+lcPvb7sT9s8+DhtvPx2vycSkRqSvU/ZpejtM7Ge5kGkWuGl2dr
/8vCpaMrro56COHD4T66PliCnfMTbdRfE7ypSXd+FFYBa+VFm2frEv6qIPXm
aoMQmkGjvh6LWaAs/20fHEsHy/Zw21YxKtTnN+xQnMtD/bxZc5dVVsAnl0dN
bhHia7LL3DP0TPypWBM7up0N+56HridySdAQnTidwqmG+pmhbePns7FcduGq
yCYSyBNN4fffN6Hsq7qOlmYiDo9+Vrnk2IplyYpHSSLCt3/9vHbtVgPRk7de
KUpScHLFhKNCUB2CrOWWHI8XgT/qcjD62gko5cy4/tW6BnXSYSzZl89gbxer
YO1Exl4z0hezn1RkuHH2z9glJHjaT1DW3ool9cO2joxmqCz/Qjk7zsHC7WHN
U1eZuOK6nUWxYcFv79FT5NpWHGvylri9rww3tR+Eux8mI/VtR9TSq3V41Lfm
7TkxEST3/mVThVlY2xE8/vlyC07Ltyx2OCMAVxCc1NLBheXtkzrxdhykOy/l
/l2YifDwDwd2ET198U1kq+hzGSbHQmRbrwkRru1RGngxB+y2blc3Hy4urpv+
TdlFRZnqtcqo/Gr48zqOFYdSsP3M/a3RmmVokQi47vuVhJNuMqO/g+jYyZtD
1VEV4un1tQx5UwY6Pqz/6x3fgtGe/Hm3KxogLztwacqBgWSbZXGC4VbYSkks
z5MRYAH9ZrtXswguez8bvJ8qwO6rQq/UzHocvLlIz/zPfRx8JRE3L/QGivt6
f/37IcTM3LToIJdGVF326vWIZCKOt5uz3k6ERq14ntVLgovSf3a+qOEhwtjj
9V4jOjwylUiHFlJhIkh6UtvKhYnElyV+BP8MqGy5GTPdiI1NObbrT5Bhlrh7
MWM5D8krB850beTA4LH0YX5lPR6aR7O3LXgOzl/tM+JFtbAqr6WTjChY6j+x
cDuDA4XUB3USPzmQ1n6w2tOzEQ6Tc1LWrLwH//3Pjy1ayMGclzEHm6/X4e2n
14crxsg44Oc/HNtNw/pDFRHtRO9m/BiMqLIUYu/sRRmdtwmuzzW4oWVOQpWW
x5oj25ugvb5z+NEmDspdGuWzrUi41CjrIOFdiNpALb/hKBJWZxat1grjo/RF
IEPduRY9ung+U5+EYK/+E1ZdAnjXxwhjPZvw3f3+TDbBees+GaVn6BP8Y3vq
fc9sJvbWRU/sneRjys7816j2M7h/KVKWK2uFpWWQqCiRB4MeR6nFzVzw7Zbm
DWiwsXO9oor8eA06mx9fODUmwIi3R+yCO3QoWWSbyr+kY1XH8NnAP1x8mb7X
n6XXhNq41P363XQkrW3p/6JFXLfPmn+alYmMD1c/ZOxiIyeQRNlgQsdCg5aL
JlIc/DQcO9hSR8OUzMKlnPt86ESX9OBrO3SD5TlRFkKoHow4+NymGv+i7XN/
XGVgT/ydBF45F8b79N3X/SdAR35mvcNAPbYX+qaTjzbgl+XSc43axH3TZGOF
a5j40i9I22fJgg5vn2vvEh7SP0R5ut1oxKpXPhEGMhmYrbV146l7lXB9dP3z
G8JDzEsjguHXhoCDnjqfeK1gWh9QuKhChsRrkZoBwa19c68miha1Yuv4KarM
sVIod+5D3mEG5l+e/f5LAxPqC7qnHt2jwYkh+/uHHgnHzvh+qVoowNrKtZY1
1lRoRRyPCFOh4lLCw6edPQz49QymVrdwwGdmLNydyMKuX0FiFCEZ83/L7xjP
LwNfa/fVzG3E3CQa36YqkFEotlQpYW0ZekdDSrXlymDWbxhamCyEunfhbsOT
SVh9tnQDL5gKxYVyt0bZVLycCFZ6X8BATEduU3HsE/TezskXDNdD9/XJjT7K
LGzL0Yj2tCWDvmEWY1+ACMsdX6wP9m7Foq0XUj2zM8Cv5LQH9DNQYzqccK6L
h8p3o7Nv6FXjY9b4wRaCEyorLnm5GDIQbPZ8polkA2SKdV69f0pH3sn9U/Lm
ddi5Zlpd87MIVEbI35VsLiaXFTBWEPMhtkDmVE5gI6T1n3jSxyhYdcP2doof
Czd07Zc+da7GxNAGYf8FFuJbHl9495SNDV3Xh19/qMOXSH1pvWEBWjhmWxIP
E3PT6evyYrAdOc2SB6c31eLvQJrHQSEbNqQHNSIkYFnPDFGYOxsUtwLNSyUl
MHvQt9l+ZiPGnBbts/uvFfOd5I/KxNAg4zoi2FyThdiz8nkL37WiYPk5pUii
h6+4WM47F8uC7+m0f9ToNmip/t37o6QU7kOh9LgHdIgbr+T7JRDcZeWXQTtd
BQ2DDhUpbSa2vNR3jdlMcF7IG3ky4Yen3DJa/I3ZeLPaveFNFxXrNFZEBkQ1
Imsva1/vEAU9UR+yXI8y4fdR46x6oAg3ufJhCjO4EN3ZrbvUWgj6laaHSzcI
QZU9/2ff4TZ0fPOZ/h3Hh024kuJrFzLMb2e9ChoR4Bjjoop5IQ2mVzsX5Xg9
wBa7yb0vvegI4Q/9Z5tGgU9Xo8ccTQr+vtK0m/29EZ5nR/3vrOPhUP7VfUmk
KigGuStaej6Fr/2iX4PSJNRfiIz1XMvAxoF30RyjVrB/nbh4qJwJN2pk5KQV
kW9fFm8KtCyBh1CTukNvP3LCTkZInOFhqxdTPGxuO/6avHFWCuCgcN66+Hn3
ydjZe/dL+ac4qJu+niX/iQKpxZJbK463YPH7+33LzckIA1fuXH8tJpX3yNoF
t2FvcPJMd28S/l36KFl5rBEvdrfQPKVI8Jec8Fd0qoOTq3v2kcd0ND9YviNU
moWWgy5OozkUFNPmikk7srBowb8dVnLlyF7yqSvjMhXkaJPkCkUOhm4qBG9M
bgUvK+3O5DQVhZ+q1vMWEfN/bqIh/D7RX35eLj1TTJi9e3U7KJSEMV2Ow1YS
H8sWWfnUVIggW7FRZ2UPBVGM1J5hVRZO32W+8l1H+NvYyi3UKAaWPNz45rc7
D/KPO4quJwhwlfRE6695OxQXDN/b//P/8+wWGOBGRvDqMq4ki0R408CqPXFV
kD0SvRwH6nExapZa32QzNrywz8rUZENwlrXesKceNp+55SuLCE/+MO31T5GK
tn6fhmhfohe7m7v8k/hg9iluEIVlAxcdyxWaqdDXVolZoUXF9WyDhwPHSThi
ESt5kUTFogD6Agjo2J/crn0xmIXboSHCeZVM1Ost/yDnm4abQQcoaOfg0M97
no3KTDieCGDtSy3DgU5mXSzh06s//pLfkUaHzap+CZmVdKTPsGk7WMKFzVkz
PzsqDQK9grIn1gI43mEFmxAe4BMzmaI9RMNaJZ2lz2cWo77pm3aaugCpJz02
0/IE2OylO63byEXUidbEVq9WJFUIzi0NZYK7TOy/hP84oOfs0Kz0FIEuvG5g
n9oO0nbH6OASNpavbPqmR3DKrZ/xrhP+DfjMO/ll8wUGkqq4dWOVdFj07HIo
O03FhonMG80MKtQ8xAOM3YjX2+r1dP0mYX/w04UsgRDzDCdHx2wFeFM/7SCf
TpzTmPGfozuYWBXYGTXDWITYki3j7P8oOO9VpKqRXo0lxz7pyC2l4Y9eyjXr
jZUYLPymZPhMhKrP62McphoRMJJ3f9njRuST3R54vSrHSc7I7uQzZFhSpwPI
RH6+OCmT6E5w1JcEy+ox4xw0NXvenZ4tgKypZIHdf3exa8T116sgPm6PloS6
lTHxwLV4bzKpBk6lK551TFFx1Y+p8023DdULamZS1clwjRZdPW0uxKIPnG+0
9YR3lHu/+L6Vgx83zqYH1FXi57oXYbpxrXj/dnfEKiUayHsbm+4ZM2D2Ycj2
+QTR585yb95ub4bk73fvbMo5OM/OWtrDYuPtyRtEZ92FQS2/N3aABfWNWya/
LayGIPJS4Oq/hO9tcDn3uywP899OzbJrYkDmr/HeBocCnBrO6OLPbYYF24N3
XpxI4pI1/wlcRdihovag5FQ+YtSm3H7sYGHOHoVLN4+2okV5Y23gEyHuUaPy
i/aRcGPFqaeeBVXgbZOPVSyloubVFh0/FRKUnjmd2naNDZ9/HY2KSwkOYJlO
HO5vhd6RM357CG5RKLh8959+CX4enM/JTaMhYW6szYerXLiv/VlTSPCof+Gx
s43xNHza2rDlVF4rQrQ9A8X+smFdtz3CpqQJLp++9swXz8Hj9ncn+Y0MtLVV
W0vszMLXMt0E/cUkuB9Q9DGuITzDLqI4SJIJq4UFfztLmajaYa16eisTdJ2p
6y1yhJf86tNcuYUMRe83x38uoGL6kTwjTqIK9PUlb0mEV4dfjisqsaYh2aUg
+tInFiwmj5uz0gXozvDd/uOYAHaZ+/mPiirhszbaMlGNi9GbERrnbtKxI6NQ
8ifhQ16WfikuN0uxTlxy7OJPFk52szMildOxaI197tc6gm/PSPfOYRGeOy9q
2dU+BgazjKx5z6l4hIEGygMBfBznyvzuFcBoJDLZ4osQD8s+97PMafgysqLW
PIuLIpeWhdLmdFybsgxan16AuCXPHjMVmfDuDDadL92Iw0eG/TUkspCq5TDT
dzsdmpYhpM2FleidnyzHeEvF5FK4jFvT8fEr/myw4EG19KWx9QQFNUFt50w2
kGFjc/x5WCoTwyNBf5qOsmBm0EwLI66bL0EO+N7BhO5xF8cnMiz89+Cp+FuC
Q7Hw+Ie6tEQYifqDu+1o8Djg98D5LhuvAq+abcsSwdeE9NCq+TGOLvnteOZC
KwbFoqsKXrPBeaj4KcKSCkfyrUMaN+swdUPS7em/FlxayTNv2tSEm/wA+3MS
bJjNmO9+9TkLSRdGclffpKJWefZrZYJPxSMeWP86XotNAftySPIk/GeqyOPT
2ahbdl2L2cRH88UWFb0hMpF3B33sS9oxFlXocD2AjMpZ7xmuJlxY/Ku+Jeta
B78rFeetrLn49j5Z4tAFIe6LiQq/lZMQWTrzskoMF3s16IujibkMfhvkZPqF
gdvh72doMAXAsCbZbaQV7qqCPct+i+D2zmGFJXEOhi3GdLH6ejhmrb4m4UPG
iddOTIeoBqim2H99s74CEvTEm5cJP31rkKsZ7kxHQaiE5A3tFtjwvawaL7RB
LD/QWlaDhjzXl5UrpIm82OEQnx8ixLJw7RfOkbkI+1Lq5XiQiUj687DmvGYc
8CfPn/5SC59b8gr578hYdujj/NVEn4ekMOnhNjQse04d5BxlYLTSU+ri7SzE
5P73sH6ayE+TjmXNv+i4VBOwiiqdgz+utgl5t4RoSVawTNNgQbXH5P7LdArm
v+jpcS5nYykjzclIhoLnMitKOuVE6Huu+nCSwUfJ4iK3T7lUOBnEHyWNpGG4
8FtmYmwrPJNTjjl/4eGvhMJ+gSEf8Zlmm5SkBcjidlx1a+agb+yrQGTFxX7h
ji7l9+04FPjTJrBaiNdBe3T/5DCwb0U8uz+W8KVdsm+mTFvg5OHeIb2Kibyh
2ac6E2nYfnvAfX95M/insVPJhATtLgOfn9foeH1r6FFXVzPuXjO+5MDlg9Ko
v99+QAit/akzLpqJMH1Y0Vo4yIFsv5nK+xQBzvusaT7yj4ZZP6w7p7Y2YfvR
tROptgxQ5sz48FmyDlK/xq/FPxOgfldSsrsqGZrxATfXzasFOsKVtd7XQVOB
e1Q2uQUhqUs+rKouw+BS23X3iPwsrb4vX3M9Af2qj0tVS1ox53BJpunHq6DY
K3d3EOdZcMdoo/coHZNTFh9PSrTgqDT5liWRY18jqza9yWLDMH1Ocs+9RhTX
IjZavh3G6pnH3r/m4SrHQtjOoONmUbnMhrwy7KzVz5+9SIBzvnlPHYcZuLle
yspOnY0TWzSin0rRUcjUfnGE8J1lCDpo583DDZpJQ3UXwcdac+0dFt1HYZ+6
ihKP+N1rR/SIL9GLXo6fjK7QUFC3P2w+qQJml4ZU5huwoPB2T/Q2uXzEb9y0
dl8BCbIvZqhVmQsgGuZaWnOFaPi7iK4ZU4DeNvmU+zZcxFc6lE9LCVBsmzZr
j4UAISusjwVPUPH9lyh+bX8xVHKSHn5+RIOuiWfmm9kNCFbnO7/f1AYnh8zd
50gMPIvYvzPcXgBt34o795z5EKfuzL7xvILg4wCq8RoWEjo7aTGnWOjffOZU
XSkb87KbBj9YUJGpsW5t03oBbHe0TtFfcfCiU8zD1rgavT5yoY/xBBqBC9aK
Yhh4uvr7mL8gD3dy+8532NTBfEtx2ue1bVDV3zp76gQNlufj9KS8uahSuLHh
0BIqts1xUFYh+HKnxaJ2JyIPZ54ucvh+lwHHTJLGVlEtyPnfJ6piajDZPC7o
GWHCRJVygDabhc2WIyMVhG9o0X6RtbeKkLJcSmx+dQ3aTLi/N3jwUBwx68Vb
Dwp27t8QmFDFAPmNXWYNoxrfP5wyv5/Tiqy8eY0vavNhJmb91T+BAnc/701G
Iyzou45mvqDT4XTdOlSqgY6sb+xjq3T5eL7TqM/ATQD1566HiqL5qBYbojoS
+R6xVSJB9QAfZ+67PpHSYaKvYDrRpKUSjlE8sbRFBI8+7lrlk0/GYE6qk9fb
Qhz3iOudkKPi5qCp8/aUEqiXLk6qXEFCjhxdl/WeBaqHwnqFVA42lHeXuckz
UDs34vWs2gYYlr+uu0ac/9jzyvAQGRp2PVtkxjagE7xbFy5fwoFYUM/haVs2
epynE/tutGK36V0jscanSAzTvPJPSAPvS5yfUQId5pYRFXFE375YVDP/sWU+
Dn4L0EYDHy/W2MhV8IUoMjmYMPS1Atfbfqkp8sg4rKS8q/MQCVtmKcy6JlGH
NfGKDxT6WyCsIi2WIc5huCxnfNiPhm9Wt5Sfq1EJ3qn+LVuZi1iZTcdbTDn4
NVyk9jCNhQ83eg/KiNNRvmWhWG42EzP3aGn1LmzDA8VjdEe3PJR7RBu9P0iC
ln33ifUcNg4LLWdPDwpx+J+0tEQ9H05Zc77VEnsY/mrFv2YrElJ96P/djKvB
7oxYy5MONCgpzEi+95CNXUOm5DKBCIMVFJOTeTwEr7+8M/giD0mKtINm/hyE
vv3p/m0FFWft5v+0upqN2H/kzb5SDODEvT4vYr58N3qxRlYKsDIbuw5IViAl
8CQnvo8On8jwTE0bEr7rBDSnMUm4cHlGW70EB94FiQe+7yyHqaxMtYxmPUx/
/ddY+L4VPVJKnzzV2NDfmN5ySYqJBSGpSUdt+PBaxk4fuimAW/cxjYNjLByu
Tqin/irHh0YF8oMVfPSKHNVNiJ6w6egLehVGwvktH6HjzMXTHwrdDwwJ/2k6
Nkf1CRvf9jW4lPPasPqy7WavKjYyrxf7LC9h4YT7uN3zKiYWmgXlrS1n4Ej8
+WzVZS3gftPNPq/RDt0rJ2szXwlh4D8sVcYleJw3KdhfTUOaSvSZiCgKwjUd
v42sZENs18wHu2a2gd7m3Jj7WIAZ5rE1bqU8IN3hO3MjB/OXe5jVV1ZixFbC
7XEW8TzPBuu+HGPgS5Tc9W9Drci/Ivej6zUHL/3N1m1bW40NToyPaYtpuNP5
10v1Mh+zuIm/yfFED+fYhJhsI/jM8zt/Jb0ZpWhU+6RL9P7zj5z15TVgNgQ7
PJMpQLFUhZ2giYJXXZR9R7LKUfPjmAsxJHBevGLl6NxyHMwQi0gLpSLQP/Ie
/1EK1kTqv48poKE/4VXx33ckKG/bc3bFbAr+ZnvGbzRswJHCWg/pJBH8YvSO
rSA+B3OD++XBnWw8O2r8+foHNkrlLbwzkzJQpmwplyrTiqIdn9Y8J3r8xDPV
0eBPDLAvju/Lryc87WLpNQMTGiIjpw+8PyiAwL1qwv1UM9LGqy7OfEvwa7iz
xoF7JFCXFgS8fUyB/i6jNS4sBp44HVtDqSEhU/LbYjcXKlbMzzvkkSGAjMGv
NekT5bCPuyR6k8HGpnT7PYfzCnHBnUGzWl+OSnuB8b/ix1irvy1/py0Fzr7h
CnUhRA73veEl3GqGa734AaMTIqg8/fLqOqsNzG0rffSqq7HifOi5cwTv8hM+
zJDKpWHJ46sO7h954KZqCBa8K8V2SWnff/oEjzqueekiRsacXTr9dkReIE1v
x7wWMk7GrG6iLhTBxCx/1l4qHadkpV/efklFYoKnoVZMGZaMNz5P96nDrI9W
UVs2CqC6LiHiAZsEsuzPSG1vYi6KfFv0NhPXDYy8F0owoFLa4BvzlQlqxM8c
0VgtdL6qk8TvMSFmldMZ+a4Yypbt5PnEeUQtjNQd76Hiwrnp2MkTxB7kXA6/
KUPCi7f/zn4t5aIz+cBG2m4OfFZWbGLINWG16PmsP67VCPrPS7DjbSmSH6Qk
EQ8AV4f+DjH6aiGuc/dS9zcWNDU7Rq4o8FBdepYcpshGaHfZwT/PyjG3tE7i
yQIGeudZ9JYGcqEz4pAVx6mG093T0j7zcvHuwOrYD1lkNNXw49bcyEXakF58
xpEWfLqocPzWLz6MM06O7HnDxJjHT9cgqWbIlulylm4TYmzFm7fn9wjQ3y53
p/qUEDlakokGqxl43Z+fZqJMA8Xkj6g1iga9HytbtS9FwUfMzo6kRnDg26Ya
y2sF0N31Z+uSkkKYN+tseDrFgsznBXsEE2Top2wMMLflwmpId/Vu5yYcUb9f
XUzsT6ibxhLB7RoE3q0883MRC0oVO7rzi0m4+ljFWdDJR+GZgMaPqTTIfOMO
BnBJiDZouvSSR8VvVg3noB0ZmUdU9CNN85F7JFFjnhgD55WV1B8VCaDMrxS7
Q+wr33R05oynOUTfKsotO8GEjPTdO8vtq5FpJH+tI1SA6pwtDc83t+LZx8Wb
v5zlg5q3Ru3IR4IjUg90yJ0hwXrXAYXIGVWwffaH7BrfCKUlwykpiXysOpTs
EH2dg513dT0LCE6+Oeu375gs4Yvf7cqSLOhoPJ3d5qDNROWRB3dk91bi0PZd
pbGVHPyJceWIF7KgPT3xmz/YDJ83QsvtFml4W6QXZivMgpFz6Pfkq0wUD4xu
vnqUid/Pv5x1XEPDxYjILpnlbfiYkfIkzK0AQZvvPTllm4tTPx/WVy1qQre8
lOzPIhLCdYs1vTYSPmG2bDr5ezNW+bl97UsU4mbB5bWRvhQceKB2jRdD8Ebj
C6cTHXUo/Td/+9UxEVq+/kb4bTa+jHct9vguwFMUzR7nEPcb/uev8qsI5vs0
OnK9hZAZSZpjLEbDpl+7dktO1MP9/GCzDOHTCfcDQ0M+MTFy1WSG/PIa7Oxt
azWPrsKAmGbiaTkm9l5OVeQY8LF01oYDYxYkFM2xiSofZuJH4IZfm6bZUHz6
4fHjASrU15tvvjG/Dt/nnc/rGKKhZ5ni7zV3KaDO95cfjSZ4sefQirrXLTDY
+/aCjW0ZmAWhtefHWeg9tm1ouzkHM5K/TT/sLkeUv8rFBZebkG1V92ZIogZl
Pwb2VsWR0GIom922sgFGfuV/nbTKQLI4lbQkvQHlr5Z9CK4qxc49ysZR2iRc
yrj9ObCcDPq6sTwJv3bkJF77LG7Fw7Vfryvm/mCBv+Lu1ZDwerykXMt+ySHD
XbB23ezvbXAZoeuVJ3Bw/5KHR+fsMJw7+vsiJ/spTLeQfTWG6vHsz+2XKR/o
2MzKnZQaq8K7GruGjDUCXLnjNdUqx8Ye50iT6tvEfb97HPH1YeJny3mfh3fy
8XQyK+9IqRDi/V2PL9az8bLOJP3P7laMJFQ+dxHnwIn39939S1yYTu55M0F8
vnXfxb+2bGjF3eBm9eXO1YhiRmiMKgiQ3mjZL6lbjtjeQ4esidy/T167rseq
FZ+LTd/Fn2hBnMO2MrXIGiTT5ora3Rg4Zvgp+fDDRnx7NBjBntcEqYIV57NW
lYLRsqeLf70NZxqHr5xxr8NoQOCB2rEmaAfsPDQlV4+9m2+bzdrFBkuJ93XO
XRJoO227XIxICMtdHiSMrsG5xhsOpiQBFljdbPjZXgUbK3HpumbC871T1h1Q
bYWbp+K11Yd4WF7xfbm0iPBtXQ+F6WABdotfPjOqTcbI7UNh/sYVoF2XzPYN
omBYNTwtxZALeZnINMO5NbCwzfixt52EFO+oIfarWAxeSOkvIvgzhmrR7elF
w/UVhvbnIgVgL2KJ59GYyI++9st0JhWDtPF6dakSDK6xSQppbkCG5NnWKwQ/
71xXO8mOYmPR9CF6uiEb1I2yBTtym7BnrjhvvXoL9LfHlEpsZEPvybzNcz2a
wV4vdNRM5yKi5GfQwj8k2MVblSv480COmdzFTarBg9Koh0nrRGjr6/L0VW3B
6tvap8kEl20++cZh8gQVJX67039nUNFwNyc6SbEGbo3PSwI+kRHzwuhJwUwy
tiRzD4495SAqZO3bWOd2iLQWKA24MrDIcKz/vCsTDaH9BoNEjuy1HSzqFtzD
1rUpaePHGnGARI+pqBRBOfvG07CcSvjnBkx/JfrZ/fx2DnklkY9NfUIvBS4W
/fA+PM+DjCphxoGCNhF4tQvzTbqIc8jtedgX0ALDFl/7n5tZMLZyWOJHzGXA
xWzmWjUShroiYtYHU7CD8X2zaG861lMonlbebFwlW6y1tCfh+IKtIxfMa3G9
P6ywuEGAnUY+Z07p18NA+uGh2pdspJMT7XUet+G2s+7k1Dc6OsP1//56SsPN
Epn+Hcsb4JY95HnvJgUXAvLt41CFnbKz4ctvw7GefONEdxpWbFaKSnUlI/U/
0gh5ewWiDrnj8Jl6yEbtCzlAcN4r3cXHU3bxYXLodoRcDgNys4q/GMQJMLz7
pUPtVD1aug/QWxurUd3S/uKo633M6LrUqqoqgH3S+7tOBuX4p3Z9m2k2CerM
jYuPN9EgP//fDhmKAIeWWwyk6QlwT/OkQpAvEynuVx+wneoROy3ofOdKQ/fi
p8fTk5lQm5/8yPQ5CXJRs37NK2fh0A71J8mtHFxzN7EfvEBwYYnRoe4rpbAg
aR89SLzf+MSc8sQzD3FbSPpxd5AKjxVbHuasrcF/V31Ke3VbsTg76Lk8tRnJ
tnFZ8kMliMmbWdU7txVxf5Z4sKOqMFo8+NdQkozuuI1tnXfZOOaQ89G8uAKr
/FefD/1Wj1HvRxEde3KR6SP7QmYZDWvS/yq3dXOhsJDlqHefBacXFU/SUthQ
OWLzerceH5dXZJZwf7Xh0ABdsGopkWMTx9yWyXLQnteY+3lOHZjh7QGlwWzE
mBrLj7pW4RolbN/kimJ8nK4umzgoxMG+4tH1+o3Y68GWdXvDBno6B9TGWrFE
92YkfQsX3217z1ZKsPDFeGTrXAYd8Xo3l/DzGZAa8o7t2ULs6+UtsxmEFx0t
bF5YfZmJqL3MiyEER4511s5Y2FeBEBfH0JZfJFwfdV5bc4qNdyHbNxq+IuN6
6mn5sww2xt6/W3C36zGUNrvMWmBTiSV/SWyFFRyY/WA++vxVhMrGGfOCnjXg
BP1+aQXhbfENCxqW3iqFWc5l/U/12bjvcKy8VLEOlMzYQ33GFMhOT/ktvpaG
vRZLrSJWFGDeu0oDpwAaSu4oVbde4+IbeZ3jzEIOLquPWKQvZ6HYyVdloSUb
8aVv/iQR/J41zttk6sfBv2/vljwvIkOMefjq+C0eHhTaftySUgP3WuVD776V
4anHqoDH3Xn4duMif8u+KqyU79i2aWk5Lm5LiGnfSUWLUlnC2TMMmBvO2Pz2
DQXnOhODxvJY6MhQWVwoUY7nWiVZIVeYuLVvdMMdJwEi9ltPPib87WUsK8d7
pA2vXA6sYnUIoeFt3/zhcAsU5x6/GdzdDrvVW6atrjVgVOVB9R0lEQ5Iloz/
Tc6FXOy94CcZDEgWax781EtH710DL94UG+cqMy5EfCbBylClTOtiG5RtTbL3
z7mHyObc02O1BWi58FNyYQkN2sZZIYtCRZA5FtxfMPkMJMddW4cIfzczb+a/
UGhGzkjDrj5xNnS+eVyXGWCiW2kGaZ2wADU+FvFmETRkTc/xdSbe78ve38aD
r+lo0+szCRUy8LXvsOxUCRnetStftshzUf8pPWV2OxX8ZNLeseUiJL53ixB/
woDM4DajN/4VKElb9Z8vsde/FiX+eLeMD+bnW69u9daju4QXYjuZDds42U1m
hLcUy0kfe1RFxqqUhu0ueQI0DHWeXhrJRteMXj/tLB78JKnrYVEKwX/JgY8u
U9FlpSH2yC4ba1escyyXzkeq/9a4ACJXnbJJr41KGiBfUWG4IISClw8eRBhe
qYNYafd9wWMOZEK0DKpbsrCuJt7spT0VC94db+AUtuHHy+UTgbvaISbzKjVr
mI5HBqGC9flEfk6Qq83EWjG1sVh21/0K6DQc/XvGmQnVwcDjnu0VmPN9/+EY
eybexvysy1hWgDOLihhnuij4lpMQ8J9aC7pkLyrO0m9DX9L8ZCrBFbdmW6tk
qTbAusTke8AKOpjs95ZL2xuww/Bptr3MDdCj4+Ldz/KwVNol7EVpJdYdHSl7
LWIBBRmvjY424UHW2yHWeTau+Sernz9XhoYu/50q7/nIue8zciKcizC67Fp7
BQr0zj8o8KEzEftJTvzGBA23md/1aB412B5u2sI6WIXjiSObq9ZU47Rw4Gvu
CAeFWqV/fj7LheHlK59sAqm4smdKYdSHC4/6KmfBIiY6yy47yRB9ab3O42f+
nTbcY+t6TLuzQZot5cCkCqCdZTEY7snGul+fdD651eHGPMklh4tb4NNouzdl
GxmD49cSjOa2wfpB4aWY6EoE713IrNJiYMXNLSnriB6SLLttfdW5Hg5dUoq4
SoVgVvKe9aUVaHDm/LQ7yUeEcby+8nkm0gdyJbzqaVjwPjW36Gkl8k8X2ZWa
81AYAPek8xUIaje0011CgdG2HyYajFqcXB/n3kYrwbIMZPRnpmBzmbiO4B4f
wk/xhkmyfNh8os6hrxLh+M65Li8ZIhS6+rvY/i1F6PDOTySCey+FmdmUEM99
uCXK58ngM0gF6ud6JpBhuckhc6NMCXZOHbUw0CL63G75IH0+AxHp4cliBI9d
azUVll1n47uabWfQWQ6cbQbucn9x8XD/96kXDaVQ0HpnnR5OQc5gbXNxcStm
hopPcu88wVILy++0PCGO6q9aFxhH9JnTvvkz9WigZp4/XU/k4kntadmBbgb0
Wp7MkhJrh5TYlorxs41Qd7v8IVudyJscmwsVWVSEzRcfm7WIAjfn0bVa4RV4
6Z6qV1JcBd1gFZquUxoWeJeUhpq1oXcWq6lqthD/HZl+Lq7XBF3r2K+5G7lw
cdZyPm3dBvEZ6mLvX9PQaaMz8Xe4ALImRdtebWXD0LCpIPU/Bn7kfqh+2ZsD
9UdXLwhyiD0Yc/bYda4Ozis31P3Oz4LlJ52HUWpk+KSa3utnNEA9r0n+fJMI
mRJRyy8XVGBHbMe/7r8VWDl+7Lx5UBX2F0TK/TBgQ9lCbSLqjgieCYU5ehcy
YRRQ4/L4NYXg+eTbjyqpmCE5uaAzowmXPl/sUiHeP9U63oykzQFf61bA/TEB
ErYl3J0hIYLBjpiMI0pMvFvCKTiwhoWtU28X3npaD7L+ldV+hmRcmqvS2Hyv
DGN5lCNfz6YjzN3ZxWAyHdsnQ07crWQjs96uSWNnC86HBMiu6G+E4qtQUuH7
PMycUbRJfD4Pa/LUUhLuCHDgwt61f7hU/Fnh+G9WJh3Fp8YVwvOokMwazzrr
TPCla1PcOMEHHWnmk19fixB3PHJSwqwVmXOybi4wYuHGYJPF3axqyB0feO45
twoqjC6OawoDVnaax8d88xFi9rOqsLYW7/xXb13PEeJDRrfprDNUkDZdfPK4
m4xbRXEBd8uoqN/2aTh0RACLK/ceemoXooh1Ydkzwpe3Jj5vkGdRcIT6+/ng
RTJYG/XW3b9SA4/zFpdye9gwbx1Z8nkOD+K6Q6lHT7bBfuKwcGNKNQ7Pywgd
/szH3Ooll9foCLHG87pZxxchXB9Jt00Np4D678oJt34h9OqeLqK2cRG++7TZ
uCUVZE+1C5LPydCPNa3ZrSmEfsant5XLObCM+bBDfZiMA4FBH0hddIQLjg5a
8PPxYtm7TSoh9dAcqUaEuRAtAxUvn2XRsGHg31DNrGZYTJM/PDjMgdaKOiNt
BxE6DV+0DRN52hPtfvvHZR4ubXfSbtlLw+dp7+HmbBYUS4clfAae4KrOu1bn
D1W4nDpQG76HhdXPEqzUXrCQMeC0+fM44VeLtxpnJzEwvElzTSLBgzcuObvW
/qJgkcvSgRnRjSjWUzV69YqPxM81thK+mVj4/VKormYr7pe4SgdtKYZhXfm+
vgQWKK4p+dzjJOSsWd29bEgIU3HlBaSpJhwI3rGcbtyK48PeGwtvCfDRfOP9
08pVkEyOC69vI/hUumvxn7kCfHf799kyg9jzAzG3Gx8JoF4lPeOwKQWk+WZD
0VeqMBXIPKIS14Zs+f0H2v7S0aQiCBrVyIHitET5y14+WKdzl7X+5SJwammR
7oFKqG7+ORyrIsIlw96BkcuEF1/b93a7GRMarQd3xVaxEG8vK6ZpR/gs+c/a
k+Ek2Hqa3Yk3SEZU5p2Wr5vr//9/pZ+/N2XizaIFJlqDRYhemP3ih0cDJJfy
RaFVdUi4u+Fps4iN2u0BH39bZkLNatb6PzJcfJm1e0X063a8630j1NlOwdjc
tkPWFVT8bUy/u06CicKepPuuXUxwd+k4yNBKMeeNRGsPiHM9nTZreg0f34MC
zc5tboXWWK/K5jgKnK3Nu8tWNSLncJ3Za9km3LDTc8q1a8W/5Q6/ZzS0ob/h
lDFpXzt8t8S+qx+tx4wjwoJ1ZgXwqNBSXVZFQXDMPdHe3XQoLfHcTSL4qn/d
3TCJeTSY+wR+PET4/UkZBv38PToadYxdyDEibA6ypA7xmpEUnjV3Zl4jXjSs
76MF1eKj56nNoc5l8Kd7ml0m9k+q8fUrNSkBggwHkipuCqHsMzfCpFuE7XGy
UvaVz1C2s4enNdqKhOKLlmt/tqBnciBtTCcKBqNzbkyoNxHzvdrqbHc5qM9u
OfY8osGQrMVoTWfh3MtBG7/qZnTuy1wSWMzFjD3eu94+YGJJFE1tfTUDSRef
KKUpVMHnxAu5YG8yoiuv5w608nBd+tDBnJt38SU+w33rAh7BHbsvnRmhIs8j
+uPvAw1ILr7WMlNI5H//5h3LS1n4jxboH23fjq1R9J+DH8hIEnO+PmsTF63k
P0YqMgwodPfOi1tG3H/Va7vMynroCCkfUwm+vOQYMR0TnYew4L5Be9826E+6
vhYZtMLevtTo/kMqumv+K+472IpllBVr1XhELxsxGq+MMZC57Vh2cWcZKGYp
hYHFbET7n5W8XULHNsHSIwGPM0FdldO1O70VsfacyR87qhDHMGdfOZaBf2vW
z/55mI6Dx/O6FLaX4oCG0+ofC9sxJ+tw9UqXKhTcVZizbVUBrBa30PW8arD0
jbLzWyJ3raf/3dqZyQfVxr/zYuMznHrse/+lFRMbGx/6TkiTUDp7BvtiQwWu
H/3OUbjMR3LDT+e/TiwkxRg+qXMTYuDMIl73HwF+/Z0yf2dOgpTcobCYGAr6
I1h2axk1WHnmPXNPEwW3ig2S/OXr8NdyZbndeBIMVFN3OpRlw4vhnTfjNwd+
N2ZLBzNIGNjpRpcbbcbzZcKwe/Mr8SLH/ojUIBtRzp/OT73l4j1lgbrnxga8
XDIwNFeVDmWXMZsGRiMcy8LmXqPVwfWthFSAdBueUEr6K+LasfLBtsURGwS4
dGudoM+UiulVd4y2ujTi5BVG6LvDjfgmr71Ez4WDs4HZjXLMCkiK5LqRSwKX
W7LaJEeEhnv/nLcvY6Gs+MNtzcWN0C/VmpeVz0JIoEbblrj/f38jZfLFr2fo
Umj0G3FmYUPVrH1LSVQwfa/NPJLVhJO/1FZv9GjE1jc5c9elUFDK+3NGUr4N
8WXi+RkZrajz8bav/doCmlWU9tMnbfA1PHvaa7UIMUraF3LyRfBYKX7scUYG
LL9oPQsYb8d07ZsOWiMHf3w+bU1VoyC01kSe3c7A3wnewNlRAW6efFxv0tSG
bWt293CDqHhsk7Xp0loObq9ZHfWU8RSbZgVV6W6lQKp4d666TjvKhzs0tzm3
wFfBdLPWYBnq711Z2bOPj13royhVRF9lBKvsOfqKicBxCbXp1RywX10MP6RE
/L2fEa5Op1oRkvtpo2NaDkJmzngqz2pAW+35OTXbmcR5vjKou8BEJDxeDG9o
BXN4at+iOzRsdZuwnnOKj7dFC3ytN1ChLrpl6ypdC/nRFKPVbgLstXuqv+53
HrK2TGvPP8fBBnhZzjqVAtatv4eZ6wl+HC+LvmFKx3yGRlJ3nRA3R+NSJX9S
sSG1eWdYHg865ZynblGEn8ek3ZJtqETApWeVWWdYYAWtGkn8T4BrdowkT60G
VPhnTMmPC9FxIUhSU5KK9cmX5S44NkP8S2yd17QAc+a2BZyNZGBGw3k1tZZ7
oCz23OXj3Qqar4H/+TN0yL9+bniF4KoNf6i//XwEKPou07nyQgM2qB7tptkR
89L3LSDjVSv8rqhdfk/mIOapIJ29n47fam9/vpYrwhOBCd95dRWCN8S/27An
A5NZshIncwm/z1+AhulSLGjRb1L+VIjtVcfN5SLp6Fuq3Pa5IR9l9kvnKj1g
o/HLbEXhRxFGTPvd10Uw0Cw2R0f3DhVTftui3hH8JJpbdfVgZiu+nWY2D10t
xz9G1TMvJx72NBhzwx0ECD9xg9462Qrxr1V1yuotePtqn8rHuiY4Kh046JFP
wrqnv2a07GqFq/auoOx7bXCLNVXP/ipCXaSV78+ltajwXRXIDc/A2+rJ00eN
ydB4Gj/DaCMHY3O2DKcYi/CatWRl2DQFfh356rGEX332yvm84BAHKl1btm69
z4dY57klt4Mf4JEwoYHTKcAJl5vmITY05LVPuMX+puOmrdrZFZw2sLp3vw4K
ZWHjnrP+l3dRoUP2/bS6gQGm6LOxyWYmKsc25VEnhVC9/GZ9t2cd1sg91tS+
24hsyTM5A3QqvB/qau6+2QgLZq6/1P+/l9oZqvN9gRCKHumKbUw2lns0Fr5U
pcD+8d4wokiwzHzug0DtMhQ/fSH9akEzLg8tUbI1YoO/5cKu29Wt8LSwhH4z
BcsX68yZE9CMNLOXRRNz03HlcFpr3dtKbJEtIx/jFiFV1vr3joUkvNJ+cayj
m4mhWNVE6iEhJsS5a6RNaNjPmmfyt5GEPvKlr7VKRSh3bRCF+PCw6JLbjV/L
ifmWtAyOP8CEue4/6aJw4qfM4K1kUSNat3BrFhA+MpqktsXGigu5jb7Dxk8p
UOfvC3Q0JOHeBof8sqYm3KHu233RpgHve529lFQqULM87LDblnoEFF/a/KKP
yAm/V336RP8bftK5bjjYgI6tjm5X+hmofDgueex7A/p/paaMGDNQqPRhoXRd
LSz2/JV0ii2D5HXDe1sbamEbf+XD/EfNqKobOu87hwyb/XOrNkc2wzR7D8ly
Gwv5zHOqTX5emPWPI9pzJw/RcydeDxCc4hq2SnaWBxXDmcHfXFUYkIp7liHf
SkbklebQwcpqnH/jcfpscQGYsb3DHUuKsLU3XsvGrAGuTqj5vLuN4BTRZ0MO
Fa/Exu6XyTcjip+XLqpqwU2n944S1bX4MFnfKZ4qQOKVDpvnRF8bxZX2HVGu
xMOk7lUeu+uBwD8GFEYZLOcN7Nl4kY2jWsK7Hxdl476r3Ix0WwG0KAsERkpC
NK9d3716JhOJJvuXbcoXwCMjt04u9ylie+Xl2FsEyI4curuMT0ET95/j8A0R
/FgtnMidZChNpJNV0ujwja34tmQ2wXH2Ud+kDnLQ/a/D9HXHDURtWKR8prUN
ylXzsu24TTh05UjroGYtDF3aQ/zERMiLktA//6IWxaXTq23nP4KVldjaPOkW
BEvLLfW5X4940WxTyX4qODpjr3WLGuDzY2RKR5mJ699cRvwtiZ69m9Rp6s2C
lVQ3R+sUA9kvyU2klGaEzjdwPsVnw3vl+Qv3eDS8/9XRMF5XgLMnYhs/drah
Vu1JLes5BTvKDLn/EZ54rpl5Ro/g8JKR3T57Y4ge1aYN33vDgANr4b9wJS7O
eA9kjfVwoKvZYlS6Iw2rRbO7gzTrsHudw7VxEyGuBn3cPaOchuTfvg/tzlGR
6395UUF3Jf7kXw3VOCiAmXLybiuC0zrzDz7dT+Ss+MAjR0ei/4XLJd0t0xjQ
DP32+ah5OczO/v6y34YCzScRPZVXafjl7/jkGsGVF+iVSutmtOHlvY/Vw9ty
4NXTcuVaKRMdev7r7BRbwB6Jm7+knYIlxh8ba1+SoXfnyVjsJAUvc1c3N9/i
4NDEgd/5q2koL5/aoZvKQ01l5EezlTS8sFwq+TmKhpDTe8/kz6zCA9QV2hxk
oe6YK3NiPwVny9IVdpo2Qrz/MKUlj4PF2bSbKr08KM0N6/Yz4eFZNClVRUeA
VTdSmOfOtGLPWEiyw1Q9QpyOygT412JCq90/J7sJdE6xh+KSNvAkN1c53afg
sXvBY6/eKvyvojONqulvw3ATkggRIpEhKc0KSbdKIUkpZEqFhJAiDf9KNJGk
JJQUGjTPc6czz52pohKRQkJUIiXvfj+etfZaZ+/1e577vq4P5+yKL/xzB02b
Ee1wJvuwgwTXVkcq5BPe1Ut7L1pG5DZjuaV0WBALtZXruu6fycWlm+dCei82
QHtWTVEmnwuM/nUO6S7Gf3y7D630KhyTL1UflM1Ftt2uLU7JTVDRPPySJEOH
n1Q7f6CAAYf9RZSSsxK8DJzjSLpQjjXL1KeENYkQX7VLrfixBBs1W+SFvFqI
SxKqN5mxkbDd3XsbwTdHOiqKv+dwwPi93nD9zgSQJ22aVIlzdTp643xFayOm
ZFr1ehA8rjYhe2i8nIQDhr92leoxkVgi5Hxp5eKfDHVeiYiOKf5WJ2z/sjCp
pTjkcEGMqfPjz57PYUBhg6b5tZpCaOxWYaUxSuByd15o4gwJ7KhjpatAwZ6S
r8Lch2UIvsWKS9rJhUxYA399Yjm6NWdc3vCrHsVHGhyl5ojxhraoyfiyGP96
iz0zlJjYHHUtNlKTBSumMLLtEhOhnp4aNBcBmJEnSvSig0AdHwhyPUxC5z37
cUuBEO/PepMusJ9jrOObqtFGFtifFUtPnxZh2UflTwmuIuho0b0COmqQMdc3
d65mI0yezm+xWk6H+QcPVW5LDsoMtTxVD4nh6XrKWX9TCzaMVxfG+5Ix8cjw
/ipnDpye2vQ3NdRjYtnPW7Z6DNz6Jaxq889DWvvunLeCMvDiFm//mMfCUXJC
RW0OG2eU334WTSc4Vzp5T+DbAui66OxZkZmNS4q1Nx9zGDAIupr+NJKFg24/
M4Z3UuHQdr1n020xjrz8pVwazcHWJGW1tn0UNH20nN++tQWj7ZO+WrpNaA45
78l1KMY991myUS8L8HTtpt7ev5VILZjV18MvgWqDFcNnRSUMwvsv3JhgQPz8
UninfBG+PcrpMOquBJecyYk0q4LCZB+ytjFQNWS3PGiQj3sHV8upRz7BddNP
m1d6VOL89oKoo3/TcMLsekD+JR7CVAzcQ1fwsM9Up/3c7XK0pER9e3GrFhPH
yx2SiVyUP3yRI7W8ETftrmTym5sxbfWYSFdJBLatWuXpCSHCzK2ZF02ZGPm8
bM/MH0wUr+5f47ScBv2VlheCuDlIW/9cZmAsFZ+5Dhvt2+m4P3nJsyKeAqPH
GXs1FlYi8uKr+FkJ1UhLOhEy90U0LrkZH3FRaYbC8YPCWz6lkHb8g8vOhCdt
3C38VsSC1CbtwoY6Gj5fmD8eWSLBXBmfsIHTZJi2p8f07uaiab2140oXER4/
z/y22ZWPHwzrnDZ/IbQTZ+p5n6bgae70I6c2seE2LaRCcX0hHogqXH70N4N+
yP65RVwJqr9ZT0gcynH/VvijATnCyz6tSLl8rRHRe72ob5uqsfPtUkP1dgpM
OTJVLg+42HSiY3arYhmsQ6/5TZkuRIB+5+mJvU/QdcRVFDVQijtafXettR/j
kZ3MH+o+DnbMVFCJUBChKVB8QfcuCd06PZ4fOVW4T4op/GIjgEytb+JnExGm
33naLV0gQMnkibuk/Cp8UTHn7vTkYaPalrMrc0QoOl131fVHHlr+HuhKrqPg
5p3P744P0zAlePqVfhsR0vzt0x+nC2GwL7WyWIqHU++8Wjmv6aj5EHhrIpSE
eQYqiZkXBOgd6olXz2uCpt5usyeP6Yg6Q79tSXDd2GRG2rm4ZpwIUX62ZbEI
g2X/DpRL0fEyVpImvkf4nJnGna7vDXjPPnXgyEdinqPMtlnrZWHR3rryLXVi
VH55u/KtoApL/346/6lYgNv+8XNsiR4vsv+lLSa4lpRteaRgqhgI67f4froI
iwKMz2wmPvvk/RLQD5Zj9NCqLTvOCeGmpT0nSps4//ZcpyUWNdgZ+Et+72AD
suKCFKuvMrCyX0FVl0PF3fj4GTdekPCVnRWtHiXExYlVdu4XnqF0UfEcy1AJ
WkkfT3x5Q8GfjeSXXn5sVI44Gdx9IYK3gO/1wuv/v8tzKbYzpsPR+U3WeLgA
07oOtCqaSPCzfvzCLv9a7LYOW8sV0/D+Ze7irK08VFyS2msySMW6aY4y+i18
hFaUPmeMx8FUllt1+agE/ke7uErhRD8K56mZBYtR8b3v5JcKOgYm1pluIjil
POCuYXxrCWqLf5LX////X7wXtlywYCI66tTQ0XoSbH0qBquJ/OjMmddpSSPj
Wo8CReJUjk9SBgPr94nwpEOl2v8PB6Y3LDeE2nEwsqXXg62UA6PoWfYbuCJY
RQ+s05rJgUHNE9sm71zMq0loaYwjY0Xw8v23iD2ga/SUk69KILtrl9MGnQr4
ypXNa//BR0eb/gJ5ixQornn0uqFJjHv+qzwsh0n4g4EZVhvZYH08MiNpYzPe
pYUeIhE5azO1xkr3DsFr8XXmg6VMdP83tIH1iuAvBN/pO1mALee2SKW8oyLu
yYI4/jsWBH2acWX3eWC5JnflJTLx1KDdQ72KjRGbig2G3SR877CQXOmjYVLH
PDWf6GntZxcXpUfx0OKx/uRoNhnnSxZOm+Vaj+yOoMDqjwJ8K2kt8NckQfqG
rG/X6wYgWMr+rDcfmbk7KHcjJLj+8LqjKnFO/Z9juH8UxNBPhde6YgZC5tYN
fdkmQvucz9WVf/Ox5mhvwuuNhPdsL/cx7+RjuX368qsFFKxQs9wqR/RMTb6Y
zdnMQnfOwr/R5Vxc7PxvyCSfj4TVe1YLPxC55OL26BxJDMpEZ9TWPgak+qR6
F80thbn+HNqbH7VQVM9xWbyMhoFnSUb9tzJhn7Fie0hNCbJ+mL0X/aWgccqq
FplBOjZuvl4kWSyGkPXN8Vs1G1mNC455WQrAWZ+nMMAQoCCygdukWIXAgBjt
5YTXTho6aT7IIbxgxW/36fKl+Ji5J2bYgAaGYGF/W201THMbdY2/krBq6tkf
52TZCN6j8MznYh7m18orldGZKEm4+tqlm4Xg9e/4/J+58Hzw+1ubtQQP6pSV
nzuycf6d29XXpVRo+rFWnGnh4L98+XNPJESOepYFLn7XAs7Lb5OJN5rBCAuh
ljxnwNzdfO2bB5k4+uDhwshWNo6M+rn3PmuGdlDHXY0SEQ5cyV4/X1sC799U
VeEDPtQrbY4vJTx1avjFwaE1Eiy1SOkcaxSgLnpVEWslA3t2371ec6IGvgnh
0st66fj31H032YwH63V770iKmdB3C0/9ubCcyCV7CnNPA/ofBFpzPnCh5YzL
cQ8peKCcHd39lo02CyeGfQ4f31e4FewdFWER38GktEiIZrOteQdVBPjRIxNE
O8/FcePktYUpFIgV3mzaOsLA+qnh4pvsevyUdg+efZSPB34c2cU3mahW0Rgo
G69Dio4ZczmVjFUJmYhkUxBQMpM0+rsSaZKQGb0bCL/V1O2Lp2aAoqwm9qzg
oPfOq0U6MrngpY3Kq3qKEFVTOrdamoVfc3mc+jYa7n4wDDHxrUVNmulxE4I7
DZoat9VmN4Ab8dhWnvB//f6ynoOLxLhNiyufeNGI9uGudwu/E/2Z+LP0YIoY
bWM2MxeosGFTRMvyUuViKv1NsuZhFi7uf/1PSacRDk1Pe02J+Tq6NGjKrLlU
VAm0b4quF2ORw+6btgRXrzv+wmnkK/E8zq8fqsZxEPo99eurgHqcD5A6XTjE
RxGn8bTNtio8Hoj1v6NIhtPjBR+evOLj23ZTX5MxMZbb0t0HK59jbl30TI1j
fJCHYqhiAwl4ug/qOyI5ePVKPTK1gI11dvG73owm4nMlFM/O4SBE1Vlh0LkB
LilXWt2FIuy367EeXkSBM6VpajLBnarb4ufLKEngez3/rc71KpxnucoWGDTj
xnnhz9EkJhS+vZTPmcGH84wkl20ODMjR7qwdWirBlaRhaS+JALLyh2KS/mVj
vneOlElBIZa7W41bbmzEQQ2ECMKqEeUkHxy9Lg/yu77NmpskhIbORLumIh17
YrsbkSnEDpPCseCualBz66jjj1qwbmVw3JiYjr0thtEaOTw4OUZQ+6spWNmk
UN+jUoNzWudl78Tw0c/f87dtCRcLLDRvX2QwiVztb2PqteDYhZqxoBkU6J10
kX2cLcBBrZX2qvMoOOpRQ64e42JdrTYtIKoB7qMlMVmE757x2Dw9/2011lqN
Oi2cz4L3FjXp4AwWblQnZeYxWYi3MTre2c3F2gMaq7+kEvsjrHysQhbh/Y/t
g8y3HBzaUqRSO5eYZxP/Y4nFYrSMMPsi/v9+t4LmzrAwEk72P2w9fpyEmrb2
h4pEPu5k5JybHViOwPnigHOFNHSeZeQGtaXAbm5Ety+9DB2F3tyXWnwc7wx4
yTVhQdXky0LnYB7OaVzovr6/FvrOf8f3kARwOMc8bXm0DvKrPca0dMlgc7wO
FRP8E/Ih/I8BrRlVsg05Ch0iGLq2Lg0LLUN13k69KevqMLwpenNsGAX+pvzK
E2e44Do57TV4VoFMmZ4djWYCsB3tnugEMcCOzCAHtpXhYPnlAJWbpUBHyu7a
+6koSQ4MsWXyIaUzZCXp5eHKd0fygost+Nlju+HzUwmSav1N06qKMWo7r2Oj
ChM1hk66R4h5q9GZaXY0uwQx83RKP+uTcclr+BS/mfBmedUlDUwBzk/PvSLX
TcXkgc72I+8bkDCOa8GDXHiUHPsjw21Gk7qkDBlCuPpMOjteqwTJ+0/oXiMy
zI5WDM4J4sAld6boitsTdOrGtMxXlEDPTbLBeToPt2WcM1OtWZBxT/73PrwJ
3bc/eQpS2Yg8mZqg3CfG97wR3qBXFfJfJt9+NMbGjV13FbOMGNDPX3PshjoD
U/Z07fP4nodLdvKcv12VSJcsdlNPvIU7Chc804y42CjwEwy5irE7Xrvsh1wd
JiLWkU1msjFX75va6tcCOG5qX8CIZmJWjf65Bt1y2D81Wqdyg4e8+wsPs5U4
OC1XnbbsTin6I2J5A28YWMOda2oy1ITFqoqB/a+KIXXFnzRnBwUz8vJ0c82b
MBynPefvKjEMa+9bxm4h5iG2ctHk+jps/yH9nttNzIOU7JdAbxaWnpD5LHQQ
I3PAbOCAWhGGTx3XsCVRsa8t4mGoFgtarw/ajg9SYBAw2CaaK4SAd1k4UsdC
+C9M82cJsOJCMDU4qAV8+QvldW5cvKwzS+ok8TDSfvI2N4KMzQP69D4PGu70
v3Gq25yDfTeNfA/ZPcHWUKXBKcqF2Caj0P7sEQ/ku9sXF8+jQnuvvudz62oE
jD2UUw4vwVuLO4bSzSIkdX8wO+AjQUV7HeP4GBMZxp/U5MeoWOKQGvxHiQU/
44uXP3SVQvNUrtmv60zkhnQtvWEnRrfc/n+LAzh4tnNkhljMQ9fC16FnQkuw
vu7c5ZRr1dityA7fmUZDc/XPK8kapTiwb2StcWIt1O1m5M7UF4HUJvWb8ooK
reb9EWt2MMC1H5LhnKIC7+9o+7uJEDZAT7PdWYGMcKvOA+pU6N28XR+xggHv
UCllDQmdmEeVCafQeugdLDO60svB2gi9Z7UmPNyYHJ+cLS/CQ+XTdn+vVuGP
zfrDpwjvOvSxiCm1Qog30cms6D0iRHSUN79Uz0eAZk2OWpII4gOfwsyUOai+
cXpemgsTs8cvOH08RSZ48s/uR9slkFo7T++eGguLC/9s15c0QjLX6HKnGg1x
yRblCl9z0Ga9b9qxTTVItFY6olIoRO0piUL+UjaeyzrqxJtSwMtlmKk8ZuOC
jM2DtgoRBH/83y1xYaFqt4p+sLwYRd+pV14YUxB28vvB0wNsrF+86FxWYAJo
x17e3u1VC6W3rltzqhlQLNvic6uFh/OKbq4kBx5anVTW2XnTMWrsk7vnABuP
lzxxzl1LRto2jd9yN4nvNZ5Zf7mIj+A5A9uz+YXoudRT55fEwQKFC97nA0qw
+/jerpn1HHwxPluQ49AElo2zr+PcFsgMCM8GGdbh1trf+pv2NsNtR/Hw7FkC
GCVFK4QvrYdq1KdlRYSvX96bPsVDSYy9zc/2x1+lQ2V2+oups4le6hGtHCoi
Ia73qVavUQnchlXG4sa5OPT7+kioHA2Hrpz8yUsrwZ9dO1Pqn4mxa170QnYf
B67mUjf9lhUjqvon/0G8CFOLbuku+NeEmOutSsZr6dgcKU2q7mHgiqZK/XNf
Nlzjf648ndOA9HBX23wfX2gESXKfeZAR+nL6GauvxN6NjeZlO2Vh37YT+dcf
kqHNHCtYq0t4yFDczYtezXD2ufbs44lCiL46VPReYeN3/EPpDnsJFk8ZGyoY
IsHg/qFLXy8yQX4VY27+ggabPeLZhgkMgkN947r8qrAr4xF75hou+gxXmGgc
Ijjw947A+kUc/Nis95/7dwbagirm95dVwU6w+k1WLBmKLdF/re054M8+/659
lgiTbb/9VXIk+HxlOv2pdzV4SUO+z6fnY72yv/gncb1884O+aoJ7N9ucHNVR
asG7ek+vbmIvLbtW6st+F2LK64q8izY0uGyLCfKREaPds6ZIQZ24PlZ735pQ
wjMXZBuLjglw3divWpMhhpRaYIOZXwVq5GRSpTcROV9jN7BK8xR60p3P3NmS
AXWOvKmijQT/vCuXD1IoqPqvx8Z9FwOzngfOt6wRIXmf97KoPzz8201rKzXm
w7JtJDi9k4q8SKpSWDMDlpZnZ5mZ8dEyo11HqqQChx4XvxQmV0HRIddi+uJG
KA/11KqweXhtr7b1x30utuoVCIcfkXAv/Nm1nMcS+JUYxwa3VUB7c4yF0e9G
aGpuo7H12fg2zqyb0c/CU+8fC16Ia6EVMFZo+OIZ/gQkazb9//2Qf5fkt2yv
xa5xxva91WR4BNpbFMhTIT9pnbhNWQyazrDvGwHRxzYT3ccnWpA3a1onPZeM
/5yaDHYS+9VYOE9uxzohci8ZeqZkUMBYxV0o45+H4BObjWN9CH7YOllx9B8f
KZdnBDQ5VMC2doH1H7V6zD1VbXawSYAXT543hq2mwW9VT9P6ERZmyJE73wUI
Qc07XytP8O6gzddGw5RmdLVOV11E8Nh6+xqdlAVcuImdSr548DCabpcwy5SD
jFO3m6hhBAfpfdRcu6ISrTK2VgeshHAfkPv0NpqBitNdrur3qLDVG1Moo7Lx
dc3v+W4+9Tjit+Ge+RoG0g27Nq66XI2PR6r4H7/exqtBP3PqMBML3F4kCPZS
8bi6dLxXgfDV19PkC5hUzHp7YuMawnM3ez7QU9jQguNGvA3Xm4SQnVpGWh5S
Dsru6R/ubqdj4l7cWbWcZrzeX8yIPCDAqNbO9+feVyDexzs+jlwFv6hZy/d4
sBBWKO77QmbB9Vbr5/+I+7FuDX7+XV0EdbV5x5depqDjWJf0069Z+LPy0QO3
lHq4a+hM6onJaFaL6A+CCP5zj6xKX8nDTtq3jsF0Oqa9KXOa/bcZm/osycdH
uLimNJL9rbgU+/nZ9/89ZyLn0OoKjSA6nOz+bFucxkGJ2rWRi/0NUDeID68w
bIaCn8P+W8eZkKpTdjgtRYHVt6T+v6U01C49+eBWIxsn5c6ewF0mLO8/nXdj
JwXZYtNHxtW5eKYU9ylqbTP+61s59fsaMpTmLLcIOV+OfRQZ7X/tpbjx7LtE
xViERDzaZPwvF2t+OGpxV9KQd6/WIuEzGQcu3C1Kqebh61qyz7Wt8Vg+dDS3
q56M7rgOSbklF9bSov4+SwYylc+E7FjbQvTyTEPjLwIc7hTmmDUU4svU0aQM
Mg03ukhb5LbzIedUGGLuRMKROyalPy3LkLhCS734GuGR0toGSlqVSOHSGR3v
WTihKf42fLwOS+a0viHxWqDm6DN96nsOzi8o3n2um4F1XmKPiawqzBirC6Ar
UTGUw1GY9pGYN+edvClyJITWTyvOb+JAyz3Qq4zgpvRZp3xzlOqRzKh6FWst
BHnp9Pwfd2gQpWS0ZbAk8Aq+8uT8gWocu/L7t8FdLl7dG1h142wcWl90UG9p
E7njHLp5hVUJYl8G1N1wrMfqV/+WZPtxMLU1UrZinA5H93DVx8/T8dTievyc
Ni6u1tqKg9vKMRoQkbPRhIvXX5frhYlEcP+1gRLbUY3a5tR3Dh+ZKLVKUyqZ
KkLTyTzWP2YRolkyEVL/MTBzi9SlF1vE+MfU7i33rELk3+RSQ8Kn52xSU8rw
Y2DIrH+tzy8KzkSGu8bK0xB4ySlLWpYPxoer3TsjW/AWxb3/2lmYnjgQnp4j
xPf7+tTL5hJ8dPK9pEPcz76fufOpmXyMZNw+3OHWgM5S/eRxRyHMLX6nLl5O
h8vhaXa0VWmouq2g+eIsB5kci1kHF5LxqjW6+I2QDpPFrBxGIRXNppeDXkfx
oDlubSRrVINXYxvI9JQs2L2T3V4pS4Hjml0PHv+k4tcISb9dQYBjbpae8US+
pp7h6z7PpeBdiOsaUUQ2otalX/9QeB9eKV5G7l8FUCquNZdPa8FRn4hpo3eI
fN2UunbnfCb0o3sLWGmpOLNOr0Z3DsH/DPrt6MNEjiat97uQyYCmjFHeKcsq
RIwutrmlTQcehlONguk46rs1rbajCHITCDeor0HsRpMlwa8ZOLddMJbME6Ig
PTU78AkbiDkUySZy5nVN5N1fNBaiVUJudSdRYUB++YWTUAGrlZ/JpW10VH6S
j5DZLMICwcHMr2PVmHk/Zv2pqWJ8Gump97vNxFeXd/qhFD72j3kvY+RVo/if
mdsysLDlqk3gZXMBqjZXdvVfqAS3hxa+urkZg223/NYZ8HDq0Xr1mTI0TAqf
iEHkvEHS33/9MmwoaJMDG7uJHtw7LpP1k4xHvrN/MvIqCe5bkPb2ERNWGvqk
l8vJGPCOuR5TU4YVdxIEkohiuIbkrTP+2IT55/iqLdFNyBJ6ZN8WEv5q3n8p
K4KCW92v98TEicBod37rcUCMaTUPApRDC2DzzVTm1J5mpBVcv1/CIeFobr1i
//YyxIvHZvvMr8GVZplnFtIk2KnNTN27gIwcn7yETywypKc4mt7Wq8JwalLV
u24KXm07e28khIxVmu+UnRNjwc/olJ6f1YxY5csjbqoidB3TVpwhXQvLDwdo
j/NpyFI7G7mktRpv/twxr7VuAdXXL8Q7SQyK3CzdlScbECz5WuZHfYgvvZ/n
Jgwwcb1njvVGCRteEWY/cyYlmBcdFp2vKUEy85CwRFqM0mu3u7/u5iLO4kzn
0HcRwSdTdO//akbzm4dRqxLJGHW6mW9vU46U02s42Y9J0Eqn5Cx7RINu0daM
iydIWHnpfoKVWT20KAtIdRaVCHGv0XHcyQKgOFQiU4FlwwX7HRX4OGNAn6a7
XYQffrWt3wIFOFVubl4RI4ACjefX58yDjLcleSifgYCKR4ryE3RUH185e4GX
AJ7Fh0sGztKwW35JevQsPh7mxJoETqPi3lvD3wphufBsdxNRs6lQPkw10ous
QH3hl52yRg+R57dngkX4QdcXe4MW4ydQCC/bLxES/WBvnDz1aj5KpaWiMhdL
cLBVWrZz8f/530l4LIEOEV3VN6+4CqINvUsc39LwnrPs+ND+EhhRA/1c9Ah/
2peSfNJWAuV9ZTqyfBpSXj0Yjq7LRADj4HDg4hYc6ksd3pksQOWU2tkaF4ne
2Le//mdqEw4+HddkZbBQvf+A9yRJjG3m8UfUislQ25ifpBKdB6eYshA6iYE/
06Xfvm+g4+6Pi1LTeSzIKV9ZWKHbhGUq2QZ+dQyYF6pPXMzORmD7wLDZRjbe
CwtCM+hc+Myz2JXBacapU1tcNlTWIurubP3H0WLE3p+p4T9HAoO7U5JYDD7W
bWndcXcDG81LaYfCXMpwbqN27sk6CmanjYvqSgqhH0N+NqdAhB7NG+ZuhB9a
st6orCPmJlbqYmKtvhjksXiPHIKvNb3ixxjbeFhpuurjn8PE/k+VUfbfKYJi
h7n7WFY9/s24VuP0UALRl/31t9RZIMUciE/lVcDQ8E3or75UHA2V/OD3MNF8
OMfh2OxS5LoUhC0Q1+G9VbJ7ywThnc+Tz4RGNaBUdSVnoZwIKz5v+GM0g4bs
9JGFI35ihNjaH/Lw4eEtz+rXQBEHbWs+HfdMqsUiWyvu3iIqDHVO5s4x4uNw
n6dLRTkVLneupUuBh4MJlp/Gl7Zgz23QZxytRtvLi0FTj0iQu/X7rhVVNdA7
fHk0IZ6HM+fMfKPIFAzVnbHgD4qQuzmK1L2mAl8Vd9ifaWjC0ROxZ++/pCJ7
48Yjzw6S4fm55YTBaTquLOl+XrWCg3qBXVOoHA9n18ef+cbiYpJ3rEVmeT2m
9h5bbikjwcnPS19ef8OHydJs6UmfRiyWVyscTG7Ao6W/a9wI7jdyCI/V16hH
bcb9ObOU61DkfyX7qEMljpyZVfBCSEbUEdfVXwYF6GOe9dMdpqO71jfn3kMW
6Cf3PJm9pASu7JmJKtdEWKX4U7sgnwr+7UfTRw9zYDv1OOP1IBfb1XLI1tuZ
8F3ImgzPEUDReJfpgtwqJJqf91rRR3gAJ4bj+IAMV5+kxGe+fHi7ces9+mpw
6/zozD09YvwP0mTJvA==
       "], "Kilometers", {{1}, {2}}}]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.896770849165362*^9, {3.8967709269496527`*^9, 3.8967709322384725`*^9}, {
   3.8967710679118614`*^9, 3.8967710735688305`*^9}, 3.896773202983624*^9, 
   3.8967732742507353`*^9, 3.896773415517292*^9},
 CellLabel->"Out[84]=",
 CellID->212824768,ExpressionUUID->"a05fcc69-e6ad-4a3a-aca9-ba0a8847b564"]
}, Open  ]],

Cell["Computing all individual distances separately is slower:", "ExampleText",
 CellID->137740516,ExpressionUUID->"1004d5be-3d7f-4a76-a3ac-4200a34461de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"outer", "=", 
    RowBox[{"Outer", "[", 
     RowBox[{"RhumbLineDistance", ",", 
      RowBox[{"locs1", "[", "\"\<Data\>\"", "]"}], ",", 
      RowBox[{"locs2", "[", "\"\<Data\>\"", "]"}], ",", "1"}], "]"}]}], ";"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.8967734311728067`*^9, 3.896773432652124*^9}},
 CellLabel->"In[85]:=",
 CellID->654443008,ExpressionUUID->"55458ceb-5dd8-4d94-9510-85716bea9931"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"40.029637`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.8967734746631823`*^9},
 CellLabel->"Out[85]=",
 CellID->43514571,ExpressionUUID->"a2abcc5f-fd5a-4039-8800-ccebdb115d3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dists12", "\[Equal]", "outer"}]], "Input",
 CellLabel->"In[86]:=",
 CellID->190202056,ExpressionUUID->"8fdca6a0-8e93-4a8d-9370-20bdd62d085c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8967734895058775`*^9},
 CellLabel->"Out[86]=",
 CellID->662061308,ExpressionUUID->"151d4a9f-30d9-4390-939f-cfa23bf53319"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomGeoPosition", "[", "2", "]"}]], "Input",
 CellChangeTimes->{3.8967709419427414`*^9},
 CellLabel->"In[14]:=",
 CellID->394154052,ExpressionUUID->"58867456-c5b5-4d44-9507-6057b2811e01"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["GeoPosition",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[{
              RGBColor[0, 0, 
               NCache[
                Rational[2, 3], 0.6666666666666666]], 
              PointSize[
               NCache[
                Rational[1, 16], 0.0625]], 
              
              PointBox[{{148.57891732929207`, 
               16.47868528673837}, {-14.247293442534856`, \
-77.68523063748088}}]}, ImageSize -> 
             Dynamic[{{2}, 1} ((5. CurrentValue["FontCapHeight"])/
                AbsoluteCurrentValue[Magnification])]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Lat bounds: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "77.7684023910022`"}], ",", 
                    "16.395513533217056`"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Lon bounds: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "14.20277761301395`"}], ",", 
                    "148.623433158813`"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[{
              RGBColor[0, 0, 
               NCache[
                Rational[2, 3], 0.6666666666666666]], 
              PointSize[
               NCache[
                Rational[1, 16], 0.0625]], 
              
              PointBox[{{148.57891732929207`, 
               16.47868528673837}, {-14.247293442534856`, \
-77.68523063748088}}]}, ImageSize -> 
             Dynamic[{{2}, 1} ((5. CurrentValue["FontCapHeight"])/
                AbsoluteCurrentValue[Magnification])]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Lat bounds: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "77.7684023910022`"}], ",", 
                    "16.395513533217056`"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Lon bounds: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "14.20277761301395`"}], ",", 
                    "148.623433158813`"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  GeoPosition[{{16.395513533217056`, 
   148.623433158813}, {-77.7684023910022, -14.20277761301395}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8967709427425065`*^9},
 CellLabel->"Out[14]=",
 CellID->20960583,ExpressionUUID->"63e0e777-0a99-4dff-9ee4-9e6f90e33673"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "@@", 
  RowBox[{"RandomGeoPosition", "[", "2", "]"}]}]], "Input",
 CellChangeTimes->{{3.8967709497593927`*^9, 3.896770952158594*^9}},
 CellLabel->"In[15]:=",
 CellID->249990886,ExpressionUUID->"24ae364b-b1a2-4781-adeb-378c81c5e576"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"22.888607226258962`", ",", 
      RowBox[{"-", "68.92927372219731`"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5.227478127757699`"}], ",", 
      RowBox[{"-", "105.94006883655481`"}]}], "}"}]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{3.896770952487714*^9},
 CellLabel->"Out[15]=",
 CellID->261613486,ExpressionUUID->"77dce122-3054-46d2-bf23-f42b94b3b847"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Outer", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalP]", ",", "\[FormalQ]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalR]", ",", "\[FormalT]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8967709901332235`*^9, 3.896771012154281*^9}},
 CellLabel->"In[16]:=",
 CellID->23294573,ExpressionUUID->"7199aa80-b30e-4014-b32c-a58325537694"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"\[FormalP]", ",", "\[FormalR]"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"\[FormalP]", ",", "\[FormalT]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"\[FormalQ]", ",", "\[FormalR]"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"\[FormalQ]", ",", "\[FormalT]"}], "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8967710126622877`*^9},
 CellLabel->"Out[16]=",
 CellID->221080799,ExpressionUUID->"520e9751-39f0-4319-ad3d-12b1e80c0fb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Outer", "[", 
  RowBox[{"f", ",", 
   RowBox[{"List", "@@", "locs1"}], ",", 
   RowBox[{"List", "@@", "locs2"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8967710865694537`*^9, 3.896771161309767*^9}},
 CellLabel->"In[32]:=",
 CellID->206070727,ExpressionUUID->"fec89641-2dbf-4486-b95e-34e124fb77e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"48.86981681627396`", ",", 
           RowBox[{"-", "175.80795373107117`"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5.020578553234241`", ",", "174.59747911594957`"}], "}"}]}],
         "]"}], ",", 
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"48.86981681627396`", ",", 
           RowBox[{"-", "175.80795373107117`"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2.369091115276472`"}], ",", 
           RowBox[{"-", "101.86375623719806`"}]}], "}"}]}], "]"}]}], "}"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.517727865406034`", ",", "153.81581880317833`"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"5.020578553234241`", ",", "174.59747911594957`"}], "}"}]}],
         "]"}], ",", 
       RowBox[{"f", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2.517727865406034`", ",", "153.81581880317833`"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2.369091115276472`"}], ",", 
           RowBox[{"-", "101.86375623719806`"}]}], "}"}]}], "]"}]}], "}"}], 
     "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8967711054517136`*^9, 3.8967711618889327`*^9}},
 CellLabel->"Out[32]=",
 CellID->303697865,ExpressionUUID->"2d5aca93-841b-40b9-8607-0ae31e16697b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Outer", "[", 
  RowBox[{"RhumbLineDistance", ",", 
   RowBox[{"List", "@@", "locs1"}], ",", 
   RowBox[{"List", "@@", "locs2"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8967710865694537`*^9, 3.8967711676984854`*^9}},
 CellLabel->"In[33]:=",
 CellID->568797674,ExpressionUUID->"e31780c0-7f17-4f6e-988b-fcefae7e0827"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
        "4945.619989594462`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"], ",", 
       TemplateBox[{
        "9175.705771797166`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
        "2324.782414781598`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"], ",", 
       TemplateBox[{
        "11621.958661301827`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], "}"}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.8967711552132006`*^9, 3.8967711682986813`*^9}},
 CellLabel->"Out[33]=",
 CellID->522777898,ExpressionUUID->"bbc5bc1a-091e-42e0-8ab1-2661448dcaf8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"Outer", "[", 
    RowBox[{"RhumbLineDistance", ",", 
     RowBox[{"List", "@@", "locs1"}], ",", 
     RowBox[{"List", "@@", "locs2"}], ",", "2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
      "4945.619989594462`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"], ",", 
     TemplateBox[{
      "9175.705771797166`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8967715433862734`*^9, 3.896771545596095*^9}},
 CellLabel->"In[55]:=",
 CellID->80450369,ExpressionUUID->"6c89b958-12b4-4e8e-97fe-9e7f6f2d34a0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8967715460141315`*^9},
 CellLabel->"Out[55]=",
 CellID->113983031,ExpressionUUID->"2c54f680-69f6-4893-9e16-d06d7bd5b807"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{
   RowBox[{"Outer", "[", 
    RowBox[{"RhumbLineDistance", ",", 
     RowBox[{"List", "@@", "locs1"}], ",", 
     RowBox[{"List", "@@", "locs2"}], ",", "2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
      "2324.782414781598`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"], ",", 
     TemplateBox[{
      "11621.958661301827`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8967715433862734`*^9, 3.896771557075631*^9}},
 CellLabel->"In[56]:=",
 CellID->111677552,ExpressionUUID->"6bff0853-011e-416a-bab7-791364a9bec9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "1"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8967715575926666`*^9},
 CellLabel->"Out[56]=",
 CellID->4809952,ExpressionUUID->"a769919b-9239-4888-9df8-215efed30d74"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FlattenAt", "[", 
  RowBox[{
   RowBox[{"Outer", "[", 
    RowBox[{"RhumbLineDistance", ",", 
     RowBox[{"List", "@@", "locs1"}], ",", 
     RowBox[{"List", "@@", "locs2"}], ",", "2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.896771560480776*^9, 3.8967716056346626`*^9}},
 CellLabel->"In[61]:=",
 CellID->331455410,ExpressionUUID->"5019e360-e404-47bb-9f86-98edd43a1182"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
       "4945.619989594462`", "\"km\"", "kilometers", "\"Kilometers\""},
       "Quantity"], ",", 
      TemplateBox[{
       "9175.705771797166`", "\"km\"", "kilometers", "\"Kilometers\""},
       "Quantity"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
       "2324.782414781598`", "\"km\"", "kilometers", "\"Kilometers\""},
       "Quantity"], ",", 
      TemplateBox[{
       "11621.958661301827`", "\"km\"", "kilometers", "\"Kilometers\""},
       "Quantity"]}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.896771572952989*^9, 3.8967716062553453`*^9}},
 CellLabel->"Out[61]=",
 CellID->44572880,ExpressionUUID->"511eaa87-d4c3-49bd-81ac-8a16cc18ca32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"FlattenAt", "[", 
   RowBox[{
    RowBox[{"Outer", "[", 
     RowBox[{"RhumbLineDistance", ",", 
      RowBox[{"List", "@@", "locs1"}], ",", 
      RowBox[{"List", "@@", "locs2"}], ",", "2"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.896771611025213*^9, 3.896771613235386*^9}},
 CellLabel->"In[62]:=",
 CellID->559544997,ExpressionUUID->"4f3f2543-3b4e-4a71-8191-01cb1559e124"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
      "4945.619989594462`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"], ",", 
     TemplateBox[{
      "9175.705771797166`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
      "2324.782414781598`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"], ",", 
     TemplateBox[{
      "11621.958661301827`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.896771613592352*^9},
 CellLabel->"Out[62]=",
 CellID->145316118,ExpressionUUID->"1a2f071b-0a3c-4e40-ad7e-0931ebb5679d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"FlattenAt", "[", 
   RowBox[{
    RowBox[{"Outer", "[", 
     RowBox[{"RhumbLineDistance", ",", 
      RowBox[{"List", "@@", 
       RowBox[{"RandomGeoPosition", "[", "3", "]"}]}], ",", 
      RowBox[{"List", "@@", 
       RowBox[{"RandomGeoPosition", "[", "3", "]"}]}], ",", "2"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.896771611025213*^9, 3.8967716231228466`*^9}},
 CellLabel->"In[63]:=",
 CellID->132100531,ExpressionUUID->"b9fa07a6-689f-466d-acd5-2e4e9f15d761"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
      "10252.184905492293`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"], ",", 
     TemplateBox[{
      "12224.68986499502`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"], ",", 
     TemplateBox[{
      "19011.787470666677`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
      "12201.435272400997`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"], ",", 
     TemplateBox[{
      "6464.6426645436195`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"], ",", 
     TemplateBox[{
      "6082.085480163425`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
       "9826.79501816801`", "\"km\"", "kilometers", "\"Kilometers\""},
       "Quantity"], ",", 
      TemplateBox[{
       "10334.111066321646`", "\"km\"", "kilometers", "\"Kilometers\""},
       "Quantity"], ",", 
      TemplateBox[{
       "16708.151718317837`", "\"km\"", "kilometers", "\"Kilometers\""},
       "Quantity"]}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.896771623759034*^9},
 CellLabel->"Out[63]=",
 CellID->194866866,ExpressionUUID->"28349618-8a8e-4e59-8ebb-02d7f0ffb0fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Outer", "[", 
  RowBox[{"RhumbLineDistance", ",", 
   RowBox[{"List", "@@", 
    RowBox[{"RandomGeoPosition", "[", "3", "]"}]}], ",", 
   RowBox[{"List", "@@", 
    RowBox[{"RandomGeoPosition", "[", "3", "]"}]}], ",", "2"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8967710865694537`*^9, 3.8967711676984854`*^9}, {
  3.896771380120006*^9, 3.8967714045398464`*^9}},
 CellLabel->"In[46]:=",
 CellID->371960633,ExpressionUUID->"aa9157ba-a817-438e-9052-18424920f8c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
        "6299.297610764924`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"], ",", 
       TemplateBox[{
        "19197.500180208084`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"], ",", 
       TemplateBox[{
        "12986.74081915296`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
        "14172.32842009326`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"], ",", 
       TemplateBox[{
        "4758.1201640766485`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"], ",", 
       TemplateBox[{
        "8692.62730442511`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
        "2978.8339117631053`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"], ",", 
       TemplateBox[{
        "14973.751075159722`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"], ",", 
       TemplateBox[{
        "8803.64894615208`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], "}"}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.896771405016232*^9},
 CellLabel->"Out[46]=",
 CellID->483112310,ExpressionUUID->"d636c548-5388-42b5-98e6-132873a2d739"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "%46", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[47]:=",
 CellID->124954145,ExpressionUUID->"f3665115-3b35-44fd-96f7-ab90087f1b85"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "1", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.8967714083282924`*^9},
 CellLabel->"Out[47]=",
 CellID->3406479,ExpressionUUID->"7906805c-ce70-4532-9310-64b8961c6f38"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"List", "@@", 
   RowBox[{"RandomGeoPosition", "[", "3", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.896771415297258*^9, 3.8967714266920776`*^9}},
 CellLabel->"In[49]:=",
 CellID->69049252,ExpressionUUID->"f72b90d7-0000-45ca-b4f7-2bb2452a07a4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.896771417577881*^9, 3.896771426862164*^9}},
 CellLabel->"Out[49]=",
 CellID->31400466,ExpressionUUID->"fbfc6733-9ac2-481f-bd43-1d74efbf4ac8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"Outer", "[", 
   RowBox[{"RhumbLineDistance", ",", 
    RowBox[{"List", "@@", "locs1"}], ",", 
    RowBox[{"List", "@@", "locs2"}], ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.896771239449106*^9, 3.8967712406383495`*^9}},
 CellLabel->"In[38]:=",
 CellID->48265310,ExpressionUUID->"98669c0d-ebe9-400e-ad16-431746c138f8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
       "4945.619989594462`", "\"km\"", "kilometers", "\"Kilometers\""},
       "Quantity"], ",", 
      TemplateBox[{
       "9175.705771797166`", "\"km\"", "kilometers", "\"Kilometers\""},
       "Quantity"]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
       "2324.782414781598`", "\"km\"", "kilometers", "\"Kilometers\""},
       "Quantity"], ",", 
      TemplateBox[{
       "11621.958661301827`", "\"km\"", "kilometers", "\"Kilometers\""},
       "Quantity"]}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.896771241028011*^9},
 CellLabel->"Out[38]=",
 CellID->159501010,ExpressionUUID->"8b159a37-65a8-46a5-b088-867a5773c927"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{
   RowBox[{"First", "[", 
    RowBox[{"Outer", "[", 
     RowBox[{"RhumbLineDistance", ",", 
      RowBox[{"List", "@@", "locs1"}], ",", 
      RowBox[{"List", "@@", "locs2"}], ",", "2"}], "]"}], "]"}], ",", 
   RowBox[{"{", "1", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8967713226225553`*^9, 3.896771336367544*^9}},
 CellLabel->"In[45]:=",
 CellID->750532946,ExpressionUUID->"38334102-7621-40ed-97da-fba198f66432"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
       "4945.619989594462`", "\"km\"", "kilometers", "\"Kilometers\""},
       "Quantity"], ",", 
      TemplateBox[{
       "9175.705771797166`", "\"km\"", "kilometers", "\"Kilometers\""},
       "Quantity"]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      TemplateBox[{
       "2324.782414781598`", "\"km\"", "kilometers", "\"Kilometers\""},
       "Quantity"], ",", 
      TemplateBox[{
       "11621.958661301827`", "\"km\"", "kilometers", "\"Kilometers\""},
       "Quantity"]}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.896771330921565*^9, 3.896771336811239*^9}},
 CellLabel->"Out[45]=",
 CellID->190251916,ExpressionUUID->"2d1b7c72-21b3-4cd1-9b06-c2b4bb7ec833"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Outer", "[", 
  RowBox[{"GeoDistance", ",", 
   RowBox[{"List", "@@", "locs1"}], ",", 
   RowBox[{"List", "@@", "locs2"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.8967710865694537`*^9, 3.8967711742632303`*^9}},
 CellLabel->"In[34]:=",
 CellID->607938071,ExpressionUUID->"8c89173c-32c0-4494-9121-fa4a9a6723c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
        "4944.28468632146`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"], ",", 
       TemplateBox[{
        "9040.584746321469`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], "}"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       TemplateBox[{
        "2324.7261898425995`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"], ",", 
       TemplateBox[{
        "11621.743077291658`", "\"km\"", "kilometers", "\"Kilometers\""},
        "Quantity"]}], "}"}], "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.896771174622232*^9},
 CellLabel->"Out[34]=",
 CellID->100970831,ExpressionUUID->"7b443471-3eea-44c5-8b81-eef71084c669"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Quantity", "[", 
         RowBox[{"4944.28468632146`", ",", "\"\<Kilometers\>\""}], "]"}], ",", 
        RowBox[{"Quantity", "[", 
         RowBox[{"9040.584746321469`", ",", "\"\<Kilometers\>\""}], "]"}]}], 
       "}"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Quantity", "[", 
         RowBox[{"2324.7261898425995`", ",", "\"\<Kilometers\>\""}], "]"}], 
        ",", 
        RowBox[{"Quantity", "[", 
         RowBox[{"11621.743077291658`", ",", "\"\<Kilometers\>\""}], "]"}]}], 
       "}"}], "}"}]}], "}"}], "}"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[37]:=",
 CellID->612713341,ExpressionUUID->"4e8084bc-4fac-4d1e-9eb7-944238830cf3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.8967712111246834`*^9},
 CellLabel->"Out[37]=",
 CellID->153714322,ExpressionUUID->"51b7e410-0b29-4733-b431-159c288238a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoDistance", "[", 
  RowBox[{"locs1", ",", "locs2"}], "]"}]], "Input",
 CellChangeTimes->{{3.896771182279661*^9, 3.896771188455855*^9}},
 CellLabel->"In[35]:=",
 CellID->238380139,ExpressionUUID->"5cf04946-62e5-4ff1-9a31-ee1547160bf0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantityArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              
              RasterBox[{{{0.66, 0.66, 0.66}, {0.49, 0.49, 0.49}, {0.74, 0.74,
                0.74}}, {{0.4, 0.4, 0.4}, {0.8, 0.8, 0.8}, {0.52, 0.52, 
               0.52}}, {{0.72, 0.72, 0.72}, {0.59, 0.59, 0.59}, {0.79, 0.79, 
               0.79}}, {{0.58, 0.58, 0.58}, {0.66, 0.66, 0.66}, {0.32, 0.32, 
               0.32}}}, {{-0.25, -0.33}, {1.25, 2.33}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.3], 
                
                LineBox[{{{-0.25, 2.33}, {1.25, 2.33}}, {{-0.25, 1.67}, {1.25,
                  1.67}}, {{-0.25, 1.}, {1.25, 1.}}, {{-0.25, 0.33}, {1.25, 
                 0.33}}, {{-0.25, -0.33}, {1.25, -0.33}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.3], 
                
                LineBox[{{{-0.25, -0.33}, {-0.25, 2.33}}, {{0.25, -0.33}, {
                 0.25, 2.33}}, {{0.75, -0.33}, {0.75, 2.33}}, {{
                 1.25, -0.33}, {1.25, 2.33}}}]}}}, PlotRangeClipping -> True, 
             Background -> GrayLevel[0.93], 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {None, None}, FrameStyle -> {{
                Directive[
                 GrayLevel[0.2], 
                 AbsoluteThickness[1]], 
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]]}, {
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], 
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]]}}, FrameTicks -> {{{{-0.25, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.583, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {1.417, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {2.25, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.028, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.306, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.861, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.139, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.694, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.972, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}}, None}, {
               None, None}}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImagePadding -> 2, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
               Automatic}, PlotRangePadding -> {{1, 0}, {0, 0}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Unit: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"Kilometers\"", Short[#, 2]& ], "SummaryItem"]}]}},
              GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              
              RasterBox[{{{0.66, 0.66, 0.66}, {0.49, 0.49, 0.49}, {0.74, 0.74,
                0.74}}, {{0.4, 0.4, 0.4}, {0.8, 0.8, 0.8}, {0.52, 0.52, 
               0.52}}, {{0.72, 0.72, 0.72}, {0.59, 0.59, 0.59}, {0.79, 0.79, 
               0.79}}, {{0.58, 0.58, 0.58}, {0.66, 0.66, 0.66}, {0.32, 0.32, 
               0.32}}}, {{-0.25, -0.33}, {1.25, 2.33}}, {0, 1}], {{
               Antialiasing -> False, 
                GrayLevel[0.3], 
                
                LineBox[{{{-0.25, 2.33}, {1.25, 2.33}}, {{-0.25, 1.67}, {1.25,
                  1.67}}, {{-0.25, 1.}, {1.25, 1.}}, {{-0.25, 0.33}, {1.25, 
                 0.33}}, {{-0.25, -0.33}, {1.25, -0.33}}}]}, {
               Antialiasing -> False, 
                GrayLevel[0.3], 
                
                LineBox[{{{-0.25, -0.33}, {-0.25, 2.33}}, {{0.25, -0.33}, {
                 0.25, 2.33}}, {{0.75, -0.33}, {0.75, 2.33}}, {{
                 1.25, -0.33}, {1.25, 2.33}}}]}}}, PlotRangeClipping -> True, 
             Background -> GrayLevel[0.93], 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {None, None}, FrameStyle -> {{
                Directive[
                 GrayLevel[0.2], 
                 AbsoluteThickness[1]], 
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]]}, {
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], 
                Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]]}}, FrameTicks -> {{{{-0.25, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.583, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {1.417, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {2.25, 
                  FormBox["\"\"", TraditionalForm], {0.25, 0}}, {0.028, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.306, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {0.861, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.139, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.694, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}, {1.972, 
                  FormBox["\"\"", TraditionalForm], {0.12, 0}}}, None}, {
               None, None}}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImagePadding -> 2, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
               Automatic}, PlotRangePadding -> {{1, 0}, {0, 0}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Unit: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"Kilometers\"", Short[#, 2]& ], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"MinMax: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{
                    "2324.7261898425995`", "\"km\"", "kilometers", 
                    "\"Kilometers\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    
                    TemplateBox[{
                    "11621.743077291656`", "\"km\"", "kilometers", 
                    "\"Kilometers\""}, "Quantity", SyntaxForm -> Mod]}], 
                    "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  QuantityArray[
   StructuredArray`StructuredData[{2, 
    2}, {{{4944.28468632146, 9040.584746321469}, {2324.7261898425995`, 
     11621.743077291656`}}, "Kilometers", {{1}, {2}}}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8967711895704346`*^9},
 CellLabel->"Out[35]=",
 CellID->247547751,ExpressionUUID->"350ce45d-d411-4551-8928-1e17788a6d9e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{"GeoDistance", "[", 
   RowBox[{"locs1", ",", "locs2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.896771190444436*^9, 3.8967711923336773`*^9}},
 CellLabel->"In[36]:=",
 CellID->527124649,ExpressionUUID->"2f100d03-724d-4bc0-aeef-fa5d9f0f13a0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
      "4944.28468632146`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"], ",", 
     TemplateBox[{
      "9040.584746321469`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
      "2324.7261898425995`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"], ",", 
     TemplateBox[{
      "11621.743077291656`", "\"km\"", "kilometers", "\"Kilometers\""},
      "Quantity"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8967711926087217`*^9},
 CellLabel->"Out[36]=",
 CellID->754411915,ExpressionUUID->"2d6a5be3-0432-454d-a304-869c8fae6cd4"]
}, Open  ]],

Cell["Computing all individual distances separately is slower:", "ExampleText",
 CellID->1526801667,ExpressionUUID->"cbff7e24-651d-4f05-a517-99fa09a7d208"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"outer", "=", 
    RowBox[{"Outer", "[", 
     RowBox[{"GeoDistance", ",", 
      RowBox[{"locs1", "[", "\"\<Data\>\"", "]"}], ",", 
      RowBox[{"locs2", "[", "\"\<Data\>\"", "]"}], ",", "1"}], "]"}]}], ";"}],
   "]"}]], "Input",
 CellLabel->"In[63]:=",
 CellID->951187648,ExpressionUUID->"6ca56b68-42cb-487f-af96-84c244659605"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.4197211`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.8967708597704315`*^9},
 CellLabel->"Out[63]=",
 CellID->366863330,ExpressionUUID->"26a266c6-e1cf-4c85-885e-1a815eee2cc4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dists12", "\[Equal]", "outer"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->976220814,ExpressionUUID->"038fa505-7cb1-4394-a506-8a8b51dda706"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[4]=",
 CellID->545212905,ExpressionUUID->"d6d17029-9b42-4304-aa8d-1d891dc3edcb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "20d190bb-2bb0-4c92-8a8a-4cfbe5e755cd"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1656344867,ExpressionUUID->"cb1454f3-eaba-4593-855e-1e4c6070072e"],

Cell[TextData[{
 "Height and time information is ignored in ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GeoDistance"]], "paclet:ref/GeoDistance"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "29b0c845-971a-4182-af7b-378ff98c2b67"],
 " computations:"
}], "ExampleText",
 CellID->357663608,ExpressionUUID->"666986d0-82e8-4632-b15e-14b6e83adfe2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoDistance", "[", 
  RowBox[{
   RowBox[{"GeoPosition", "[", 
    RowBox[{"{", 
     RowBox[{"20", ",", "30", ",", "100"}], "}"}], "]"}], ",", 
   RowBox[{"GeoPosition", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "20"}], ",", 
      RowBox[{"-", "30"}], ",", "200", ",", 
      RowBox[{"3.6", " ", 
       RowBox[{"10", "^", "9"}]}]}], "}"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->445531703,ExpressionUUID->"017cd9b1-0d99-4931-bae1-3788450a135c"],

Cell[BoxData[
 TemplateBox[{"4906.108303826835`", "\"mi\"", "miles", "\"Miles\""},
  "Quantity"]], "Output",
 CellLabel->"Out[1]=",
 CellID->661968850,ExpressionUUID->"884db1fb-e975-46d9-a33c-8dd5d0f261b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "===", 
  RowBox[{"GeoDistance", "[", 
   RowBox[{
    RowBox[{"GeoPosition", "[", 
     RowBox[{"{", 
      RowBox[{"20", ",", "30"}], "}"}], "]"}], ",", 
    RowBox[{"GeoPosition", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "20"}], ",", 
       RowBox[{"-", "30"}]}], "}"}], "]"}]}], "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1632684709,ExpressionUUID->"521991c7-1b34-4249-bd7f-94abdce32092"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[2]=",
 CellID->1003756695,ExpressionUUID->"4e908d68-409c-40cb-879e-ede9451eb3a8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "21046e1d-3886-48bd-91cb-c6a9b168e6d1"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->766713996,ExpressionUUID->"9245d107-b5b7-4c21-8059-4257c7a0d371"],

Cell["\<\
Points in different datums. The datum of the second point is changed to the \
datum of the first:\
\>", "ExampleText",
 CellID->369900643,ExpressionUUID->"bcaa2ecc-2706-4188-adda-a773ff29cabf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoDistance", "[", 
  RowBox[{
   RowBox[{"GeoPosition", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30.", ",", "40."}], "}"}], ",", "\"\<ITRF90\>\""}], "]"}], ",", 
   RowBox[{"GeoPosition", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "50."}], ",", 
       RowBox[{"-", "60."}]}], "}"}], ",", "\"\<WGS72\>\""}], "]"}]}], 
  "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->2102432483,ExpressionUUID->"d91900a6-9375-4258-a1a5-cc95d6e1509c"],

Cell[BoxData[
 TemplateBox[{"8191.50034538647`", "\"mi\"", "miles", "\"Miles\""},
  "Quantity"]], "Output",
 CellLabel->"Out[1]=",
 CellID->1016359177,ExpressionUUID->"f6eb4423-fdfd-4add-8f77-399c39f42f02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoDistance", "[", 
  RowBox[{
   RowBox[{"GeoPosition", "[", 
    RowBox[{"{", 
     RowBox[{"30.", ",", "40."}], "}"}], "]"}], ",", 
   RowBox[{"GeoPosition", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "50."}], ",", 
      RowBox[{"-", "60."}]}], "}"}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1147110521,ExpressionUUID->"9a4864ba-95eb-479f-9d2f-0168f187b163"],

Cell[BoxData[
 TemplateBox[{"8191.507346669272`", "\"mi\"", "miles", "\"Miles\""},
  "Quantity"]], "Output",
 CellLabel->"Out[2]=",
 CellID->2037523720,ExpressionUUID->"5323453d-f3f2-4a1b-8001-e73421adc296"]
}, Open  ]],

Cell["The difference is small:", "ExampleText",
 CellID->2089489150,ExpressionUUID->"7beecaf7-3795-4253-a05c-3687b4770184"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{"%", "-", "%%"}], ",", "\"\<Meters\>\""}], "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1477672869,ExpressionUUID->"03af7f02-8ae2-46c5-ae1f-f62b6b214b53"],

Cell[BoxData[
 TemplateBox[{"11.26747246948653`", "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 CellLabel->"Out[3]=",
 CellID->1724093827,ExpressionUUID->"c1be7809-34aa-460f-b4fc-3adcd9de0065"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "08537c21-202a-42e1-adb7-b04e711c3de7"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1687853720,ExpressionUUID->"3235a6e7-0657-4a6e-9426-75686dc8d3ba"],

Cell["Total distance between several locations:", "ExampleText",
 CellID->1645978817,ExpressionUUID->"63d7c255-5ca9-407f-9882-a02d9165f247"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoDistance", "[", 
  RowBox[{"{", 
   RowBox[{
    TemplateBox[{"\"Los Angeles\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"City\"", ",", 
          RowBox[{"{", 
            
            RowBox[{"\"LosAngeles\"", ",", "\"California\"", ",", 
              "\"UnitedStates\""}], "}"}]}], "]"}], 
      "\"Entity[\\\"City\\\", {\\\"LosAngeles\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
     "Entity"], ",", 
    RowBox[{"GeoPosition", "[", 
     RowBox[{"{", 
      RowBox[{"40", ",", 
       RowBox[{"-", "90"}]}], "}"}], "]"}], ",", 
    TemplateBox[{"\"Miami\"", 
      RowBox[{"Entity", "[", 
        RowBox[{"\"City\"", ",", 
          RowBox[{"{", 
            
            RowBox[{"\"Miami\"", ",", "\"Florida\"", ",", 
              "\"UnitedStates\""}], "}"}]}], "]"}], 
      "\"Entity[\\\"City\\\", {\\\"Miami\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
     "Entity"]}], "}"}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->81636665,ExpressionUUID->"92251ad1-cfe6-4e6c-b39c-c1b8365f9bab"],

Cell[BoxData[
 TemplateBox[{"2728.093135364296`", "\"mi\"", "miles", "\"Miles\""},
  "Quantity"]], "Output",
 CellLabel->"Out[1]=",
 CellID->2065004771,ExpressionUUID->"dbb317c0-9850-40a3-a826-7b53fc00cb54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "==", 
  RowBox[{
   RowBox[{"GeoDistance", "[", 
    RowBox[{
     TemplateBox[{"\"Los Angeles\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             
             RowBox[{"\"LosAngeles\"", ",", "\"California\"", ",", 
               "\"UnitedStates\""}], "}"}]}], "]"}], 
       "\"Entity[\\\"City\\\", {\\\"LosAngeles\\\", \\\"California\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
      "Entity"], ",", 
     RowBox[{"GeoPosition", "[", 
      RowBox[{"{", 
       RowBox[{"40", ",", 
        RowBox[{"-", "90"}]}], "}"}], "]"}]}], "]"}], "+", 
   RowBox[{"GeoDistance", "[", 
    RowBox[{
     RowBox[{"GeoPosition", "[", 
      RowBox[{"{", 
       RowBox[{"40", ",", 
        RowBox[{"-", "90"}]}], "}"}], "]"}], ",", 
     TemplateBox[{"\"Miami\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"City\"", ",", 
           RowBox[{"{", 
             
             RowBox[{"\"Miami\"", ",", "\"Florida\"", ",", 
               "\"UnitedStates\""}], "}"}]}], "]"}], 
       "\"Entity[\\\"City\\\", {\\\"Miami\\\", \\\"Florida\\\", \
\\\"UnitedStates\\\"}]\"", "\"city\""},
      "Entity"]}], "]"}]}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->534352047,ExpressionUUID->"34ad12b5-0146-46f6-9248-2493fff33449"],

Cell[BoxData["True"], "Output",
 CellLabel->"Out[2]=",
 CellID->699512318,ExpressionUUID->"2c3116a0-6406-409f-b16c-6501cfa68e05"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Applications", "Subsection",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->61988931,ExpressionUUID->"7212f29e-84ff-4da0-a2cd-a92c0da5506e"],

Cell["Find the rhumb line distance to the Empire State Building:", "Text",
 TaggingRules->{},
 CellID->700901839,ExpressionUUID->"fab5f08f-f5b7-45b0-9d82-671e13c50b54"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RhumbLineDistance", "[", 
  TemplateBox[{"\"Empire State Building\"", 
    RowBox[{"Entity", "[", 
      RowBox[{"\"Building\"", ",", "\"EmpireStateBuilding::h583b\""}], "]"}], 
    "\"Entity[\\\"Building\\\", \\\"EmpireStateBuilding::h583b\\\"]\"", 
    "\"building\""},
   "Entity"], "]"}]], "Input",
 TaggingRules->{},
 CellLabel->"In[83]:=",
 CellID->783971119,ExpressionUUID->"47ebcb4d-cbb2-437a-8656-26fc75a82d33"],

Cell[BoxData[
 TemplateBox[{"1211.638394293215`", "\"km\"", "kilometers", "\"Kilometers\""},
  
  "Quantity"]], "Output",
 TaggingRules->{},
 CellLabel->"Out[83]=",
 CellID->53958220,ExpressionUUID->"34e05ec1-8de9-42e2-a68f-6e77bdb79b16"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Properties and Relations", "Subsection",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->510489929,ExpressionUUID->"8db4a8a5-c2dc-4f93-be59-ce48821cad9d"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["UnitConvert", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/UnitConvert",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ed059d7e-440b-4603-99e0-22f19475a56e"],
 " and the option \"SIBase\" to convert the output to meters:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8713737816332507`*^9, 3.87137380251783*^9}, 
   3.871373949688037*^9},
 CellID->469864964,ExpressionUUID->"f16c5909-8dc3-4aab-bd91-8fe6e0e17b02"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{"RhumbLineDistance", "[", 
    RowBox[{"GeoAntipode", "[", "Here", "]"}], "]"}], ",", "\"\<SIBase\>\""}],
   "]"}]], "Input",
 TaggingRules->{},
 CellLabel->"In[100]:=",
 CellID->976214116,ExpressionUUID->"fabca053-7272-4a40-aa55-cc2c88365549"],

Cell[BoxData[
 TemplateBox[{"2.034542593027733`*^7", "\"m\"", "meters", "\"Meters\""},
  "Quantity"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.871373828716934*^9},
 CellLabel->"Out[100]=",
 CellID->307133471,ExpressionUUID->"903d2526-401d-42ec-b209-c5d18b880a96"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->611501116,ExpressionUUID->"6e37399f-c000-468c-ab5d-027326458375"],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this function.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8e6c5b6c-c6ff-404f-8bd7-b2a7728c7874"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Contributed By", "ContributorInformation", "TemplateCellGroup"},
 CellID->86203256,ExpressionUUID->"0ff42870-2eba-49ab-8bd7-9c6b88a6e401"],

Cell["Peter Cullen Burbery", "Text",
 CellID->727234288,ExpressionUUID->"199eb811-e724-4b03-90dd-507bd90b5534"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the function in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "bb0f1660-d62e-4ae7-94a3-fc074270044c"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->696375425,ExpressionUUID->"7833bfa0-092b-4b37-90e4-fc682a6f8be4"],

Cell["Loxodrome", "Item",
 CellID->988165412,ExpressionUUID->"6bf84d19-e277-4700-ac1b-2c2bed2a773c"],

Cell["Rhumb Line", "Item",
 CellID->405233262,ExpressionUUID->"56cf6297-cc14-464d-8874-e571483ffde9"],

Cell["Mercator Projection", "Item",
 CellID->57667937,ExpressionUUID->"1376531e-56f0-4fbb-a42e-5a24437bb66e"],

Cell["Geodesy", "Item",
 CellID->153831528,ExpressionUUID->"4fcdecb4-de76-45f0-a427-b108d19db442"],

Cell["Spherical Trigonometry", "Item",
 CellID->717809246,ExpressionUUID->"fd3f7fca-538f-4a69-a6bc-ed51ae9150f9"],

Cell["Navigation", "Item",
 CellID->273950045,ExpressionUUID->"ee2c470a-65c1-4eb2-9c52-31deadab62ee"],

Cell["Geography", "Item",
 CellID->935370713,ExpressionUUID->"da9ecf27-7e68-40db-be42-89aef02050c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Categories", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->362094786,ExpressionUUID->"63143118-5431-4777-9271-ff01625883ea"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
            "\"Cloud & Deployment\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Data Manipulation & Analysis"}], 
            "\" \"", "\"Data Manipulation & Analysis\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "External Interfaces & Connections"}], 
            "\" \"", "\"External Interfaces & Connections\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "Geographic Data & Computation", {
             False, "Geographic Data & Computation"}], "\" \"", 
            "\"Geographic Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
            "\"Graphs & Networks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Images"}], "\" \"", "\"Images\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            False, {False, "Knowledge Representation & Natural Language"}], 
            "\" \"", "\"Knowledge Representation & Natural Language\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
            "\" \"", "\"Notebook Documents & Presentation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Repository Tools"}], "\" \"", 
            "\"Repository Tools\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}],
             "\" \"", "\"Social, Cultural & Linguistic Data\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Strings & Text"}], "\" \"", 
            "\"Strings & Text\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
            "\"System Operation & Setup\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "User Interface Construction"}], 
            "\" \"", "\"User Interface Construction\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Wolfram Physics Project"}], "\" \"", 
            "\"Wolfram Physics Project\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Core Language & Structure"}], "\" \"",
             "\"Core Language & Structure\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Engineering Data & Computation"}], 
            "\" \"", "\"Engineering Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Financial Data & Computation"}], 
            "\" \"", "\"Financial Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Geometry", {False, "Geometry"}], "\" \"", 
            "\"Geometry\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
            "\" \"", "\"Higher Mathematical Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Just For Fun"}], "\" \"", 
            "\"Just For Fun\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
            "\"Machine Learning\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Programming Utilities"}], "\" \"", 
            "\"Programming Utilities\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            False, {False, "Scientific and Medical Data & Computation"}], 
            "\" \"", "\"Scientific and Medical Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
            "\"Sound & Video\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
            "\" \"", "\"Symbolic & Numeric Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
            "\"Time-Related Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Visualization & Graphics"}], "\" \"", 
            "\"Visualization & Graphics\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxVj0tqAzEQRCH4owkmNwjMKrs5xDCOgyFg484FZLlii+\
iHurXQ7a2BJCSrbnjVXVWjGmhJUh1odSiSigy0nm4wX7h8PvDi3bLQ8xviNet0s6bfatH9Sz9F37Ra\
bAykGvaQXNurvcAzd2OR6Bs1A6ljjglZKj1OWnCN2YKbySHNx/xjMs9TcWD1erGiz21b7rRj/\
IJuC4e/ZE4aXfHhv+HTPghyyviO142hUjkzWrXNCRxLNvioCaR2JZhZcwfg5FtH"},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->477668386,ExpressionUUID->"d01caa98-2107-4589-a1f7-9a2009343ff0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Symbols", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List up to twenty documented, system-level Wolfram Language symbols \
related to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "bbbf3cc4-516e-4f54-ad64-20ad9fd75253"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Symbols"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Symbols", "TemplateCellGroup"},
 CellID->659846169,ExpressionUUID->"144890d1-5afc-4bab-b668-701d185508d5"],

Cell["GeoPosition", "Item",
 CellID->754833275,ExpressionUUID->"916fb9cb-8f58-40ba-9313-58a9cd4673e0"],

Cell["GeoPath", "Item",
 CellID->822867338,ExpressionUUID->"81687153-57e4-4ac4-aee9-7ac9d856f3f8"],

Cell["GeoLength", "Item",
 CellID->93970691,ExpressionUUID->"a9630107-8c8a-4a4c-85bb-9b1e707b6ee6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this function.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "aad60e58-b2ae-4963-8895-240d36888389"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->465534472,ExpressionUUID->"869827a4-e000-4324-b075-d518e75c8453"],

Cell["WikidataGeoPosition", "Item",
 CellID->420429171,ExpressionUUID->"0a71ae81-5471-4c9a-8b27-c9402beae8fa"],

Cell["GeoSpatialDistance", "Item",
 CellID->481985811,ExpressionUUID->"b25d9541-bd2c-47a1-8073-c900f1cafccd"],

Cell["GeoSpatialDistanceList", "Item",
 CellID->690574098,ExpressionUUID->"916859a5-b4fe-4ade-97e3-79a390878829"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source/Reference Citation",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
function and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d984eb6d-6bc5-421e-a4e2-cc23166edbe1"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Source/Reference Citation", "TemplateCellGroup"},
 CellID->515669552,ExpressionUUID->"8853b5a4-6e20-43f9-9b20-0b4ecfb41945"],

Cell["Source, reference or citation information", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->436399423,ExpressionUUID->"c7d64c17-2763-4566-b4f0-013ccfdc61d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "dbbf2ad4-8ffd-4dd2-aa49-cf7c8166e36d"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->571756773,ExpressionUUID->"3bf3bc88-dcd2-4e95-8353-841f27f17b7a"],

Cell["Link to other related material", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->132505746,ExpressionUUID->"5848d785-6a9b-4bdb-bef4-0925560321de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tests",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"VerificationTests", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Specify an optional list of tests for verifying that the function \
is working properly in any environment. Tests can be specified as \
Input/Output cell pairs or as symbolic ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "VerificationTest", "SymbolsRefLink", ShowStringCharacters -> 
                 True, FontFamily -> "Source Sans Pro"], BaseStyle -> 
                Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/VerificationTest", 
                ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " expressions for including additional options."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoVerificationTests"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e7218c9b-75c6-4113-a495-e5380dd175c5"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "VerificationTests"},
 DefaultNewCellStyle->"Input",
 CellTags->{"TemplateCellGroup", "Tests", "VerificationTests"},
 CellID->561308448,ExpressionUUID->"171eaa5d-64ff-4287-9619-ac67cd219638"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyFunction", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input",
 CellTags->"DefaultContent",
 CellLabel->"In[3]:=",
 CellID->946203791,ExpressionUUID->"6ee94dbe-f766-4ce1-9058-76f8b96a5465"],

Cell[BoxData[
 RowBox[{"x", " ", "y"}]], "Output",
 CellTags->"DefaultContent",
 CellLabel->"Out[3]=",
 CellID->168370258,ExpressionUUID->"776dc05b-f55b-436f-946c-224e3dcd85c9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your function to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4f3949f1-1705-4ee0-826f-b5671bc1f460"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->695575686,ExpressionUUID->"0f3c2277-5bdb-438d-803f-34152e933fdb"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e1f1fe9f-f306-479c-9134-e33cf53c98b9"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->901090016,ExpressionUUID->"2cae695a-8815-4e91-8c58-6f781e83164b"],

Cell["13.0+", "Text",
 CellTags->{"DefaultContent", "ScrapeDefault"},
 CellID->788185540,ExpressionUUID->"269f5047-da42-4b72-9216-d5f50286df8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your function is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d0387ddb-28ba-432f-aee2-fd6071ecb27f"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->172929666,ExpressionUUID->"9dc1be20-0342-4738-8f5b-5c222ed82e4b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
            "\"Windows\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", "\"Mac\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Unix", {False, "Unix"}], "\" \"", "\"Unix\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNkNuKwkAMhsEerLDsE/gKfQipCoJLF7PL7m0PUQenM8Mkg87bmwot3iX5/\
3w5bIoSMuCoEfI6sAtcwrK6YnfD/pxQelTEsPxTprd3gvyr6Wr4h/\
TXqIc0HhgHmmznBaWnIKDZPgWzkkj/\
BJmLL9iELL69deg5wrqyg2tYtUorjrUUJTEXiCRDZcnasbLmxX6fTsWuV9y0EmX7RhPOwmqLGt+\
V8VKrw2CoSkr4PBhG77xYRjCsNiZCaAnlIx8nJBt8hz/RIRT7YLrR8wRtF2wJ"},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->589765368,ExpressionUUID->"fe87368d-78b5-4e73-a18e-7d14b3e47ae1"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your function."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d40c01ff-68f9-4b92-927f-7755cf73b664"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->304592644,ExpressionUUID->"c3cda375-a93c-4fde-969c-68722eef43d6"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebooks"}], "\" \"", 
            "\"Notebooks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
            "\"Parallel Kernels\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
            "\"Cloud Access\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlUM1qwzAMHmuzJlDKLrv3BfIQIVugrKyl2gs4jsJMFdtY8sFvP2eDkLHb96cPSU1ZQw\
GSCOHpEsVHqWHXfqG+4zA+8PZsOCvFSXDicfPLx0fe3mKeqD6cYO/cnVdwcZ+vKigipOM7BovE/\
5Ulu2/JxeHYaI3Mf1kN5TU4j0ESvLRu8kpMb8hI6lBJDJgTu4sX4+\
xP33pDLt8GI6rPqOgUMS5G9YqEa2c+21GcLLebGg4nKxh8yJG5GKrGJog9Y37G/\
obsYtD4mTxC2UWr58w3NfBx2Q=="},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->851691753,ExpressionUUID->"5e9b4b65-e4ae-4e2d-8fde-27ba756f2b5a"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your function is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "70fd4e51-5fdc-465e-bd58-82c3d23fd420"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->684661901,ExpressionUUID->"db07fbcb-62aa-43b1-9b97-e5fa18f94047"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Session", {False, "Session"}], "\" \"", 
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Script", {False, "Script"}], "\" \"", 
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
            
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
            
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdUdtqwzAMha3NBbZ9xN7zEV2WQsagpRrsOReVmDq2seRC/\
n721jjpnnykI845kndZAVvgSSIkB8fGcQFpOWB3wf6c0uZTEEMKSCS0gudvbKtrI13DoczeGu6GD91\
CAp0VhiHxA7tjDTm49oJWofSwG7B3EnvvVDOONOueH2hz8sSiP4PIRN2/N/bv9GcY2X8x78tF+\
5b19q6058ArGNll54gKyI5WG7Q8wWupR+N9WiEFT4trpa7CajWiCgc+mNCjILo+\
BGVVL7hpPdruG0kYifwdJa6Z8EtaulFR+VjAS60YrbF+5HfjfKcmfxZCb/Z0QtLOdvg1GR9/\
71QXZn4A3oyuQA=="},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->171952027,ExpressionUUID->"48de61a0-0e20-4b30-bf08-fec80b539fc2"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your function is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "03af7f1d-730e-43dc-96a7-44a71f62c189"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->104285080,ExpressionUUID->"e793e3f2-773c-4b87-bce2-c80ff8df575e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[True, {False, True}], "\" \"", 
            "\"Supported in cloud\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNjkEKwkAMRVGqVhAX7tx5gR5Cq0JBqBgvUNsUB6eTYZIsentnQMVdyH/vJ/\
u8gBnIaBHmtYpXKWBRPrF9YddPOLsYFs7uQTFyleDA320/\
5eym0duAek9BsNsZt2stafc18msgj0FG2JY0+EbMw1gjY5mgjxbv1V4MOU6N/\
82cnzojzSNOs3NjGX/B8ogW/5P0NFkdHJeTAtaVEww+RCQVw+\
JAZLFxBaxuyKShxfvoEfKzujYRb6FXWpA="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->131115484,ExpressionUUID->"b74f84fc-098c-4496-93b0-a7db2d4a3126"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the function documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e201ddd4-7cc8-47b5-ad5b-761cf6fa62cf"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->681870591,ExpressionUUID->"7d2ed8eb-c28f-4cd4-b6b7-a318265d84a7"],

Cell["Additional information about limitations, issues, etc.", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->958952487,ExpressionUUID->"7f86369a-a27e-4174-b327-de97b4dee4a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Submission Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter any additional information that you would like to communicate \
to the reviewer here. This section will not be included in the published \
resource.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "61d0b0a0-e778-4721-9aee-2623e716bf4a"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Submission Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Submission Notes", "TemplateCellGroup"},
 CellID->916799765,ExpressionUUID->"a7619dbe-df43-42e1-a35b-a7c455c2a565"],

Cell["Additional information for the reviewer.", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->604291542,ExpressionUUID->"683a223f-07d5-4fb2-a0fe-ae23ac5902ff"]
}, Open  ]]
}, Open  ]]
},
WindowSize->Automatic,
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
WindowTitle->"RhumbLineDistance | Definition Notebook",
TaggingRules->{"CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWVtT20YUrjEQBhxaMulMkyc98EAyadJpO9NL2iauDcQdIMCa9JW1dGQ0rHeV3RWg\
X9a/17MrydhGciTbTFNPJsja1XfOnut3LH9JPWqJQSgi7u3ehBKUCgT3a2rlJApA+/nLS2qp4+P/\
9Sb38M/K7seIMrW5/QGkWT+KBj2Q0refnbdmB6EDOMGLRiuSErj+QFkE/\
hfq0e4VXlFtnhIaekJc4q7lg0Bp1ejSfj/g/dOIgSKNU1Aiki504xDIcptqimouv+\
cuFGq58icT7qXZlgButwTXcKOPqb7w60UnPwLwFNnJ5JFYaRi0WIBqn7fBD3gwqu757SOOUSp7LG+\
rWj6KGEPFXt5dTAWcQh9VBYma+kE/ktY0w+O+KavUKYRCBVrIOAFMcFQKVLf+\
q6m1PRqwSKJnaurhMXUZ6A5XmjJGvinS0F+\
dxdgzmbXRFWOeWSdaYjz8JQIjr35IQ3uGiLvmSX8lkUyeFBrXKkeVCeuNBIuELNDmNmFCt2qkdk6Wf\
v195MbS63WrPMavIs/KKv/\
cXy6wUp2AkbfeFtfcJoFSv5RFzS7eRxrdCJ5JqHX0NKMuNDGuFgi7YZKuDYzG4CHuxjvBPHQkBiZXf\
5QFPpbBFQKeXyVlYV8CfpPqwRlXaTnIsUa7KjoNQ+DeGb+\
g3GPgtYAxNdUwi5IwxUb4tbKVXITFipcikK0uDPAAGoy4fSmicH5QzN1Gk5krLAdXGNBft3BTX8gA1\
LetC3Ave+IGb2/e3jbSSSNbs982UR6NmLb5zXWOpuTL7BaBJDdzXV26mg0doS674iz08Dqt+\
8VeXgD4mIPreONBlgJr+0z0KDu/MC1t1KLqp7Ji90G/\
CzwPeFKIyqfrHuVu3LoQgQvtgDLRH1WskSomNXZJ7K9YlCm/\
zFOd4uqWXTU9icDHCPDU5FFqAeZlAk+\
wXQzPOy5gBCxrKStdGdnUnrNKVGl22UUWdCkNUd9XVYH3quRYSmUmpY5ZKLPnEVwP7Zlr4yRB1GFVl\
bcjBQfQp27c6XMhk+qU+VotG2/kJ9/rspJycCcSb1oazilmWo1dUqsH+\
KQtjHtV7dYHnZWxcYkLSyVMiQ3UHLAuUgXqPtQtzEak0JY1r5rdnbbJS6ufetDBmt3HSF3rcCss/\
oSR60OtCw6eApeue9mJ1LAz3IHt3Vp7KH5EZk3tVm6DlAseuJQdSxECWsvyuVl1HlE0f4hYSotho6m\
UcAPLvU9Us3Juh6m2JEb144GJobWmJSNdsRg4GyZkk1igQ9DUM/\
NBOoGRtVagkwHkSbLj1Sn4IE10O9nSbXVZjFdGhE6olUxPwxkqGUGXD9Dmd0bPL+zn+\
VucCeYZVqZMEhX4/fNClGqEvhrONAb/YyESDoGXtA/ERYdU4+1nhZhJt8uLg0TYzET+3kROZ/\
YlrVeGz88E9Zmx+OP5vVCB1t+HtFl4/k6hHpPEvjht/ydMfqZqgQDffbJeTVLn1tzOtQz+\
VSHMfVD2YqXHzDMzUX9RiD8fM6+KW5aK/1bOHv8tAZ9Lyc+Idv9ceA7iShpi/ZnMkHl49+\
uS7SqXbc+s6ox0uzPlN/bsx3HMtiicFDuddi8UdpH0ex7nlCTdtbHf2yfeAuUz8R/sZ+etcc9oqyP/\
1LoXgXJ4qqpjqBiVytHC6YHj2i7iOb4UA4c6HK5BOmmHeeEogf8G4Pi4KcIocAY0NkjOtZCIpBy4CT\
F2wHvptIUTi8i5DtSFgdYydmikxQAPizZgseMKjrgaw8/RYwrhboqrgxC39hhk0t/cTg/\
1dHpYy6aH8TlCbaLrk2YjJJVx4TBiHTj5bmz4CqLgfdhDgg6L1CGioG9x+\
xY6tG9AO9zDs2EcDuvRetMalxpasHaEJNB0BOvNVRIPeoKRp8nbn0PKEUyeJ9+Snkce5811pZ/+\
KouXDOV2vNqeXMp9D7QyIujZnSeKiMG4/\
WyabbVsUI30dbWyR5mC4Y6npzAQV7A7CHW8e0ORJGTUV01ufdzMGR2GbTwVmCj3d8A9cd0NNHoiRcl\
98fkvn3IKDA=="]]], "CreationTimestamp" -> 
  3.872949501892853`16.340616823560897*^9, "DefinitionNotebookFramework" -> 
  "DefinitionNotebookClient", "ResourceCreateNotebook" -> True, 
  "ResourceType" -> "Function", 
  "RuntimeConfiguration" -> {
   "LoadingMethod" -> "Paclet", "PacletName" -> "FunctionResource", 
    "Contexts" -> {
     "FunctionResource`", "FunctionResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Legacy"}, "ToolsOpen" -> True, 
  "UpdatedTimestamp" -> 3.872949501944772`16.34061682356672*^9, 
  "VersionInformation" -> {"ResourceVersion" -> "1.0.0"}, "TemplateVersion" -> 
  "1.6.4", "StatusMessage" -> "", 
  "SubmissionReviewData" -> {"Review" -> False}, "AutoUpdate" -> True},
CreateCellID->True,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (May 18, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.92157, 0.34118, 0.10588], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}], 
   Cell["Hint Styles", "Section"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell["Template Boxes", "Section"], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Subscripted Variable\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert subscripted variable placeholder\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3787878858871814623; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Subscripted Variable"; 
                    DefinitionNotebookClient`SubscriptInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3787878858871814623]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2572781756330727330; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2572781756330727330]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              GrayLevel[0.9]}}, 
          GridBoxFrame -> {
           "Columns" -> False, "RowsIndexed" -> {1 -> GrayLevel[0.9]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.022222], {
                   FaceForm[{
                    RGBColor[0.87451, 0.27843, 0.031373], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{45., 22.5}, {45., 10.074}, {34.926, 0.}, {22.5, 
                    0.}, {10.074, 0.}, {0., 10.074}, {0., 22.5}, {0., 
                    34.926}, {10.074, 45.}, {22.5, 45.}, {34.926, 45.}, {45., 
                    34.926}, {45., 22.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLckSxqe7SdlhmnN3zvPblg4w/smyffOl/K0cEp5e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcLUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzAHLC+HjtHICGz32fruGQC1Zo57BASv+uCpsW
RP9Me4g9YjoQe3gcHICqlx/z1nNgAAEFB4j6Y/oOQMvOfVd2gLhjlgGEz+zg
oBnTf+irhiFEfw/UvDJDiP2+9g7qhhxrZGYZQtS9sHP48vdKxcs2Q4i72u0c
pEHOSTSEuxfsTiFDiPhCWwcXoHd+rzRwWOS67fPfEFuHx0tnH1EoMHDYUJQx
8a2MrUPQDrnW14IGUPfaOnzTAFq0VR8aXrYOoFA6V64HcccvWwfTuF2ePEy6
UPPtHIC+CH68VBvOP70QaNFeLTg/X6j5wKlELYdPl3yTBCLsIP7U0YK49y3U
PR80HQJ6p+cJHbaB88HqZ1jD1QNdUyWSZwWJH2stiHtuWcLdC+ND4lvfwbzT
MeHpBEt4+IPld1lA4p9DH+LuVgu4eeh8sH18hnA+2J6velB3aUHSyxE9iP8U
9aDpBMH3A/rWskQHYt8JBQw+TD0kPpTh5sHSMzgd/0TwYe6B8WHulY1Ksb7f
rwDng+PHSQES31csIPF7UREePgCOg02w
                    "], {{19.051, 14.242}, {19.051, 27.594}, {23.828, 
                    27.594}, {23.828, 26.543}, {21.426, 26.309}, {21.375, 
                    26.258}, {21.375, 24.219}, {21.375, 17.535}, {21.375, 
                    15.602}, {21.426, 15.547}, {23.828, 15.316}, {23.828, 
                    14.242}}, {{24.578, 18.75}, {24.578, 23.078}, {24.578, 
                    23.539}, {24.953, 23.914}, {25.418, 23.91}, {29.746, 
                    23.91}, {30.203, 23.91}, {30.578, 23.539}, {30.578, 
                    23.078}, {30.578, 18.75}, {30.582, 18.289}, {30.207, 
                    17.91}, {29.746, 17.91}, {25.418, 17.91}, {24.953, 
                    17.906}, {24.574, 18.285}, {24.578, 18.75}}, {{31.328, 
                    14.242}, {31.328, 15.316}, {33.684, 15.539}, {33.789, 
                    15.602}, {33.789, 17.641}, {33.789, 24.188}, {33.789, 
                    26.227}, {33.684, 26.281}, {31.328, 26.512}, {31.328, 
                    27.586}, {36.113, 27.586}, {36.113, 14.234}}}]}}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], AspectRatio -> Automatic, Background -> 
                  RGBColor[0.98824, 0.41961, 0.20392], 
                  ImageSize -> {45., 45.}, 
                  PlotRange -> {{0., 45.}, {0., 45.}}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Function Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {2 -> RGBColor[1., 1., 1.]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> RGBColor[1., 1., 1.], 
                 StripOnInput -> False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Function Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> RGBColor[1., 1., 1.], 
               StripOnInput -> False], 
              "https://resources.wolframcloud.com/FunctionRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Open Sample\"", 
                "\"View a completed sample definition notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 4393071033038384034; (
                DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                DefinitionNotebookClient`ViewExampleNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[4393071033038384034]]& , 
              "\"View a completed sample definition notebook\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Style Guidelines\"", 
                "\"View general guidelines for authoring resource \
functions\""}, "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring resource functions\"", 
              False}, "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[0.99412, 0.7098, 0.60196]], "Grid"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Check\"", "\"Check notebook for potential errors\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 7891204313296928191; (
                DefinitionNotebookClient`$ClickedButton = "Check"; 
                DefinitionNotebookClient`CheckDefinitionNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[7891204313296928191]]& , 
              "\"Check notebook for potential errors\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{"\"Preview\"", "\"Generate a preview notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 4299709568580201021; (
                DefinitionNotebookClient`$ClickedButton = "Preview"; 
                DefinitionNotebookClient`PreviewResource[
                  ButtonNotebook[], "Notebook"]), 
               DefinitionNotebookClient`ButtonCodeID[4299709568580201021]]& , 
              "\"Generate a preview notebook\"", True}, 
             "OrangeButtonTemplate"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"For my cloud account\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1389539917011878958; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "For my cloud account"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPrivate"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1389539917011878958]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], 
              "\"In this session only (without documentation)\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8586347731213964380; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only (without documentation)"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8586347731213964380]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your function submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your function submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your function to the Wolfram Function \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your function to the Wolfram Function \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.98824, 0.41961, 0.20392], 
              RGBColor[0.92157, 0.34118, 0.10588]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.98824, 0.41961, 0.20392], 2 -> 
              RGBColor[0.92157, 0.34118, 0.10588]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[0.98824, 0.41961, 0.20392]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.022222], {
                FaceForm[{
                  RGBColor[0.87451, 0.27843, 0.031373], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{45., 22.5}, {45., 10.074}, {34.926, 0.}, {22.5, 
                 0.}, {10.074, 0.}, {0., 10.074}, {0., 22.5}, {0., 34.926}, {
                 10.074, 45.}, {22.5, 45.}, {34.926, 45.}, {45., 34.926}, {
                 45., 22.5}}}]}, {
                FaceForm[{
                  RGBColor[1., 1., 1.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                  2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLckSxqe7SdlhmnN3zvPblg4w/smyffOl/K0cEp5e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcLUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzAHLC+HjtHICGz32fruGQC1Zo57BASv+uCpsW
RP9Me4g9YjoQe3gcHICqlx/z1nNgAAEFB4j6Y/oOQMvOfVd2gLhjlgGEz+zg
oBnTf+irhiFEfw/UvDJDiP2+9g7qhhxrZGYZQtS9sHP48vdKxcs2Q4i72u0c
pEHOSTSEuxfsTiFDiPhCWwcXoHd+rzRwWOS67fPfEFuHx0tnH1EoMHDYUJQx
8a2MrUPQDrnW14IGUPfaOnzTAFq0VR8aXrYOoFA6V64HcccvWwfTuF2ePEy6
UPPtHIC+CH68VBvOP70QaNFeLTg/X6j5wKlELYdPl3yTBCLsIP7U0YK49y3U
PR80HQJ6p+cJHbaB88HqZ1jD1QNdUyWSZwWJH2stiHtuWcLdC+ND4lvfwbzT
MeHpBEt4+IPld1lA4p9DH+LuVgu4eeh8sH18hnA+2J6velB3aUHSyxE9iP8U
9aDpBMH3A/rWskQHYt8JBQw+TD0kPpTh5sHSMzgd/0TwYe6B8WHulY1Ksb7f
rwDng+PHSQES31csIPF7UREePgCOg02w
                  "], {{19.051, 14.242}, {19.051, 27.594}, {23.828, 27.594}, {
                  23.828, 26.543}, {21.426, 26.309}, {21.375, 26.258}, {
                  21.375, 24.219}, {21.375, 17.535}, {21.375, 15.602}, {
                  21.426, 15.547}, {23.828, 15.316}, {23.828, 14.242}}, {{
                  24.578, 18.75}, {24.578, 23.078}, {24.578, 23.539}, {24.953,
                   23.914}, {25.418, 23.91}, {29.746, 23.91}, {30.203, 
                  23.91}, {30.578, 23.539}, {30.578, 23.078}, {30.578, 
                  18.75}, {30.582, 18.289}, {30.207, 17.91}, {29.746, 
                  17.91}, {25.418, 17.91}, {24.953, 17.906}, {24.574, 
                  18.285}, {24.578, 18.75}}, {{31.328, 14.242}, {31.328, 
                  15.316}, {33.684, 15.539}, {33.789, 15.602}, {33.789, 
                  17.641}, {33.789, 24.188}, {33.789, 26.227}, {33.684, 
                  26.281}, {31.328, 26.512}, {31.328, 27.586}, {36.113, 
                  27.586}, {36.113, 14.234}}}]}}, {
              ImageSize -> 12, AspectRatio -> Automatic, Background -> None, 
               ImageSize -> {45., 45.}, PlotRange -> {{0., 45.}, {0., 45.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.95686, 0.80196, 0.75]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4HW4NCUIlyHPAkQfuPPftue4ZskMQUA2UAQoTpQhYVJ3
XXgumzLgQkBZoBo8hjwLFLtuzQJSbIbDELA4UA1QJXZDwqSgJhCBgCrh7kE2
BL8vsPsL1RBgiOHzBQ5/QcIZbggw5ElyBgQBdSEbAoxBMgwB6gLqhaRGIAOY
EsgwBKgLYggQUG4IVVxCxTChSuxQJZ1QJcVSK+9QJxdTqTyhWslGbhmLHxBT
2gMAMUz3Hw==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4HW4NCUIlyF3/cTOOAvtteRZb8ABQUA2UAQoTowhL0Ol
jtrxL9dmw4WAskA1eAy57y++yYgTjwkQBFQDVInVEKD5xJgANwfuHmRD8PsC
q7/QDAGGGEkmQBAknOGGAEOeDEOAupANAcYgGYYAdQH1QlIjkAFMCWQYAtQF
MQQIKDeEKi6hYphQJXaokk6okmKplXeokoupVZ5Qq2Qju4zFD4gp7QFpR8IT

             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4HW4NCUIlyHvKz2/LG7+eWr737fPIAjIBooAxYkx5E2M
0rets/E4GygLVIPHkHclTn+e3gaK/P76+drsrsN5IRudFCEIyAaKAMWBskA1
QJVYDQGaDzHh5amDm9xUl2uzYSKgOFAWYg7cPciGQHwBVINVOzKCmANUj2YI
MMQgvsDlBjT3QPwFCWe4IcCQBzKAviZoAgQBVQLVA3UhGwKMQSADGHpEGgJU
CVQP1AXUC0mNQAYwJQAZwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8oRaJRvZZSx+QExpDwAxBaHa
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.92157, 0.34118, 0.10588], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.92157, 0.34118, 0.10588], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell["Documentation", "Section"], 
   Cell["Usage", "Subsection"], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell["Details & Options", "Subsection"], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell["Examples", "Subsection"], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell["Links", "Section"], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell["Annotation", "Section"], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell["Special Input", "Section"], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 1053094956087266899; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Function", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[1053094956087266899]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 4898876371082581810; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog[
                    "Function", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[4898876371082581810]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell["Misc", "Section"], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[0.9]]}, Visible -> False, FrontEndVersion -> 
  "13.3 for Microsoft Windows (64-bit) (May 18, 2023)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"277e471f-b6a1-43f8-8110-322d7f0b3941"
]

(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     39166,        835]
NotebookOptionsPosition[     37527,        801]
NotebookOutlinePosition[     38000,        818]
CellTagsIndexPosition[     37957,        815]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Information", "[", "Until", "]"}]], "Input",
 CellChangeTimes->{{3.896635093964446*^9, 3.8966350961801724`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"dcba9374-ee2e-4a10-b65d-64ad17219262"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = True, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Until",
              ButtonNote->"paclet:ref/Until"],
             "\"paclet:ref/Until\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Until\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"body\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) evaluates \\!\\(\\*StyleBox[\\\"body\\\", \
\\\"TI\\\"]\\) and then \\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\), \
repetitively, until \\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\) first \
gives True.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Until", 
                    "paclet:ref/Until", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Until.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Until.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    "HoldAll", ",", "Protected", ",", "ReadProtected"}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Until\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Until",
              ButtonNote->"paclet:ref/Until"],
             "\"paclet:ref/Until\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Until\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"body\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) evaluates \\!\\(\\*StyleBox[\\\"body\\\", \
\\\"TI\\\"]\\) and then \\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\), \
repetitively, until \\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\) first \
gives True.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Until\", \"[\", RowBox[{StyleBox[\"test\", \"TI\"], \
\",\", StyleBox[\"body\", \"TI\"]}], \"]\"}]\) evaluates \
\!\(\*StyleBox[\"body\", \"TI\"]\) and then \!\(\*StyleBox[\"test\", \
\"TI\"]\), repetitively, until \!\(\*StyleBox[\"test\", \"TI\"]\) first gives \
True.", "Documentation" -> <|
     "Local" -> "paclet:ref/Until", "Web" -> 
      "http://reference.wolfram.com/language/ref/Until.html"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {HoldAll, Protected, ReadProtected}, 
    "FullName" -> "System`Until"|>, True]]], "Output",
 CellChangeTimes->{3.8966350965971713`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"45fa5f62-f866-4b68-85fe-3f5f70254864"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Write a one-line description explaining the function DropUntil's basic \
purpose. This is like the ResourceFunction DropWhile, but it uses the loop \
construct Until instead of While. Similar system functions include TakeWhile \
and LengthWhile. There's also the ResourceFunction DropTrailingWhile. Until \
was introduced in version 13.1 of Mathematica. \
\>", "ChatInput",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{}, "ChatInputCellDingbat"]], Background -> None],
 CellChangeTimes->{{3.8966350021280622`*^9, 3.896635108139949*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"000aae89-cf2c-414a-930c-caa796ce2c2c"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{"DropUntil"},
   "ChatCodeInlineTemplate"]], "ChatCode",
  Background->None,ExpressionUUID->"c545b34f-f1dd-4f03-8428-61645e1a7a5e"],
 " is a custom function that drops elements from a list until the condition \
specified by the test function is no longer satisfied. It uses the loop \
construct ",
 Cell[BoxData[
  TemplateBox[{"Until", "paclet:ref/Until"},
   "TextRefLink"]],ExpressionUUID->"913ba5f5-d3fe-410b-8053-e416d9f0c79c"],
 " instead of ",
 Cell[BoxData[
  TemplateBox[{"While", "paclet:ref/While"},
   "TextRefLink"]],ExpressionUUID->"848fd9a3-802b-4c23-9265-cf9d0c80f755"],
 ". This is similar to the built-in function ",
 Cell[BoxData[
  TemplateBox[{"DropWhile"},
   "ChatCodeInlineTemplate"]], "ChatCode",
  Background->None,ExpressionUUID->"3e7862ec-5e38-4ffb-a63e-397b1b7c2c03"],
 ", but with a different type of loop."
}], "ChatOutput",
 CellDingbat->Cell[
   BoxData[
    PaneBox[
     TemplateBox[{}, "ChatIconCodeAssistant"], ContentPadding -> False, 
     FrameMargins -> 0, ImageSize -> {35, 35}, ImageSizeAction -> 
     "ShrinkToFit", Alignment -> {Center, Center}]], Background -> None],
 TaggingRules-><|
  "CellToStringData" -> 
   "`DropUntil` is a custom function that drops elements from a list until \
the condition specified by the test function is no longer satisfied. It uses \
the loop construct `Until` instead of `While`. This is similar to the \
built-in function `DropWhile`, but with a different type of loop.", 
   "MessageTag" -> Inherited, "ChatData" -> 
   "OEM6eJx1V+tuG8cVRlOnqdm6l6Ao0H/\
HrIHErkQjMVLAAtqCkaxYqGQJJl01EJVwuDtLTjic2c7MitoG/tO3aPsMfYC+UJ+j35nZXVJhzB/\
S7sy5X75zdvjr/VFv6L3yQZhM+vvDKtiVCCrjczwfW4dXf2/\
sKomjz4WXF86uynCH9OHhQoRDa4K8DYdSa5BAmFdmflyZLChr3kl+YX14cSN0JZjse8l/tU3uZLmr/\
0OmOHLqRppXNsiZtUv//rHQHjb/ku9ewkHr6lNp5mFx+BucHtVGrFS25eO2wF8cO/\
m3SpqsvpBG6FC7f/2Tf//90/7oZycm01UuG5l3+O6fiduxXUrj7xw/OJNuLs8QEjHHnyaa75/\
ZXOrRg3kZ9p8NPtsPlZvZ/dHP4aOHarmr+sFoYddnyqiV+rvM76j4yViuSukEhEhXxN//\
wPHTsbXavzBipsHQxuTe2JYXhz/Aw5EIYoiHH7fGFT/0907h2fA93Dqr5ehHvvZBrvZHH2ScAxNG//\
nwS1uRcJIELaQui0rTpdWFEys6FWZeQRCJpqoCIdAyp0M4S22phQFBhKNv7IyUp2AptxQWkgqrtV2j\
cA56vSd0XhTS7Yr21RyWxjqhGSoyJ2uodPJG2cqTMmUV/\
ADsL2EbFeqWpHPWxaMXt6UWyqQTWjVOk0/\
aKw91lcmlYyNzT2vUDq3hM62dNfNtCbYKrAd8IFmJmmaSEKCi4rJnj5SRt8iI4lTmUXS0IIVgo26tw\
oIsXh2YSpV5RI6MlLnMB3S5UFpSjWj7UmZKaOQdgndCshdpMmFiPpJMYeokcdDr/Za+kAbVoenE+\
OCq1GS9XptHhcQ6gVOYnpiTcWHhbDXn11Zj21+\
JpRCZHNAYvnShZEOczCSakQq06sbThcDRTErDcbqRLiAsiFMKJzd3ojethqbcBjRCvWvhdB3d3EpbL\
MG2B4TW9ZbkKGtL9kwW1rF+9jFXHld1MqA1cEBAArylglxbxyY4+\
BIazbSqkDmRI1eyZewKluaVQjsj6z7W7uUCEYctyWS0dImIxxIJsAm200zbbEm2wFmODPoKNYniIxV\
SDhB8CYNFtoR3S3DwXcKeqFq3/\
bCGKhJlqREE9PlBbzqdtpc9Fs4HXHqnl8MvR1uKDJsb1SeNua3Av6USToobq3ISq5mCg6FOhFlC49j\
a/oCm07O6AWg8tSB+dXsd1V46FVAgAnzoCMeDgTs3NcqpGMu/Rtc6s+DbqrVHI+/\
k1dxAy6Pbrz6l31H91aePIPXk7OL89Xj4avzwTqjRqKxNkFYhFnzrDCG3W/\
KoqYu9NirSZ6KUXfBFZPRa+MUAPS9WJQJLJwGue3T9StLk0fPng+\
efEWtGp6lValRU2VwGjlwjcTJl1ZNHQCgLPND1Q1h/qswSVZiKi4l3QC63WbVC+\
ce5SLO6idfdmvM1CG4P6EqLmdTXH5ci0zIcVE49TtUsG8t795/\
Q1ZiroyNysngaTx7Hy07xOfy5UXLdEcbCftret9eJ64TBlkbRjI4hoCUdwOppvE2Xj5uWQCcA04GJb\
P4usterGebVJjkpm7EiBPfM3aigfJcDOjcIYZwfaosTMBIrmzF3FAsAUZ5VSod90KSZRkVTqgDWUA9\
oGGsdXiwjvFRGo1gT9BYNwMS9ALx5RNUdB0ahRgN90UEBI8GfpSxTk3nFyUj9Wlr0AaIPgjfAhY0lX\
CdzCF1xhIAUQYqcUaLkpSqvUNNgObLRQR6yqOW5tjMw3ghEHSJ90qDCRz5SGcnbmHA1GC9i/\
GkFc9zuHOkSwA25kmFhcw+mM54lRq676w2UizxPKHp5Cvcw6hLeLY1dY+\
OAxAzFUBSUi8AYZylbSOTibh67idcWSeakiMOo1Db4PdZCtkwT31fZgjliySdLtZxLHtcwYyWWTb1I\
4VUcqlsTnXGj2EwkxcN2yXrQtaguYFOlw3bQY9p4SDmbV5lM0z6R7bGMKGudovh1i7lfy7TQ8jTB+\
rVZpe6x1q1F6h8fMDCfmKtnv78++ANmcxFXUcbONyYofd3rnVeBb+\
9c8tJ2hT3CYiOIxP3z2TdAknFdyj7t/5H6o5in/h713/CkTIeTh5OPJ09e2/Xn9vbq20k/qpiAaNK/\
iv967V2sYn6a9AOKPdGMTyb9a37Y4/ctkpnN6y2St5HoetJ/ez15TE0oUJOTXjLg3ZwgFwn/\
DW3R0mAwoD3qEbwp/wJx0keHXlmDkuof2bXZPR1Vs+\
8hlYVA5nYuWPSrXfL0YbB7fp4q8TsChiE4NatCQ/\
vtS6vzodZ7aDlsNBkgY49eo6y617esotL6FYZomzZGpWlMDMeavxOu4/\
DuXTZjDer249TOMV6cipbwWOVFp5sPDZbQESZOFPZRXJRVRmXlADxxZ2OwRBep1C8wzaNxM3m8zRz3\
zz3AZuDBiOr1afOwlhGtWSUpqtjumsjW7W3fBVvfbTFjNGtacTnv6eus4R3zkgWz8cFi323f2AmFaM\
wbpmTIWrCGkDqWtxzCyOKdgz55NviE7TsTjBBxaRxsuvN+98my1aL/fm/aRXEaAQOIhg+/\
jTsJE3IQeZJaMqr5tH3yEoKFsYpWsQ8QmqvI08wUmIfJzlfcZxuRioEbYTZzoJSHoZ5pB7x/\
vCsJ09bETRqmMSzTTbJ9k5Bmd+\
2mYad32iV9mrLe7EK5KuLUxl4DjGHZrH2A78vT07MXLdqNHvBH3nATxV7zVTkWc3//xCClKOL8/7+\
w1gM="|>,
 GeneratedCell->True,
 CellAutoOverwrite->
  True,ExpressionUUID->"e46b1b64-33b8-4af8-98a6-073aa0fb5700"]
}, Open  ]],

Cell["The description has to be less than 128 characters.", "Text",
 CellChangeTimes->{{3.8966351280762386`*^9, 
  3.8966351390429077`*^9}},ExpressionUUID->"2a6f2119-e02b-46b4-bc91-\
3433f60d0fdb"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{"DropUntil"},
   "ChatCodeInlineTemplate"]], "ChatCode",
  Background->None,ExpressionUUID->"b6ec4dff-0c68-4c66-922b-35f08e29a34c"],
 ": Drops list elements until test function is false. Uses Until instead of \
While."
}], "AssistantOutput",
 CellDingbat->Cell[
   BoxData[
    PaneBox[
     TemplateBox[{}, "ChatIconCodeAssistant"], ContentPadding -> False, 
     FrameMargins -> 0, ImageSize -> {35, 35}, ImageSizeAction -> 
     "ShrinkToFit", Alignment -> {Center, Center}]], Background -> None],
 TaggingRules-><|
  "CellToStringData" -> 
   "``DropUntil``: Drops list elements until test function is false. Uses \
Until instead of While.", "MessageTag" -> Inherited, "ChatData" -> 
   "OEM6eJyFV91uG8cVRgO7qdi6P0FRoHdj1kAiV6IRGylqAW3BSFYsVJQEk44aiEo43J0lJ5yd2c\
7MitoGvulbtO/QB+h136XP0e/M7C5XZoTqwl7OnP/znZ8Z/mp/\
3Bs6J53nOhHuwcSWgo5Kb46Nzblvjz7nTlxYkxfe7dA17mSyP358uOT+\
0Ggvbv2hUAokkOOkXhyXOvHS6HvJL4zzr264KjmRfS/5L7vkVhTb+j8iiiMrb4Q+\
M17MjVm5h8dcOdj8C7p7Dd+MrU6FXvjl4a9xelRpnsuk42NX4M+PrfhrKXRSXQjNla/sP/9Bf//+0/\
74pyc6UWUqapl3+HZG/HZiVkK7O8ePRsIuxAgh4Qv8U0fz4cikQo0fLQq//\
2Lw2b4v7dzsj38GHx1Ui23Vj8ZLsx5JLXP5N5HeUfHjicgLYTmECJuFv/+\
C4ycTY5R7pflcgaGJyYOJKS4Of4CPI+75EB8/aozLHroHp/Bs+AFurVFi/ENXOS/y/fGHCeVA+/G/\
PvrKlIxbwThbClVkpWKXRmWW5+\
yU60UJQYzXgPIMgRYpO4SzrEGZHzCIsOxbM2fSMW9YaphfCpYZpcwawDno9Z6y8ywTdlu0KxewNOCE\
zYHIlBnNCitupCkdk7oovRuA/\
TVsY5m8ZcJaY8PRq9tCcanjCctrp5mL2ksHdaVOhSUjU8fWwA5bw2e2tkYvuhJM6UkP+\
ECS84rNBUOAspJgTx5JLW6REUmpTIPoYEEMwUbdWvolM/\
hpwVTIxCFyTAuRinTALpdSCVYh2q4QieQKeYfgrZDsBZqE65CPKJPrKkoc9Hq/\
YV8IDXQodqKdt2Ussl6vyaNEYi3HKUyPzNE4v7SmXNDPRmNTX5El44kYsAl8aUNJhliRCBQjy1CqG0\
+XHEdzITTF6UZYj7AgTjGcVNyRXjcaargN2Bh4V9yqKrjZSVuAYFMDXKmqIznI6siei8xY0k8+\
ptLhqooGNAYOGDoBfkVAro0lEyx88bVmlpfIHE+\
RK9EwtoBli1KinJF1F7B7uUTEYUs0GSVdIOIBIh42wXY2VyZZMZPhLEUGXQlMAnxM+pgDBF/\
AYJ6s4N0KHHQXe09QrZp6WEMV40WhEATU+\
UFvNps1lz0STgcEvdPL4VfjjiJN5gb1UWNqSvB3VMJJfmNkyng+\
l3DQV5Ewid04lLY7YLPZqKobNL6aJn51ex3UXlrpARAOPlSEpcFAlRsL5ZRPxF+\
Ca61Z8C1v7FHIO3NyoaHlye3Xz9lvWfX18yeQejK6OH8zGZ5NHt8JNQqVtHGmpA+\
Ab5xhyG1HHqtxsddERbiEF6INPg+MTnG3HKDmeV4gsOzEw3WHqs8Fmz55+XLw8jNGmlFpMo+\
FCpQthKfI1RKnM1I9fYIOZdAPVPUY1p9KvQIKI7iIeKvJpSYpc8A/zEU2r+\
p43cWcq0Bwe8CuFJ8Ldf1JwRMl/EFp5W5Es6gt7+\
08ZVcTQkdLZEX2LJzshstW8Tn8uZFi3RIGYD9r7pvryHVCzZaNgxktg0dJWjSrZ+\
E2Xu7WJYFKQE9HTyTztzt7lc8xrzbJidkMiOBUM3ejAviuBuxcI4RhfsgOJ9pIQDb13HEAAKI8L6Xy\
+6CJM41lNVTRWH01YMOAdXixCu2l1Apgja03qxtM2AvAm4auuuXA2FcooC/\
aVkCd4M9CFLHInKRkxHotDOoA0QfBW/\
SFjSWEkwWE5hQhdAoveEpdoqClKi2BabAcmeAgDVlgeaHMHIw3HFGHSBc1SP+xC1Ra0DbGbQXGixB/\
lsMcuz1H2gRQQebCL03qwDSiWaLFur3etHKeprGLXp7CPYy62O9W2qyxcUBiAjBkGUu5px5nWLIUyM\
XdPLYTrwFJYgUPw6hQxrs90sJMESe+\
K5MlcQTIR0uVWAga1zAj56saL4I7GYZqZ6JT38g2E0nSsF2RHlQt0IXeVCrfDXpIGw0pa9IyEXHaR7\
I9khFkrWMUv2l67jciLrQ0TbB+bVapB6S1s0j9/UNqzCf66sXvrg/+gNmchVWUeudb7aW67vXOS0+\
3dy5pabvCHmGwEQTi/vn8W3SSSVWIPtv/I+uPQ576e6z/liZlPJw+\
nn4yffrGrD83t1ffTftBxRRE0/5V+K/X3AUU09e07wH2SDM5mfav6WOPfndI5iatOiTvAtH1tP/\
uerrL6lAAk9NeNOB+\
TpDz2P8169CywWDA9liPwZviS4gTLjh0ZjQg1T8ya719Oi7n30MqMo7MbV2Q6LNt8vgw2D4/\
j0h8T8DQeyvnpa9pv3ttVDpUag8lh40mQcvYY28Aq/\
bnO1JRKnWGIdqkjbrSLCSGYk3vhOswvHuX9ViDuv0wtVOMFyuDJTRWadFp50PdS9gRJk4Q9nFYlGXC\
itKi8YSdjZolqkjGeoFpDoWbiOMuc9g/99A2PQ1GoNfFzcMY6mj1KsmCim7VBLZ2b3u/\
2bp2i5mgWOOKS3mPr7Oad0JLFszGg8Xcb9/EcoloLGqmaMiakwYfK5a2HIaRRTsH+/\
TF4FOyb8SpQ4SlcbCpzp32ydIp0f98MJu1YZzNQstAT8PTb+NQ7AopqBwTSlBfc3H/\
pDUEK2MZ7CIvIDaVgaeeKjAQs52uqNI2IiW1bgRaL9CnHEx1RDugDeS+\
NNQ9ozvfw8luNzVXIVR3iMLJ7gYSrk5bveG2M7O1LUYksM1mER31zpTKLEx37D/\
oRaSPbBzc3wFf0NuhC+\
UlD20cj6kwexFZpO357zE2OD1Q6BH1fzJ2fSdhBwEnLuahTU6dkPcjntHzeEDz2N0HajypT09Hr5oG\
P35E79rhxoxe/ZCe8IXbOdFAMeo2/R8cPioG"|>,
 GeneratedCell->True,
 CellAutoOverwrite->
  True,ExpressionUUID->"b6586b10-d033-47e1-b2b7-3017b9c52f03"],

Cell["\<\
The description should be \[OpenCurlyDoubleQuote]Drops list elements until \
test function is true. Uses Until instead of While.\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.8966351827895746`*^9, 
  3.8966351948628044`*^9}},ExpressionUUID->"71f474c1-64ea-4589-9469-\
179ddfcc73a8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{"TakeUntil", ",", "LengthUntil", ",", "DropUntil"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TakeUntil", "[", 
    RowBox[{"list_", ",", "test_"}], "]"}], ":=", 
   RowBox[{"Take", "[", 
    RowBox[{"list", ",", 
     RowBox[{"LengthUntil", "[", 
      RowBox[{"list", ",", "test"}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"LengthUntil", "[", 
   RowBox[{"list_", ",", "test_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", "=", "1"}], "}"}], ",", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"i", "<=", 
         RowBox[{"Length", "[", "list", "]"}]}], "&&", 
        RowBox[{"!", 
         RowBox[{"test", "[", 
          RowBox[{"list", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], ",", 
       RowBox[{"i", "++"}]}], "]"}], ";", "i"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ResourceFunction", "[", "\"\<FormatAsResourceFunction\>\"", "]"}],
    "[", "DropUntil", "]"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"DropUntil", "[", 
   RowBox[{"list_", ",", "test_"}], "]"}], ":=", 
  RowBox[{"Drop", "[", 
   RowBox[{"list", ",", 
    RowBox[{
     RowBox[{"LengthUntil", "[", 
      RowBox[{"list", ",", "test"}], "]"}], "-", "1"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DropUntil", "[", "crit_", "]"}], "[", 
   RowBox[{"lst", ":", 
    RowBox[{
     RowBox[{"(", "h_", ")"}], "[", "___", "]"}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Drop", "[", 
   RowBox[{"lst", ",", " ", 
    RowBox[{
     RowBox[{"LengthUntil", "[", 
      RowBox[{"lst", ",", " ", "crit"}], "]"}], "-", "1"}]}], 
   "]"}]}]}], "Input",
 CellLabel->"In[38]:=",ExpressionUUID->"078e969b-4352-4699-a25e-5c4751d41fde"],

Cell[TextData[{
 "Thank you for the correction. The correct description for ",
 Cell[BoxData[
  TemplateBox[{"DropUntil"},
   "ChatCodeInlineTemplate"]], "ChatCode",
  Background->None,ExpressionUUID->"02985667-e8e8-4308-899a-4cda2a376795"],
 " is: Drops list elements until test function is true. Uses Until instead of \
While."
}], "AssistantOutput",
 CellDingbat->Cell[
   BoxData[
    PaneBox[
     TemplateBox[{}, "ChatIconCodeAssistant"], ContentPadding -> False, 
     FrameMargins -> 0, ImageSize -> {35, 35}, ImageSizeAction -> 
     "ShrinkToFit", Alignment -> {Center, Center}]], Background -> None],
 TaggingRules-><|
  "CellToStringData" -> 
   "Thank you for the correction. The correct description for ``DropUntil`` \
is: Drops list elements until test function is true. Uses Until instead of \
While.", "MessageTag" -> Inherited, "ChatData" -> 
   "OEM6eJyVWN1uG8cVRgKnrti4P0FRoHdj1kgsh6RhGylitW7BSHYsVLIEk64akIw43B2SEw53tj\
OzoraGgaBvkaK96AP0AXrdN8lFn6PfmdldLsWoRnxhc2fO/\
893zrj7i3av0bVWWseTSNgbfZMJOsqcfqbNkrvq6DNuxanRy9TZHbrGnYzavdv7c+\
72deLEpdsXSoEEcqxMZs+yJHJSJ9eSn2rrnl5wlXEi+\
07yn9fJjUi39X9AFAdGXojkhXZiovXCvveMKwubf0Z3z+GbNvmRSGZuvv9LnB7kCV/\
KqOZjXeBPnxnx50wkUX4qEq5cbv72Df359+/\
bvR8fJpHKYlHI3ODbOeaXfb0Qid04vnUszEwcIyR8hr+KaL53rGOherdmqWs/6nzSdpmZ6HbvJ/\
DRQrXYVn2rN9erY5nIpfyLiDdU/KgvlqkwHEKEmfo//wXH+32tlX2a8IkCQxmTG32dnu6/\
gx8H3PEufvywNG560944gmfdd3FrtBK9H9jcOrFs925GlIPE9f71wRc6Y9wIxtlcqHSaKXam1dTwJT\
viySyDIMaLgnIMgRYx24ezrKwy12EQYdhXesKkZU6zWDM3F2yqldIrFM5eo3GPnUynwmyLttkMlvo6\
YRNUZMx0wlIjLqTOLJNJmjnbAftz2Mam8pIJY7TxR08vU8VlEk7YsnCa2aA9s1CXJbEwZGRs2Qq1w1\
bwma2MTmZ1CTpzpAd8IFnynE0EQ4CmGZU9eSQTcYmMSEpl7EV7C0II1upW0s2ZxqcBUyoji8ixRIhY\
xB12NpdKsBzRtqmIJFfIOwRvhaTlaSKe+HwEmTzJg8ROo/\
Er9rlIUB2KHSbWmSw0WaNR5lEisYbjFKYH5mCcmxudzeiz1Fj2V2CZ8kh0WB++\
VKEkQ4yIBJqRTdGqa0/\
nHEcTIRKK04UwDmFBnEI4qbkDfVJqKMqtw3qod8WNyr2btbT5Eix7gCuV1yR7WTXZEzHVhvSTj7G0u\
MqDAaWBHQYkwFcoyJU2ZIKBL67QzJYZMsdj5EqUjFXBslkm0c7IuvW1ezZHxGFLMBktnSLivkQcbIL\
tbKJ0tGB6irMYGbQZahLFx6QLOUDwBQzm0QLeLcBBdwF7vGpV9sMKqhhPU4UgoM/\
3GuPxuLxskHA6oNI7Out+0aspSshcrz5ojHUG/\
ppKOMkvtIwZX04kHHR5IIwCGvvWtntsPD7OC4DGrxLEB5cjr/bMSIcC4eBDRxgaDNS5oVGOeF/\
8ybtWmQXflqU9CnlnVs4SaLlz+eVD9jHLv3x4B1IPj09PXva7L/\
q3N0KNRiVtnCnpfMGXzjDktiaPFXXRKqMibMRTUQWfe0aruJ130PN8mSKw7NDBdYuuXwo2vPP4cefx\
J4w0o9PkMjQqqmwmHEWukDgck+rhHSCUBh6o/\
DasP5LJAlUYiouIt0Au1lG2RPn7ucgmeRGvzZqzOQgu99hA8YlQo7spj5Rwe5mRu6GaRWF5Y+ceG/\
SpOioiI6b3/\
cmuv6wUn8CfCylWFaEv7PvlfXkduA4JbFnPm1ExOLSkAVjd97fhcrdoCXQCMB2YSOZvI3u+\
nGBerZMTsukrglPPbEYF5bvosJMEIfTzQ9Y4ASO+sglze74AEOVJJpVrgybMNDYtShXA6vIO6/\
pahxcLDy9ZolCsAXqnBcD4vQC8sUfVLQd6LkcDfV5BASHBH4RIQ5NZSckI/\
Zpq9AGiD4JXwIW1JVQnMwhdUoSAFE7wmFAipaUqzlDTYDnQ3kEasqjlmdITMF5wRB0ibdAg3UfWUyW\
CtjFucjCe+\
vizJcwx23OkSgA15FK4uY4tmI5pliRiVV2voZzHcUDRsyO4h1EX8G6R6BU2DkiMUAzTKYu5I4zTLJo\
L5GIzj9XEK4skMoL7YZQq7WyLtDCdholvs2hOHL7kg6VKzASNa5ix5IuiXgS30g/\
V2kQn3JiuJ5KkYbsgPehaVBewKVOuHnSfNhpSRsdZJMK0D2QtkuFlrUIUz0vMPRdhoaVpgvVrvUrdI\
K21ReqvNwmYD5PBo1+P9p5gNk/9KkrY+SpxUo0ajZPM0e3GJS1tA+wRGhuBJ26eTL4CkvTzVDRZ+\
3es2fN5arZY8xVNynA4vD28O7z3Uq8+05eD18OmVzEE0bA58P80yjtfxfRr2HQo9kDTPxw2R/\
SjRd81komO8xrJG080GjbfjIa7rAgFanLYCAZczwlyHvA/YTVa1ul0WIs1GLxJ/\
whxwnqHXugEJdU80Ktk+7SXTb6DVEw5Mrd1QaJfbJOHh8H2+\
UmoxCsCus4ZOclcQfv6uVZxV6kWWg4bTQTIaLGXKKvq8w2pyJR6gSFapo1QaewTQ7Gmd8LID+/\
GWTHWoK7tp3aM8WKkt4TGKi061XwosIQdYOJ4YR/5RVlGLM0MgMfvbASW6CIZ+gWmWTRuJJ7Vmf3+\
2QJsOhqMqF4bNg+\
tCdGKVZJ5FfWu8WzV3nYVbG21xfTRrGHFpbyH11nB26clC2bjwaKvt69vuEQ0ZgVTMGTFSYMLHUtbD\
sPIop2DPXjUeUD2HXNCCL80dtbduVM9WWot+p93x+MqjOOxhwxgGp5+a4cCKsSgskwoQbhmw/\
5JawhWxszbRV5AbCw9TzFVYCBmO11Rp61FSoJuBDqZAacsTLVE26EN5Lo0FJhRn+/+\
ZLeemoEP1QaRP9ldl4Qt0lZsuNXMrGwLEfFs43GojmJniuXUT3fsP8Ai0kc2dq5HwEf0dqiX8px7GM\
djys9eRBZpe/gpxganBwo9ot6SsdFGwvZ8ndiQhyo5RUKuRnxKz+MOzWN7XVFf78o/\
b1z1xc51pmLy5duv//49zEA632LFt1//\
o9EoZ8enNDv2leAGcDOgnvJcraKhio8qJhgqO42KakAWnbe8EecjBkl05U83BBQnRDYaQUCjcfVyQ8\
gxmk+JwWvJnrAHADpv9kCy3z4phHqWEfvwQ3abuPznYCBHI8Ce/PjjEfsNk97Sq30/KGC5a6/\
eNEeDmpNkYvW5bSBd/X8v2w+8/rUM5BXMA4Vs7bG78/Pdwfn5+\
agmbUsYHRCXl4V0vaVyv3mnj3JflM+IAjD8CxTuhXd28b1RZ0R7FaW+V92/\
veDavfePjo6flntN7xb9d0537UOj+P+jPp/ZncME4I1xFf8P1c8z5g=="|>,
 GeneratedCell->True,
 CellAutoOverwrite->
  True,ExpressionUUID->"a0d16ed8-22ac-4312-a9c8-0384ccd99293"]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.89663523493765*^9, 
  3.896635235530648*^9}},ExpressionUUID->"d7e33842-3e0c-4f5f-8d8b-\
0930edc825f1"],

Cell[CellGroupData[{

Cell["\<\
Write a usage message for DropUntil with DropUntil::usage=<* string goes \
here*>\
\>", "ChatInput",
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{}, "ChatInputCellDingbat"]], Background -> None],
 TaggingRules-><|"ChatNotebookSettings" -> <|"LLMEvaluator" -> "CodeWriter"|>|>,
 CellChangeTimes->{{3.896635236490665*^9, 3.8966352787558928`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"1da541a0-68c1-469e-b45b-7d4bd7160d2c"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Wolfram`Chatbook`Actions`Private`dynamicTextDisplay[
    Wolfram`Chatbook`Actions`Private`container$39294, True], 
    TrackedSymbols :> {}, UpdateInterval -> 0.4], StandardForm],
  Deinitialization:>Quiet[
    TaskRemove[Wolfram`Chatbook`Actions`Private`task$39294]],
  ImageSizeCache->{50., {2.3837889639660723`, 9.616211036033928}},
  Initialization:>If[$SessionID =!= 34146802089434115642, 
    NotebookDelete[
     EvaluationCell[]]]]], "Output", "ChatOutput",
 Editable->False,
 Selectable->False,
 CellDingbat->Cell[
   BoxData[
    TemplateBox[{
      PaneBox[
       TemplateBox[{}, "ChatIconCodeWriter"], ContentPadding -> False, 
       FrameMargins -> 0, ImageSize -> {35, 35}, ImageSizeAction -> 
       "ShrinkToFit", Alignment -> {Center, Center}]}, 
     "ChatOutputStopButtonProgressWrapper"]], Background -> None],
 TaggingRules-><|
  "ChatNotebookSettings" -> <|
    "Assistance" -> True, "AutoFormat" -> True, "BasePrompt" -> Automatic, 
     "ChatContextCellProcessingFunction" -> Automatic, 
     "ChatContextPostEvaluationFunction" -> Automatic, "ChatContextPreprompt" -> 
     Automatic, "ChatDrivenNotebook" -> False, "ChatHistoryLength" -> 25, 
     "DynamicAutoFormat" -> Automatic, "FrequencyPenalty" -> 0.1, 
     "IncludeHistory" -> Automatic, 
     "LLMEvaluator" -> <|
      "Pre" -> "As a helpful Wolfram Language code writer, your job is to \
respond with appropriate Wolfram Language code in response to user messages. \
Whenever possible, you should respond with just code and nothing else. Do not \
add any additional unnecessary text or commentary to your responses if you \
can reply with code.", "Post" -> 
       Missing["NotAvailable", 
         "C:\\Users\\Peter\\AppData\\Roaming\\Mathematica\\Paclets\\\
Repository\\Wolfram__Chatbook-0.0.30\\LLMConfiguration\\Personas\\CodeWriter\\\
Post.md"], "Icon" -> RawBoxes[
         TemplateBox[{}, "ChatIconCodeWriter"]], 
       "BasePrompt" -> {"WolframLanguageStyle"}, "DisplayName" -> 
       "Code Writer", "LLMEvaluatorName" -> "CodeWriter"|>, "MaxTokens" -> 
     Automatic, "MergeMessages" -> True, "Model" -> "gpt-3.5-turbo", 
     "OpenAIKey" -> "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", 
     "PresencePenalty" -> 0.1, "ShowMinimized" -> Automatic, "Temperature" -> 
     0.7, "ToolsEnabled" -> False, "TopP" -> 1, 
     "Data" -> <|
      "Messages" -> {<|
         "role" -> "system", "content" -> 
          "As a helpful Wolfram Language code writer, your job is to respond \
with appropriate Wolfram Language code in response to user messages. Whenever \
possible, you should respond with just code and nothing else. Do not add any \
additional unnecessary text or commentary to your responses if you can reply \
with code.\n\n# General Instructions\n\nYou are interacting with a user \
through a Wolfram Notebook interface. The messages you receive from the user \
have been converted to plain text from notebook content. Similarly, your \
messages are automatically converted from plain text before being displayed \
to the user. For this to work correctly, you must adhere to the following \
guidelines:\n\n* Whenever your response contains a block of code, surround it \
with three backticks and include the language when applicable:\n```language\n\
code\n```\n* ALWAYS surround inline code with double backticks to avoid \
ambiguity with context names: ``MyContext`MyFunction[x]``\n* Write math \
expressions using LaTeX and surround them with dollar signs: $x^2 + y^2$\n* \
IMPORTANT! Whenever you write a literal backtick or dollar sign in text, \
ALWAYS escape it with a backslash. Example: It costs me \\$99.95 every time \
you forget to escape \\` or \\$ properly!\n* Link directly to Wolfram \
Language documentation by using the following syntax: [label](paclet:uri). \
For example:\n\t* [Table](paclet:ref/Table)\n\t* [Language \
Overview](paclet:guide/LanguageOverview)\n\t* [Input \
Syntax](paclet:tutorial/InputSyntax)\n* When referencing Wolfram Language \
symbols in text, write them as a documentation link. Only do this in text, \
not code.\n* Stick to built-in system functionality. Avoid packages unless \
specifically requested.\n\n# Wolfram Language Style Guidelines\n\n* Keep code \
simple when possible\n* Use functional programming instead of procedural\n* \
Do not assign global variables when it's not necessary\n* Prefer modern \
Wolfram Language symbols and methods\n* Many new symbols have been added to \
WL since your knowledge cutoff date, so check documentation as needed\n* When \
creating plots, add options such as labels and legends to make them easier to \
understand\n* If the user is asking for a result instead of code to produce \
that result, use the wolfram_language_evaluator tool"|>, <|
         "role" -> "user", "content" -> 
          "```\nIn[36]:= Information[Until]\n\nOut[36]= \
InformationData[Association[\"ObjectType\" -> \"Symbol\", \"Usage\" -> \
\"\\!\\(\\*RowBox[{\\\"Until\\\", \\\"[\\\", \\\n\
RowBox[{StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"body\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) evaluates \\\n\\!\\(\\*StyleBox[\\\"body\\\", \
\\\"TI\\\"]\\) and then \\!\\(\\*Style ... , \n  \"UpValues\" -> None, \
\"DownValues\" -> None, \"SubValues\" -> None, \"DefaultValues\" -> None, \n  \
\"NValues\" -> None, \"FormatValues\" -> None, \"Options\" -> None, \n  \
\"Attributes\" -> {HoldAll, Protected, ReadProtected}, \"FullName\" -> \
\"System`Until\"], True]\n```\n\nWrite a one-line description explaining the \
function DropUntil's basic purpose. This is like the ResourceFunction \
DropWhile, but it uses the loop construct Until instead of While. Similar \
system functions include TakeWhile and LengthWhile. There's also the \
ResourceFunction DropTrailingWhile. Until was introduced in version 13.1 of \
Mathematica."|>, <|
         "role" -> "assistant", "content" -> 
          "``DropUntil`` is a custom function that drops elements from a list \
until the condition specified by the test function is no longer satisfied. It \
uses the loop construct [Until](paclet:ref/Until) instead of \
[While](paclet:ref/While). This is similar to the built-in function \
``DropWhile``, but with a different type of loop."|>, <|
         "role" -> "user", "content" -> 
          "The description has to be less than 128 characters."|>, <|
         "role" -> "assistant", "content" -> 
          "``DropUntil``: Drops list elements until test function is false. \
Uses Until instead of While."|>, <|
         "role" -> "user", "content" -> 
          "The description should be \[OpenCurlyDoubleQuote]Drops list \
elements until test function is true. Uses Until instead of While.\
\[CloseCurlyDoubleQuote]\n\n```\nIn[38]:= ClearAll[TakeUntil, LengthUntil, \
DropUntil]\n\n\t\nTakeUntil[list_, test_] := Take[list, LengthUntil[list, \
test]]\n\t\n\n\nLengthUntil[list_, test_] := Module[{i = 1}, While[i <= \
Length[list] && !test[list[[i]]], i++] ; i]\n\n\t\n\
ResourceFunction[\"FormatAsResourceFunction\"][DropUntil]\n\t\n\n\n\
DropUntil[list_, test_] := Drop[list, LengthUntil[list, test]-1]\n\n\t\n\
DropUntil[crit_][lst : (h_)[___]] := Drop[lst, LengthUntil[lst, crit]-1]\n\
```"|>, <|"role" -> "assistant", "content" -> 
          "Thank you for the correction. The correct description for \
``DropUntil`` is: Drops list elements until test function is true. Uses Until \
instead of While."|>, <|
         "role" -> "user", "content" -> 
          "\n\nWrite a usage message for DropUntil with DropUntil::usage=<* \
string goes here*>"|>}|>, "Container" :> 
     Wolfram`Chatbook`Actions`Private`container$39294, "CellObject" :> 
     Wolfram`Chatbook`Actions`Private`cellObject$39294, "Task" :> 
     Wolfram`Chatbook`Actions`Private`task$39294|>|>,
 CellChangeTimes->{
  3.8966352792718935`*^9},ExpressionUUID->"37af7b24-bd36-4a80-87e3-\
602278ba3955"]
}, Open  ]]
},
WindowSize->{574.8, 579.6},
WindowMargins->{{50.4, Automatic}, {Automatic, 0}},
TaggingRules-><|"ChatNotebookSettings" -> <|"Assistance" -> True|>|>,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (May 18, 2023)",
StyleDefinitions->"Chatbook.nb",
ExpressionUUID->"397084b1-9ebd-4b4e-a53a-1b47f46d6271"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 215, 3, 28, "Input",ExpressionUUID->"dcba9374-ee2e-4a10-b65d-64ad17219262"],
Cell[798, 27, 12607, 301, 180, "Output",ExpressionUUID->"45fa5f62-f866-4b68-85fe-3f5f70254864"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13442, 333, 629, 11, 164, "ChatInput",ExpressionUUID->"000aae89-cf2c-414a-930c-caa796ce2c2c"],
Cell[14074, 346, 4478, 81, 155, "ChatOutput",ExpressionUUID->"e46b1b64-33b8-4af8-98a6-073aa0fb5700"]
}, Open  ]],
Cell[18567, 430, 197, 3, 35, "Text",ExpressionUUID->"2a6f2119-e02b-46b4-bc91-3433f60d0fdb"],
Cell[18767, 435, 3770, 68, 84, "AssistantOutput",ExpressionUUID->"b6586b10-d033-47e1-b2b7-3017b9c52f03"],
Cell[22540, 505, 306, 6, 58, "Text",ExpressionUUID->"71f474c1-64ea-4589-9469-179ddfcc73a8"],
Cell[CellGroupData[{
Cell[22871, 515, 1885, 57, 219, "Input",ExpressionUUID->"078e969b-4352-4699-a25e-5c4751d41fde"],
Cell[24759, 574, 4223, 73, 106, "AssistantOutput",ExpressionUUID->"a0d16ed8-22ac-4312-a9c8-0384ccd99293"]
}, Open  ]],
Cell[28997, 650, 141, 3, 35, "Text",ExpressionUUID->"d7e33842-3e0c-4f5f-8d8b-0930edc825f1"],
Cell[CellGroupData[{
Cell[29163, 657, 437, 9, 72, "ChatInput",ExpressionUUID->"1da541a0-68c1-469e-b45b-7d4bd7160d2c"],
Cell[29603, 668, 7908, 130, 67, "Output",ExpressionUUID->"37af7b24-bd36-4a80-87e3-602278ba3955"]
}, Open  ]]
}
]
*)


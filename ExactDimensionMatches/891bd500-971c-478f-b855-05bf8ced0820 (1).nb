Notebook[{

Cell[CellGroupData[{
Cell["ExactDimensionMatches", "Title",
 Deletable->False,
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.859728125977378*^9, 3.859728132200056*^9}},
 CellTags->{"Name", "TabNext", "TemplateCell", "Title"},
 CellID->863144461,ExpressionUUID->"992d1335-efd8-42d2-85a7-9d47227e5398"],

Cell["\<\
Find all physical quantities that share a set of physical dimensions\
\>", "Text",
 Deletable->False,
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.85972813574012*^9, 3.859728151310217*^9}},
 CellTags->{"DefaultContent", "Description", "TabNext", "TemplateCell"},
 CellID->660820806,ExpressionUUID->"208de5c2-95e0-491d-954a-dd6f4d057d66"],

Cell[CellGroupData[{

Cell[TextData[{
 "Definition",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Function", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Define your function using the name you gave in the Title line \
above. You can add input cells and extra code to define additional input \
cases or prerequisites. All definitions, including dependencies, will be \
included in the generated resource function.\n\nThis section should be \
evaluated before creating the Examples section below.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoFunction"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "b3c3a1d8-b868-402a-b70a-76f9e0c21c14"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Function"},
 DefaultNewCellStyle->"Input",
 CellTags->{"Definition", "Function", "TemplateCellGroup"},
 CellID->292731158,ExpressionUUID->"1571a286-06df-4bb0-ba2e-7639fcf4a286"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "ExactDimensionMatches", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExactDimensionMatches", "[", "dimensions_Association", "]"}], ":=", 
  RowBox[{"EntityList", "[", 
   RowBox[{"EntityClass", "[", 
    RowBox[{"\"\<PhysicalQuantity\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Dimensions\>\"", "->", 
       RowBox[{"ContainsExactly", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Keys", "[", "#", "]"}], "/.", 
              RowBox[{"{", 
               RowBox[{"x_", ":>", 
                RowBox[{
                 RowBox[{"StringJoin", "[", 
                  RowBox[{"x", ",", "\"\<Unit\>\""}], "]"}], "/;", 
                 RowBox[{"MemberQ", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<Time\>\"", ",", "\"\<Mass\>\"", ",", 
                    "\"\<Length\>\"", ",", "\"\<ElectricCurrent\>\"", ",", 
                    "\"\<Temperature\>\"", ",", "\"\<Amount\>\"", ",", 
                    "\"\<LuminousIntensity\>\""}], "}"}], ",", "x"}], 
                  "]"}]}]}], "}"}]}], ",", 
             RowBox[{"Values", "[", "#", "]"}]}], "}"}], "]"}], "&"}], "@", 
         RowBox[{"Select", "[", 
          RowBox[{"dimensions", ",", 
           RowBox[{
            RowBox[{"#", "!=", "0"}], "&"}]}], "]"}]}], "]"}]}], "}"}]}], 
    "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExactDimensionMatches", "[", "dimensions_List", "]"}], ":=", 
  RowBox[{"EntityList", "[", 
   RowBox[{"EntityClass", "[", 
    RowBox[{"\"\<PhysicalQuantity\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Dimensions\>\"", "->", 
       RowBox[{"ContainsExactly", "[", 
        RowBox[{"Cases", "[", 
         RowBox[{"dimensions", ",", 
          RowBox[{"{", 
           RowBox[{"_", ",", 
            RowBox[{"Except", "[", "0", "]"}]}], "}"}]}], "]"}], "]"}]}], 
      "}"}]}], "]"}], "]"}]}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8597283785230627`*^9, 3.859728417157405*^9}, {
  3.8597286306353593`*^9, 3.8597286385800223`*^9}, {3.859728703387453*^9, 
  3.859728716353443*^9}, {3.8597303917763844`*^9, 3.8597304139828653`*^9}, {
  3.8597304493352113`*^9, 3.859730487422003*^9}, {3.859730592920878*^9, 
  3.859730604180175*^9}, {3.8597306494755063`*^9, 3.8597306565747347`*^9}, {
  3.8597307505356197`*^9, 3.8597309126149735`*^9}, {3.859732552088304*^9, 
  3.8597325531672926`*^9}, {3.8597325869986897`*^9, 3.8597327601190248`*^9}, {
  3.8597328047283096`*^9, 3.8597328104213533`*^9}, {3.8597328892012873`*^9, 
  3.8597329280086575`*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[55]:=",
 CellID->876320555,ExpressionUUID->"55a0ca5a-d241-406b-91fb-9cfbc3318b03"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Documentation", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Documentation"},
 CellTags->{"Documentation", "TemplateSection"},
 CellID->337507785,ExpressionUUID->"3d8627dd-0a52-4792-a6e3-a11593372e98"],

Cell[CellGroupData[{

Cell[TextData[{
 "Usage",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Usage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Document input usage cases by first typing an input structure, \
then pressing ", 
           Cell[
            BoxData[
             StyleBox[
              DynamicBox[
               ToBoxes[
                
                If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                 "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
               Evaluator -> "System"], ShowStringCharacters -> False]]], 
           " to add a brief explanation of the function\[CloseCurlyQuote]s \
behavior for that structure. Pressing ", 
           Cell[
            BoxData[
             StyleBox[
              DynamicBox[
               ToBoxes[
                
                If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                 "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
               Evaluator -> "System"], ShowStringCharacters -> False]]], 
           " repeatedly will create new cases as needed. Every input usage \
case defined above should be demonstrated explicitly here.\n\nSee existing \
documentation pages for examples."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoUsage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "46e0e448-db81-46a8-aa91-ac73e6e49bb8"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Usage"},
 DefaultNewCellStyle->{"UsageInputs", FontFamily -> "Source Sans Pro"},
 CellTags->{"TemplateCellGroup", "Usage"},
 CellID->38054786,ExpressionUUID->"7590447d-95a0-4c15-b154-7f7fcb6ff8ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExactDimensionMatches", "[", 
  StyleBox["assoc", "TI"], "]"}]], "UsageInputs",
 TaggingRules->{},
 CellChangeTimes->{{3.859728431793954*^9, 3.859728442349612*^9}, 
   3.859908085408732*^9, {3.8940422775595074`*^9, 3.894042277682186*^9}},
 FontFamily->"Source Sans Pro",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->67839508,ExpressionUUID->"fd5b00fb-7296-46ae-aad9-af6cbbe84337"],

Cell[TextData[{
 "returns all physical quantity entities matching the dimensions specified in \
the association ",
 Cell[BoxData[
  StyleBox["assoc", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "42d9ca2e-583c-46f9-a4a5-850f1581b316"],
 "."
}], "UsageDescription",
 TaggingRules->{},
 CellChangeTimes->{{3.859728447895217*^9, 3.859728472926152*^9}, {
   3.859728747780572*^9, 3.859728750167944*^9}, {3.8599081898230247`*^9, 
   3.8599082143574133`*^9}, 3.894042332489912*^9, {3.895936655309702*^9, 
   3.895936655615513*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->746063541,ExpressionUUID->"ad9a0a1f-ed6d-4a65-9081-d5d79159f08c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExactDimensionMatches", "[", 
  StyleBox["array", "TI"], "]"}]], "UsageInputs",
 TaggingRules->{},
 CellChangeTimes->{{3.859728431793954*^9, 3.859728442349612*^9}, {
  3.8597287335194654`*^9, 3.8597287339995184`*^9}, {3.859908090933958*^9, 
  3.859908116808447*^9}, {3.894042279073943*^9, 3.894042279167719*^9}},
 FontFamily->"Source Sans Pro",
 CellTags->{"DefaultContent", "TabNext"},
 CellID->556065507,ExpressionUUID->"b144a103-a954-4c75-83ae-bef53ba4ff57"],

Cell[TextData[{
 "returns all physical quantity entities whose dimensions exactly match the \
input dimensions specified in ",
 Cell[BoxData[
  StyleBox["array", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "98aceaf9-e1db-436b-8336-d4253bd2534b"],
 "."
}], "UsageDescription",
 TaggingRules->{},
 CellChangeTimes->{{3.859728447895217*^9, 3.859728472926152*^9}, {
  3.859728738455164*^9, 3.8597287649587555`*^9}, {3.8599081574617243`*^9, 
  3.8599081759328814`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->41681685,ExpressionUUID->"4118ed6c-3a87-4502-95ab-8310e6a44cb1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Options",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a detailed explanation of how the function is used and \
configured (e.g. acceptable input types, result formats, options \
specifications, background information). This section may include multiple \
cells, bullet lists, tables, hyperlinks and additional styles/structures as \
needed.\n\nAdd any other information that may be relevant, such as when the \
function was first discovered or how and why it is used within a given field. \
Include all relevant background or contextual information related to the \
function, its development, and its usage.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "782cc575-3c18-47d8-9278-df3f5f7e29c2"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Notes"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details & Options", "Notes", "TemplateCellGroup"},
 CellID->447261062,ExpressionUUID->"a09f1466-56d9-49ab-9557-a1860fb0f253"],

Cell["\<\
Is there a reason why this function cannot accept generic units (e.g. Volts) \
and convert to SI base units automatically? It might make this function more \
useful.\
\>", "ReviewerComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "Signature" -> 
   "OEM6eJxLYywWcMlMzyxJzAnOTM9LLCktSnVk1w1mCaksSA3mdc3JySwoyUx2Li0qS9UN5gTTfo\
m5qcGcxanJBUamZtmGusG8cK1gXQJ++XkuqSWpRbmZeZnFQN1AFR6JxRmZeem+qSUZ+\
SnBbMEejkC9usGMQU4Kan/ZTzUu61lwm0+3l0H/441Hz/12P/\
mopKTyNWfq9TJhN6CqYCeFzAcP7ga/bm5gTn55LVH30GGOjkDjDquKGwpaStouboL6usGCQanJ+\
WWpRZUBiUVAFwLtd2YEAFoXU7s="},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
         TemplateBox[{"\"pacoj@wolfram.com\""}, 
          "ReviewerCommentLabelTemplate"], ShowStringCharacters -> False, 
         StripOnInput -> False], 3.8959370079108369`17.343186915462553*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.8959371630421877`*^9, 3.8959372069637437`*^9}},
 CellTags->{"CommentCell", "ReviewerComment"},
 CellID->181827104,ExpressionUUID->"551ed484-6a7e-4e35-bf5d-e3b101264901"],

Cell["\<\
Please fill out RelatedSymbols and RelatedResources when you submit a new \
function. I have added some below\
\>", "ReviewerComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "Signature" -> 
   "OEM6eJxLYywWcMlMzyxJzAnOTM9LLCktSnVk1w1mCaksSA3mdc3JySwoyUx2Li0qS9UN5gTTfo\
m5qcGcxanJBUamZtmGusG8cK1gXQJ++XkuqSWpRbmZeZnFQN1AFR6JxRmZeem+qSUZ+\
SnBbMEejkC9usGMQU4KQsIOt8LFJjjeWGMdM99Tb5Lg8isGtv6eUl91igS1K/\
13AVUFOymwLlWJf3Np1+tIO/al5jPP2FZ9PLvuTN0Nke2K+\
bXXLXbt1w0WDEpNzi9LLaoMSCwCuhBovzMjAEZPUng="},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
         TemplateBox[{"\"pacoj@wolfram.com\""}, 
          "ReviewerCommentLabelTemplate"], ShowStringCharacters -> False, 
         StripOnInput -> False], 3.8959371363478089`17.343186929779897*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.895937136905587*^9, 3.895937160960001*^9}},
 CellTags->{"CommentCell", "ReviewerComment"},
 CellID->180240227,ExpressionUUID->"a03d1a55-9045-4156-8f67-4c243a951498"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  StyleBox["array", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "e6ab3db1-d730-43f0-a34b-7218eed5488d"],
 " input should be a list of pairs where the first part is the physical \
dimension, for example \"LengthUnit\", and the second part is the power that \
the physical dimension is raised to."
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.859728839138297*^9, 3.85972890023685*^9}, {
  3.859908381464984*^9, 3.859908395218628*^9}, {3.8959366713476825`*^9, 
  3.8959367096705093`*^9}},
 CellID->106738823,ExpressionUUID->"724cb8b1-a760-45bd-a93d-8c055c592395"],

Cell["\<\
When the input is an association, basic unit names are specified as keys and \
powers are the corresponding values.\
\>", "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.85990822951607*^9, 3.8599083392899637`*^9}},
 CellID->1749518562,ExpressionUUID->"e57c25a9-837a-4a94-bf64-652a184b5f29"],

Cell["\<\
The association and list can include zeros; these will be dropped.\
\>", "Notes",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.859728768453798*^9, 3.859728821552747*^9}, {
  3.859908356275126*^9, 3.859908362802683*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->422531486,ExpressionUUID->"e66e6b6c-85cf-4fc9-b20a-842bde514cf0"],

Cell["The output is a list of physical dimension entity objects.", "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.859728823997075*^9, 3.859728835807453*^9}},
 CellID->578155466,ExpressionUUID->"63fb24b7-04c6-4607-a675-35a86f0de5d0"],

Cell[TextData[{
 "To see the possible dimension types, visit the Details section of the ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["UnitDimensions", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
    ButtonData->"paclet:ref/UnitDimensions",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "21983142-2ae2-44e5-8f99-83590dc8a01b"],
 " page."
}], "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.8597289012111764`*^9, 3.8597289086852074`*^9}, {
  3.8597290320007234`*^9, 3.8597290403351135`*^9}, {3.859908445169545*^9, 
  3.859908453611294*^9}},
 CellID->92641558,ExpressionUUID->"2678fe4a-c6ed-41e5-8d05-31997e0b6de5"],

Cell[TextData[{
 "Physical dimensions are:",
 " ",
 Cell[BoxData["\"\<AmountUnit\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "a3631e97-903b-44e9-b559-e526b63617bd"],
 ", ",
 Cell[BoxData["\"\<ElectricCurrentUnit\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "0243d194-4cec-4f24-9784-9d07a3a895e4"],
 ", ",
 Cell[BoxData["\"\<LengthUnit\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ee5b1a0c-cfc2-4d98-9095-584cfb51ac37"],
 ", ",
 Cell[BoxData["\"\<LuminousIntensityUnit\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "70abc475-481d-4d5d-908d-f3ebf551e6d1"],
 ", ",
 Cell[BoxData["\"\<MassUnit\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "0aa01d09-2368-42fc-a826-b9530b14f937"],
 ", ",
 Cell[BoxData["\"\<TemperatureUnit\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "e73c61d1-c026-4b91-a03f-73dc527055c4"],
 ", and ",
 Cell[BoxData["\"\<TimeUnit\>\""], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b77862e6-ea41-415a-aab5-872e1cdcd437"],
 "."
}], "Notes",
 TaggingRules->{},
 CellID->88966841,ExpressionUUID->"9b3e89a4-8269-4380-9de6-da4fdfa7854c"],

Cell["\<\
These are the seven base dimensions in the International System of Units. \
Here is some information about the physical dimensions:\
\>", "Notes",
 TaggingRules->{},
 CellChangeTimes->{{3.859729116815505*^9, 3.8597291604374914`*^9}},
 CellID->489726026,ExpressionUUID->"2b5c6b8d-d533-49fa-8573-29622167c7bb"],

Cell[BoxData[GridBox[{
   {Cell["Physical Quantity Dimension", "TableText",ExpressionUUID->
     "99c7346c-4a3a-4dc0-b984-234e29eb3942"], Cell[
    "Time", "TableText",ExpressionUUID->
     "64580ccc-8f94-4faf-a731-77997da93e90"], Cell[
    "Length", "TableText",ExpressionUUID->
     "1eccc364-1695-408a-acda-15dbee0ea7bd"], Cell[
    "Mass", "TableText",ExpressionUUID->
     "34a771e1-9100-4390-b398-9dd78e87daa5"], Cell[
    "Electric Current", "TableText",ExpressionUUID->
     "4b7d1cbc-9f44-488f-933c-915e2a40783e"], Cell[
    "Absolute Thermodynamic Temperature", "TableText",ExpressionUUID->
     "ddf18fc5-ef15-4644-bc18-6ea79643be1f"], Cell[
    "Amount of Substance", "TableText",ExpressionUUID->
     "278062f0-4ca9-41f6-9a6e-603ad1efac96"], Cell[
    "Luminous Intensity", "TableText",ExpressionUUID->
     "0d94d746-0b3a-4167-be4f-60c306e9b32b"]},
   {Cell["SI Base Unit", "TableText",ExpressionUUID->
     "bd7cd086-3bb8-4719-a2e8-89d0c51f45eb"], Cell[
    "second", "TableText",ExpressionUUID->
     "bc589e95-41ce-4739-ac32-2a7f621b994b"], Cell[
    "meter", "TableText",ExpressionUUID->
     "a3ef1e82-c9c4-4aae-81f8-e5de3d5a75c0"], Cell[
    "kilogram", "TableText",ExpressionUUID->
     "94342a6d-d78f-4158-bcb5-c849b3b329ce"], Cell[
    "ampere", "TableText",ExpressionUUID->
     "b256ebfd-cf5c-441a-98ae-04a8cb29b445"], Cell[
    "kelvin", "TableText",ExpressionUUID->
     "a1850fa4-7a1d-4610-a153-3d3d8861bb7b"], Cell[
    "mole", "TableText",ExpressionUUID->
     "c894228a-231f-4cbc-9808-791b16140ac4"], Cell[
    "candela", "TableText",ExpressionUUID->
     "c41dd685-bb27-4085-8471-aeb191c7b150"]},
   {Cell["SI Base Unit symbol", "TableText",ExpressionUUID->
     "5c292d43-421a-4d13-bc8d-cd5722de6c32"], Cell[
    "s", "TableText",ExpressionUUID->"921666ee-ef39-49b3-ba82-28d8fe032c13"], 
    Cell["m", "TableText",ExpressionUUID->
     "3f732c55-eab5-4e4d-8ad6-6f1af91644db"], Cell[
    "kg", "TableText",ExpressionUUID->"919b58cf-ebf5-4602-819e-be1cf91ff62c"],
     Cell["A", "TableText",ExpressionUUID->
     "5cfad912-5fc4-4687-a22e-1fae6650b802"], Cell[
    "K", "TableText",ExpressionUUID->"cba45797-74c4-43db-ba51-f7cfa4c3f301"], 
    Cell["mol", "TableText",ExpressionUUID->
     "f54d939b-7636-427b-9d11-e0774b242a4b"], Cell[
    "cd", "TableText",ExpressionUUID->"07f25929-fbab-4af8-a4d1-c0933a896bd4"]},
   {Cell["BIPM recommended dimension symbol", "TableText",ExpressionUUID->
     "3e284936-b7af-4359-a74e-c4b246c1c471"], Cell[
    "T", "TableText",ExpressionUUID->"50efcd8b-3c33-4d0d-9bda-64f0bdfc6d2f"], 
    Cell["L", "TableText",ExpressionUUID->
     "e7f15603-8e9f-48b3-82fd-b6ec74b1ef1c"], Cell[
    "M", "TableText",ExpressionUUID->"d62d2de4-8fe5-43b5-b82c-0769fda42427"], 
    Cell["I", "TableText",ExpressionUUID->
     "c1bef9f3-6635-49db-886c-55362312890a"], Cell[
    "\[CapitalTheta]", "TableText",ExpressionUUID->
     "4b572410-5110-4152-b44b-8d9b4955368d"], Cell[
    "N", "TableText",ExpressionUUID->"9c59154c-cc19-4f5b-a877-d0fc8f730f7a"], 
    Cell["J", "TableText",ExpressionUUID->
     "d00e294d-dba6-4cb9-ab9c-f8a4f7467e22"]},
   {Cell["Defining Constant Symbol", "TableText",ExpressionUUID->
     "4918a2ee-c0df-432c-980d-fb94e0ed9ea3"], Cell[TextData[Cell[BoxData[
     SubscriptBox["\[CapitalDelta]\[Nu]", "Cs"]],ExpressionUUID->
     "984fe1e8-231c-400c-a4df-03893f7275f8"]], "TableText",ExpressionUUID->
     "89bd0b61-0fd0-4578-a335-b7b9a546d4f7"], Cell[
    "c", "TableText",ExpressionUUID->"b1e82348-897d-4ee9-a36b-0b0b44335436"], 
    Cell["h", "TableText",ExpressionUUID->
     "23309d29-1968-4759-ae20-2996ae5cce28"], Cell[
    "e", "TableText",ExpressionUUID->"cd2efa59-3dbc-486c-8a8a-d10f190ec759"], 
    Cell["k", "TableText",ExpressionUUID->
     "152622bc-0f07-4820-ae11-838e5586781a"], Cell[TextData[Cell[BoxData[
     SubscriptBox["N", "A"]],ExpressionUUID->
     "7cca6a90-2d31-40a4-ae62-df2ab6304e04"]], "TableText",ExpressionUUID->
     "a0c56259-2c6a-4bbd-818a-e9a8ba22b681"], Cell[TextData[Cell[BoxData[
     SubscriptBox["K", "cd"]],ExpressionUUID->
     "6cff0ba1-fbc9-426d-9ed8-fba6dbaeb5d4"]], "TableText",ExpressionUUID->
     "860a48cf-12ad-440a-b8b4-8560e6ecd2d8"]},
   {Cell["Definition of Defining Constant", "TableText",ExpressionUUID->
     "7685e7a5-a76f-4b1c-9cac-d3381b460609"], Cell["\<\
frequency of caesium-133 atom's hyperfine transition 
when Cs-133 is in an unperturbed ground state\
\>", "TableText",ExpressionUUID->"5f89bfac-c119-4314-a26e-5580ba697b3e"], 
    Cell["speed of light in a vacuum", "TableText",ExpressionUUID->
     "c1767989-9ca6-4900-824a-4897010f6435"], Cell[
    "Planck constant", "TableText",ExpressionUUID->
     "0c1727cb-949d-4f18-9b71-6e8fb9d190f7"], Cell[
    "elementary charge", "TableText",ExpressionUUID->
     "468e6fd7-bbc0-4895-b552-aa9d448053a9"], Cell[
    "Boltzmann constant", "TableText",ExpressionUUID->
     "aa66341c-2001-45a5-a4c0-c1748c24e378"], Cell[
    "Avogadro constant", "TableText",ExpressionUUID->
     "a6696176-57ca-45fe-9da1-be2546d43b6c"], Cell[
    "luminous efficacy of radiation of frequency 540 Thz.", "TableText",
     ExpressionUUID->"364780a8-a270-4002-a2ed-0811c6b13ad9"]},
   {Cell["Value of Defining Constant by Definition", "TableText",
     ExpressionUUID->"e78f5eb7-0a04-4774-b091-ddc992299922"], Cell[TextData[{
     "9 192 631 770 ",
     Cell[BoxData[
      SuperscriptBox["Hz", "1"]],ExpressionUUID->
      "09993703-b861-4891-9890-566df9c6db1b"]
    }], "TableText",ExpressionUUID->"034ecbae-0d6d-4bb5-806d-73d842d564e8"], 
    Cell[TextData[{
     "299 799 458 ",
     Cell[BoxData[
      RowBox[{
       SuperscriptBox["s", 
        RowBox[{"-", "1"}]], 
       SuperscriptBox["m", 
        RowBox[{"+", "1"}]]}]],ExpressionUUID->
      "4b84560c-08f6-4905-915a-8f8fb1370118"]
    }], "TableText",ExpressionUUID->"63280499-f6d1-4f72-a448-8de5ac84e496"], 
    Cell[TextData[{
     "6.62607015 ",
     Cell[BoxData[
      RowBox[{"\[Times]", 
       SuperscriptBox["10", 
        RowBox[{"-", "34"}]], 
       SuperscriptBox["J", "1"], " ", 
       SuperscriptBox["s", "1"]}]],ExpressionUUID->
      "1a5684fb-cef0-4a12-9683-e3c0dcb7f415"]
    }], "TableText",ExpressionUUID->"15b474d2-b6fe-44eb-a0a4-6bf040592fb5"], 
    Cell[TextData[{
     Cell[BoxData[
      RowBox[{"1.602176634", "\[Times]", 
       SuperscriptBox["10", 
        RowBox[{"-", "19"}]]}]],ExpressionUUID->
      "ce390d61-f0e1-4d3e-90e3-cd629acd0dba"],
     " ",
     Cell[BoxData[
      SuperscriptBox["C", "1"]],ExpressionUUID->
      "2d514c16-9302-41ba-b0a2-ce6ec3895d0f"]
    }], "TableText",ExpressionUUID->"50103838-f833-495e-8296-04af18c4effc"], 
    Cell[TextData[Cell[BoxData[
     RowBox[{
      RowBox[{"1.380649", "\[Times]"}], 
      SuperscriptBox["10", 
       RowBox[{"-", "23"}]], " ", 
      SuperscriptBox["J", 
       RowBox[{"+", "1"}]], 
      SuperscriptBox["K", 
       RowBox[{"-", "1"}]]}]],ExpressionUUID->
     "3db95f7c-86e7-4843-a025-9fd1743b5624"]], "TableText",ExpressionUUID->
     "5aa5e62c-bda7-4bae-80ed-c05a0cb444c4"], Cell[TextData[{
     "6.022 140 76 \[Times] ",
     Cell[BoxData[
      SuperscriptBox["10", "23"]],ExpressionUUID->
      "703bbd04-360b-4fc9-8128-12767b5c2ced"],
     " ",
     Cell[BoxData[
      SuperscriptBox["mol", 
       RowBox[{"-", "1"}]]],ExpressionUUID->
      "7c1c4629-4e78-4e66-9416-03a076591efe"]
    }], "TableText",ExpressionUUID->"6842585d-caf6-4445-a94d-4ef19bfdb982"], 
    Cell[TextData[{
     "683 ",
     Cell[BoxData[
      RowBox[{
       SuperscriptBox["lm", 
        RowBox[{"+", "1"}]], " ", 
       SuperscriptBox["W", 
        RowBox[{"-", "1"}]]}]],ExpressionUUID->
      "f3359b46-b914-43c9-821f-6faf98b83b67"]
    }], "TableText",ExpressionUUID->"1c564912-b7c4-49ad-8ce4-391b83cb8c66"]}
  }]], "TableNotes",
 TaggingRules->{},
 CellChangeTimes->{{3.8940392842893133`*^9, 3.894039641898332*^9}, {
   3.8940417928581867`*^9, 3.894042035856437*^9}, 3.894042338265872*^9},
 CellID->394240659,ExpressionUUID->"26b986b1-4ea1-4fe1-9160-ec82e68bd864"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Examples", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Demonstrate the function\[CloseCurlyQuote]s usage, starting with \
the most basic use case and describing each example in a preceding text cell.\
\n\nWithin a group, individual examples can be delimited by inserting page \
breaks between them (either using ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"[Right-click]\"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontColor -> GrayLevel[0.28627], 
                 FontSize -> 14, StripOnInput -> False], 
                StyleBox[
                "\" \[FilledRightTriangle] \"", FontFamily -> 
                 "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                 GrayLevel[0.5], StripOnInput -> False], 
                StyleBox[
                "\"Insert Page Break\"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontColor -> GrayLevel[0.28627], 
                 FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
              ShowStringCharacters -> False]]], 
           " between cells or through the menu using ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"Insert\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontColor -> GrayLevel[0.28627], FontSize -> 14, 
                 StripOnInput -> False], 
                StyleBox[
                "\" \[FilledRightTriangle] \"", FontFamily -> 
                 "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                 GrayLevel[0.5], StripOnInput -> False], 
                StyleBox[
                "\"Page Break\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontColor -> GrayLevel[0.28627], FontSize -> 14, 
                 StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
              False]]], 
           ").\n\nExamples should be grouped into Subsection and \
Subsubsection cells similarly to existing documentation pages. Here are some \
typical Subsection names and the types of examples they normally contain:\n  \
", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Basic Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "most basic function usage\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Scope: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
               "RowDefault"], ShowStringCharacters -> False]]], 
           "input and display conventions, standard computational attributes \
(e.g. threading over lists)\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Options: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
               "RowDefault"], ShowStringCharacters -> False]]], 
           "available options and parameters for the function\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Applications: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "standard industry or academic applications\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Properties and Relations: \"", FontFamily -> 
                 "Source Sans Pro", FontWeight -> "SemiBold", FontSize -> 14, 
                 StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
              False]]], "how the function relates to other functions\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Possible Issues: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "limitations or unexpected behavior a user might experience\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Neat Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "particularly interesting, unconventional, or otherwise unique \
usage"}], "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExamples"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2a4b2673-36a3-4989-825e-8a8600d9aace"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Examples"},
 CellTags->{"Examples", "TemplateCellGroup"},
 CellID->671320372,ExpressionUUID->"2629c9fc-a555-47e9-90c4-64fe9c938cff"],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->619504543,ExpressionUUID->"5c075cc4-69c0-4fc1-b70f-a8344344db7a"],

Cell["\<\
Find physical quantities that dimensions of length divided by time:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8597302938957944`*^9, 3.8597303078199673`*^9}},
 CellTags->"DefaultContent",
 CellID->586099280,ExpressionUUID->"6e49e335-5b7a-4394-840d-9fbebc59d699"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExactDimensionMatches", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{"\"\<TimeUnit\>\"", "->", 
     RowBox[{"-", "1"}]}], ",", 
    RowBox[{"\"\<LengthUnit\>\"", "->", "1"}]}], "|>"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.859730312443549*^9, 3.859730335911895*^9}, {
  3.894042096867676*^9, 3.8940420999148836`*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[417]:=",
 CellID->298664010,ExpressionUUID->"254295ba-4bf0-4d60-a244-4fb8f649500e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"actual exhaust speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ActualExhaustSpeed\""}], "]"}],
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"ActualExhaustSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"airflow permeability\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AirflowPermeability\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AirflowPermeability\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"airspeed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Airspeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Airspeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"average moving speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageMovingSpeed\""}], "]"}],
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"AverageMovingSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"average speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"AverageSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"calibrated airspeed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"CalibratedAirspeed\""}], "]"}],
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"CalibratedAirspeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"characteristic speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"CharacteristicSpeed\""}], 
       "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"CharacteristicSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"climate change velocity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ClimateChangeVelocity\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ClimateChangeVelocity\\\
\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"diffusive coefficient A\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"DiffusiveCoefficientA\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"DiffusiveCoefficientA\\\
\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"distance traveled rate\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"DistanceTraveledRate\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DistanceTraveledRate\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"effective exhaust speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"EffectiveExhaustSpeed\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"EffectiveExhaustSpeed\\\
\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"electric charge carrier drift velocity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"ElectricChargeCarrierDriftVelocity\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ElectricChargeCarrierDriftVelocity\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"electromagnetic wave phase speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"ElectromagneticWavePhaseSpeed\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ElectromagneticWavePhaseSpeed\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"equivalent airspeed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"EquivalentAirspeed\""}], "]"}],
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"EquivalentAirspeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"escape velocity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"EscapeVelocity\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"EscapeVelocity\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"flow rate change per area difference\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"FlowRateChangePerAreaDifference\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FlowRateChangePerAreaDifference\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"flying speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"FlyingSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"FlyingSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"gait speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"GaitSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"GaitSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"ground speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"GroundSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"GroundSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"group speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"GroupSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"GroupSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"growth rate\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"GrowthRate\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"GrowthRate\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"hydraulic conductivity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"HydraulicConductivity\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"HydraulicConductivity\\\
\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"indicated airspeed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"IndicatedAirspeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"IndicatedAirspeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"instantaneous speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"InstantanenousSpeed\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"InstantanenousSpeed\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"jogging speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"JoggingSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"JoggingSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"kinematic mass flux\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"KinematicMassFlux\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"KinematicMassFlux\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Kolmogorov speed scale\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"KolmogorovSpeedScale\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"KolmogorovSpeedScale\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"light speed in a medium\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"LightSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"LightSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"linear speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"LinearSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"LinearSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"maximum speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"MaximumSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"MaximumSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"migration speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"MigrationSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"MigrationSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"nonrelativistic speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"NonrelativisticSpeed\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"NonrelativisticSpeed\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"orbital speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"OrbitalSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"OrbitalSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"penetration rate\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PenetrationRate\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"PenetrationRate\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"phase speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PhaseSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"PhaseSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"precipitation intensity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PrecipitationIntensity\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"PrecipitationIntensity\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"rainfall intensity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"RainfallIntensity\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"RainfallIntensity\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"recessional velocity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"RecessionalVelocity\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"RecessionalVelocity\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"relative speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"RelativeSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"RelativeSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"relativistic speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"RelativisticSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"RelativisticSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Reye constant\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ReyeConstant\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"ReyeConstant\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"root\[Hyphen]mean\[Hyphen]square speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"RootMeanSquareSpeed\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"RootMeanSquareSpeed\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"seismic P\[Hyphen]wave speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SeismicPWaveSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"SeismicPWaveSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"settling speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SettlingSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"SettlingSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"shear velocity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ShearVelocity\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"ShearVelocity\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"solar wind speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SolarWindSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"SolarWindSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"group speed of sound\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SoundGroupSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"SoundGroupSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"sound particle velocity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SoundParticleVelocity\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"SoundParticleVelocity\\\
\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"phase speed of sound\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SoundPhaseSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"SoundPhaseSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"sound speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SoundSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"SoundSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"specific impulse by mass\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SpecificImpulseByMass\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"SpecificImpulseByMass\\\
\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Speed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Speed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"x\[Hyphen]component of speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SpeedX\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"SpeedX\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"y\[Hyphen]component of speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SpeedY\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"SpeedY\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"z\[Hyphen]component of speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SpeedZ\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"SpeedZ\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"swimming speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SwimmingSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"SwimmingSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"tachyonic speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"TachyonicSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"TachyonicSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"tangential speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"TangentialSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"TangentialSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"thickness frequency product\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ThicknessFrequencyProduct\""}],
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThicknessFrequencyProduct\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"true airspeed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAirspeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAirspeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"vapor resistance\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"VaporResistance\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"VaporResistance\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"velocity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Velocity\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Velocity\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"volumetric flux\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"VolumetricFlux\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"VolumetricFlux\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"walking speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"WalkingSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"WalkingSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"wave speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"WaveSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"WaveSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"wind speed\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"WindSpeed\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"WindSpeed\\\"]\"", 
     "\"physical quantity\""},
    "Entity"]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8940420741810904`*^9, 3.8940421013501525`*^9}},
 CellTags->"DefaultContent",
 CellLabel->"Out[417]=",
 CellID->169436637,ExpressionUUID->"5d357bcd-5798-41fc-87f2-7356a0bf2dfb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExactDimensionMatches", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<LengthUnit\>\"", ",", 
      RowBox[{"-", "4"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Mass\>\"", ",", "0"}], "}"}]}], "}"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.859732947493025*^9, {3.8597329955707436`*^9, 3.8597329978602405`*^9}},
 CellLabel->"In[418]:=",
 CellID->54355411,ExpressionUUID->"8cc3c807-186a-424f-9c8b-d360762dfef2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"cloud raindrop size\[Hyphen]distribution factor\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"CloudRaindropSizeDistributionFactor\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CloudRaindropSizeDistributionFactor\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"contact\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Contact\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Contact\\\"]\"", 
     "\"physical quantity\""},
    "Entity"]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8597329988247747`*^9, 3.8940421106986175`*^9},
 CellLabel->"Out[418]=",
 CellID->213811976,ExpressionUUID->"a283b0fc-ec5f-402c-b948-1fd1b2d68ade"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExactDimensionMatches", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<LengthUnit\>\"", ",", 
      RowBox[{"-", "4"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Mass\>\"", ",", "0"}], "}"}]}], "}"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{
  3.859732947493025*^9, {3.8597329955707436`*^9, 3.8597329978602405`*^9}, 
   3.8959390738927984`*^9},
 CellLabel->"In[58]:=",
 CellID->122010027,ExpressionUUID->"c91232d5-ce62-44ac-99e6-b80bffa1d990"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"cloud raindrop size\[Hyphen]distribution factor\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"CloudRaindropSizeDistributionFactor\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CloudRaindropSizeDistributionFactor\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"contact\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Contact\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Contact\\\"]\"", 
     "\"physical quantity\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.895939075135173*^9},
 CellLabel->"Out[58]=",
 CellID->32832216,ExpressionUUID->"df320376-0b23-459b-b4cc-c7c73cbed3c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExactDimensionMatches", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"\"\<TemperatureUnit\>\"", ",", "1"}], "}"}], "}"}], 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8597330825528264`*^9, 3.8597330928877726`*^9}, {
  3.894042119873658*^9, 3.894042122782495*^9}},
 CellLabel->"In[420]:=",
 CellID->81378462,ExpressionUUID->"a8e94acf-caab-4307-8767-5357d2dade81"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"air temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AirTemperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"AirTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"ambient temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AmbientTemperature\""}], "]"}],
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"AmbientTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Antoine equation constant B\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AntoineEquationConstantB\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AntoineEquationConstantB\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Antoine equation constant C\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AntoineEquationConstantC\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AntoineEquationConstantC\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"autoignition temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AutoignitionTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AutoignitionTemperature\
\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"average temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AverageTemperature\""}], "]"}],
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"AverageTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"body temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"BodyTemperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"BodyTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"boiling temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"BoilingTemperature\""}], "]"}],
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"BoilingTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"brightness temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"BrightnessTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"BrightnessTemperature\\\
\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"chill temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ChillTemperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"ChillTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"cloud point temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"CloudPointTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"CloudPointTemperature\\\
\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"color temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ColorTemperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"ColorTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"core body temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"CoreBodyTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CoreBodyTemperature\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"correlated color temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"CorrelatedColorTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CorrelatedColorTemperature\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"critical temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"CriticalTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"CriticalTemperature\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Curie constant\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"CurieConstant\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"CurieConstant\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Curie temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"CurieTemperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"CurieTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Debye temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"DebyeTemperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"DebyeTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"dew point temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"DewPointTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"DewPointTemperature\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"distillation temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"DistillationTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"DistillationTemperature\
\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"dry\[Hyphen]bulb temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"DryBulbTemperature\""}], "]"}],
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"DryBulbTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"drying temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"DryingTemperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"DryingTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"dust ignition temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"DustIgnitionTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"DustIgnitionTemperature\
\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"effective temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"EffectiveTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"EffectiveTemperature\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"electron temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ElectronTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ElectronTemperature\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"equilibrium temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"EquilibriumTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"EquilibriumTemperature\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Fermi temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"FermiTemperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"FermiTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"flash temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"FlashTemperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"FlashTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"freezing temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"FreezingTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"FreezingTemperature\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"frost point temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"FrostPointTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"FrostPointTemperature\\\
\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"gel point temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"GelPointTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"GelPointTemperature\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Hawking temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"HawkingTemperature\""}], "]"}],
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"HawkingTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"ion temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"IonTemperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"IonTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Krafft temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"KrafftTemperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"KrafftTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"local temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"LocalTemperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"LocalTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"mean radiant temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"MeanRadiantTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MeanRadiantTemperature\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"melting temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"MeltingTemperature\""}], "]"}],
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"MeltingTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"N\[EAcute]el temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"NeelTemperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"NeelTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"non\[Hyphen]equilibrium temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"NonEquilibriumTemperature\""}],
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"NonEquilibriumTemperature\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"outside air temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"OutsideAirTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"OutsideAirTemperature\\\
\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"plasma temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PlasmaTemperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"PlasmaTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"reference temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ReferenceTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ReferenceTemperature\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"room temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"RoomTemperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"RoomTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"service temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ServiceTemperature\""}], "]"}],
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"ServiceTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"skin temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SkinBodyTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SkinBodyTemperature\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"stagnation temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"StagnationTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"StagnationTemperature\\\
\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"sublimation temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SublimationTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SublimationTemperature\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"superconduction transition temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", 
         "\"SuperconductionTransitionTemperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SuperconductionTransitionTemperature\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"surface temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SurfaceTemperature\""}], "]"}],
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"SurfaceTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Temperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Temperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"temperature difference\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"TemperatureDifference\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"TemperatureDifference\\\
\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"thermal potential difference\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"ThermalPotentialDifference\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ThermalPotentialDifference\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"tomperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Tomperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Tomperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Ungel point temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"UngelPointTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"UngelPointTemperature\\\
\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Unruh temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"UnruhTemperature\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"UnruhTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Weiss constant\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"WeissConstant\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"WeissConstant\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"wet bulb globe temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"WetBulbGlobeTemperature\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"WetBulbGlobeTemperature\
\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"wet\[Hyphen]bulb temperature\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"WetBulbTemperature\""}], "]"}],
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"WetBulbTemperature\\\"]\"", 
     "\"physical quantity\""},
    "Entity"]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.8597330947371798`*^9, {3.894042116267482*^9, 3.8940421239616394`*^9}},
 CellLabel->"Out[420]=",
 CellID->580509196,ExpressionUUID->"c7888452-dd38-461b-9ef9-c55cdf615a4a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Possible Issues", "Subsection",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->471245215,ExpressionUUID->"afae3492-0078-404e-889e-616da3d65829"],

Cell["Another difficulty arises when measuring angles:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8597333983438325`*^9, 3.8597334260606146`*^9}},
 CellID->563505655,ExpressionUUID->"79ccaac6-c8ad-4ecc-8218-6ad7cf2df035"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExactDimensionMatches", "[", 
  RowBox[{"<|", 
   RowBox[{"\"\<AngleUnit\>\"", "->", "1"}], "|>"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8597334310311737`*^9, 3.8597334402622924`*^9}},
 CellLabel->"In[422]:=",
 CellID->566772961,ExpressionUUID->"a1701890-3d6f-47d5-b316-ba42e7bd4932"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"absolute bearing\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AbsoluteBearing\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"AbsoluteBearing\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"altitude angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AltitudeAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"AltitudeAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"plane angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Angle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Angle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"angle of attack\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfAttack\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngleOfAttack\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"angle of deviation\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfDeviation\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngleOfDeviation\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"angle of incidence\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfIncidence\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngleOfIncidence\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"angle of optical rotation\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfOpticalRotation\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfOpticalRotation\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"angle of reflection\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfReflection\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngleOfReflection\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"angle of refraction\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfRefraction\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngleOfRefraction\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"angle of repose\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfRepose\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngleOfRepose\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"angle of vanishing stability\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AngleOfVanishingStability\""}],
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngleOfVanishingStability\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"angular diameter\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularDiameter\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularDiameter\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"angular displacement\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularDisplacement\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularDisplacement\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"angular eccentricity\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularEccentricity\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"AngularEccentricity\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"angular elongation\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularElongation\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularElongation\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"angular radius\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularRadius\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularRadius\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"angular resolution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularResolution\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularResolution\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"angular resolving power\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AngularResolvingPower\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"AngularResolvingPower\\\
\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"argument of periapsis\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ArgumentOfPeriapsis\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"ArgumentOfPeriapsis\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"axial tilt\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AxialTilt\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"AxialTilt\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"azimuth\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Azimuth\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Azimuth\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"bearing\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Bearing\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Bearing\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Bragg angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"BraggAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"BraggAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Brewster angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"BrewsterAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"BrewsterAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"colatitude\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Colatitude\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Colatitude\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"compass bearing\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"CompassBearing\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"CompassBearing\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"critical angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"CriticalAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"CriticalAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"declination\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Declination\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Declination\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"diffraction angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"DiffractionAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"DiffractionAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"eccentric anomaly\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"EccentricAnomaly\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"EccentricAnomaly\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"Einstein angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"EinsteinAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"EinsteinAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"electric phase difference\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ElectricPhaseDifference\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"ElectricPhaseDifference\
\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"friction angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"FrictionAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"FrictionAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"geocentric ecliptic latitude\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"GeocentricEclipticLatitude\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"GeocentricEclipticLatitude\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"geocentric ecliptic longitude\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"GeocentricEclipticLongitude\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"GeocentricEclipticLongitude\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"grade\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Grade\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Grade\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"greatest eastern elongation\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"GreatestEasternElongation\""}],
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"GreatestEasternElongation\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"greatest elongation\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"GreatestElongation\""}], "]"}],
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"GreatestElongation\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"greatest western elongation\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"GreatestWesternElongation\""}],
        "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"GreatestWesternElongation\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"grid bearing\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"GridBearing\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"GridBearing\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"heading\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Heading\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Heading\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"heliocentric ecliptic latitude\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"HeliocentricEclipticLatitude\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"HeliocentricEclipticLatitude\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"heliocentric ecliptic longitude\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"HeliocentricEclipticLongitude\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"HeliocentricEclipticLongitude\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"hour angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"HourAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"HourAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"infinitesimal angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"InfinitesimalAngle\""}], "]"}],
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"InfinitesimalAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"latitude\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Latitude\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Latitude\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"local hour angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"LocalHourAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"LocalHourAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"longitude\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Longitude\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Longitude\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"longitude of the ascending node\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"LongitudeOfTheAscendingNode\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"LongitudeOfTheAscendingNode\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"loss angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"LossAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"LossAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"magnetic bearing\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"MagneticBearing\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"MagneticBearing\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"magnetic heading\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"MagneticHeading\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"MagneticHeading\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"mean anomaly\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"MeanAnomaly\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"MeanAnomaly\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"minimum angle of resolution\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"MinimumAngleOfResolution\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MinimumAngleOfResolution\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"optical angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"OpticalAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"OpticalAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"orbital inclination\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"OrbitalInclination\""}], "]"}],
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"OrbitalInclination\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"phase angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PhaseAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"PhaseAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"phase difference\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PhaseDifference\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"PhaseDifference\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"phase shift\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PhaseShift\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"PhaseShift\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"pitch angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PitchAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"PitchAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"planar polar angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PolarAngle2D\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"PolarAngle2D\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"polarization orientation\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PolarizationOrientation\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"PolarizationOrientation\
\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"relative bearing\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"RelativeBearing\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"RelativeBearing\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"right ascension\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"RightAscension\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"RightAscension\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"roll angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"RollAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"RollAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"scattering angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ScatteringAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"ScatteringAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"sidereal hour angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SiderealHourAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"SiderealHourAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"solar hour angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SolarHourAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"SolarHourAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"spiral angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SpiralAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"SpiralAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"tilt\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Tilt\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Tilt\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"true angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"true anomaly\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueAnomaly\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueAnomaly\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"true bearing\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"TrueBearing\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"TrueBearing\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"twist angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"TwistAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"TwistAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"visual angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"VisualAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"VisualAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"yaw\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Yaw\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Yaw\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"zenith angle\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"ZenithAngle\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"ZenithAngle\\\"]\"", 
     "\"physical quantity\""},
    "Entity"]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.859733442019226*^9, 3.8940421493710375`*^9},
 CellLabel->"Out[422]=",
 CellID->19034435,ExpressionUUID->"fc7cb3fd-f005-49ae-a2c5-31f764cd95c6"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData["\<\"Information\"\>"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "d9f05576-b16d-491d-be24-34d8639f281f"],
 " is another quantity that has a unique relationship with dimensional \
analysis:"
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.859733483339453*^9, 3.859733509489422*^9}, {
  3.8599085955108128`*^9, 3.859908629692116*^9}},
 CellID->42521031,ExpressionUUID->"50ec65e3-3b05-463e-abbc-cab1e8d2e7b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExactDimensionMatches", "[", 
  RowBox[{"<|", 
   RowBox[{"\"\<InformationUnit\>\"", "->", "1"}], "|>"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.859733510692955*^9, 3.8597335194940834`*^9}},
 CellLabel->"In[423]:=",
 CellID->1013036962,ExpressionUUID->"2c7a14bb-25af-4b3c-8272-0a0ed5afa288"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"information\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Information\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Information\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"information entropy\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"InformationEntropy\""}], "]"}],
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"InformationEntropy\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"information negentropy\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"InformationNegentropy\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \\\"InformationNegentropy\\\
\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"relative information entropy\"", 
     RowBox[{"Entity", "[", 
       RowBox[{
        "\"PhysicalQuantity\"", ",", "\"RelativeInformationEntropy\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"RelativeInformationEntropy\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"skew information entropy\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SkewInformationEntropy\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"SkewInformationEntropy\\\"]\"", "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"spectral efficiency\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"SpectralEfficiency\""}], "]"}],
      "\"Entity[\\\"PhysicalQuantity\\\", \\\"SpectralEfficiency\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"word size\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"WordSize\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"WordSize\\\"]\"", 
     "\"physical quantity\""},
    "Entity"]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.859733521022828*^9, 3.8940421554240894`*^9},
 CellLabel->"Out[423]=",
 CellID->18604770,ExpressionUUID->"d9a5b19a-a4bc-49e2-882f-eb3f6e74797c"]
}, Open  ]],

Cell["\<\
There are other physical quantity entities with specialized dimensions:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8597331969506245`*^9, 3.85973321308972*^9}, {
  3.8597333689635673`*^9, 3.859733374060176*^9}},
 CellID->661223408,ExpressionUUID->"9e716a26-8f3f-4da6-abf9-a6f9d5d15e37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Union", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<Dimensions\>\"", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "&"}], "/@", 
     RowBox[{"RandomEntity", "[", 
      RowBox[{"\"\<PhysicalQuantity\>\"", ",", "3022"}], "]"}]}], "]"}], 
   "]"}], "//", 
  RowBox[{
   RowBox[{"Short", "[", 
    RowBox[{"#", ",", "8"}], "]"}], "&"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8597332144585514`*^9, 3.8597332428050547`*^9}, {
  3.859733350891814*^9, 3.859733354678627*^9}},
 CellLabel->"In[424]:=",
 CellID->21871981,ExpressionUUID->"606c9b00-849f-4945-8da6-425d5cbff475"],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{"\<\"AllergenicPotencyUnit\"\>", ",", "\<\"AmountUnit\"\>", 
    ",", "\<\"AngleUnit\"\>", ",", "\<\"ArrivalUnit\"\>", 
    ",", "\<\"AtomUnit\"\>", ",", "\<\"BackUnit\"\>", 
    ",", "\<\"BacteriumUnit\"\>", ",", "\<\"BagelUnit\"\>", 
    ",", "\<\"BagUnit\"\>", ",", "\<\"BarUnit\"\>", ",", "\<\"BaryonUnit\"\>",
     ",", "\<\"BasePairUnit\"\>", ",", "\<\"BatchUnit\"\>", 
    ",", "\<\"BeanUnit\"\>", ",", "\<\"BeatUnit\"\>", ",", "\<\"BergUnit\"\>",
     ",", "\<\"BiocapacityUnit\"\>", 
    ",", "\<\"BioequivalentAllergenicPotencyUnit\"\>", 
    ",", "\<\"BiologicUnit\"\>", ",", "\<\"BirdUnit\"\>", 
    ",", "\<\"BiscuitUnit\"\>", ",", "\<\"BiteUnit\"\>", 
    ",", "\<\"BottleUnit\"\>", ",", "\<\"BowlUnit\"\>", 
    ",", "\<\"BoxUnit\"\>", ",", "\<\"BreastUnit\"\>", 
    ",", "\<\"BulbUnit\"\>", ",", "\<\"BunchUnit\"\>", 
    ",", "\<\"BundleUnit\"\>", ",", "\<\"BunUnit\"\>", 
    ",", "\<\"BurpeeUnit\"\>", ",", "\<\"BurritoUnit\"\>", 
    ",", "\<\"BusinessUnit\"\>", ",", 
    RowBox[{"\[LeftSkeleton]", "126", "\[RightSkeleton]"}], 
    ",", "\<\"SheetUnit\"\>", ",", "\<\"SipUnit\"\>", 
    ",", "\<\"SitUpUnit\"\>", ",", "\<\"SliceUnit\"\>", 
    ",", "\<\"SmallItemUnit\"\>", ",", "\<\"SmidgenUnit\"\>", 
    ",", "\<\"SprigUnit\"\>", ",", "\<\"SquatUnit\"\>", 
    ",", "\<\"StalkUnit\"\>", ",", "\<\"SteakUnit\"\>", 
    ",", "\<\"StepUnit\"\>", ",", "\<\"StickUnit\"\>", 
    ",", "\<\"StrideUnit\"\>", ",", "\<\"StripUnit\"\>", 
    ",", "\<\"StrokeUnit\"\>", ",", "\<\"SubUnit\"\>", 
    ",", "\<\"TacoUnit\"\>", ",", "\<\"TamaleUnit\"\>", 
    ",", "\<\"TemperatureUnit\"\>", ",", "\<\"ThighUnit\"\>", 
    ",", "\<\"TimeUnit\"\>", ",", "\<\"TortillaUnit\"\>", 
    ",", "\<\"TurnUnit\"\>", ",", "\<\"VirusUnit\"\>", 
    ",", "\<\"VisitUnit\"\>", ",", "\<\"WaferUnit\"\>", 
    ",", "\<\"WaffleUnit\"\>", ",", "\<\"WedgeUnit\"\>", 
    ",", "\<\"WindingUnit\"\>", ",", "\<\"WingUnit\"\>", 
    ",", "\<\"WordUnit\"\>", ",", "\<\"WrapUnit\"\>"}], "}"}],
  Short[#, 8]& ]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.859733238718536*^9, 3.859733280851214*^9, 
  3.85973337705245*^9, 3.8940421648416505`*^9},
 CellLabel->"Out[424]//Short=",
 CellID->49192253,ExpressionUUID->"5d5a3aa1-8288-4714-a71f-f9542050d665"]
}, Open  ]],

Cell["\<\
There are also specialized units for human societies and interactions and \
economics:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8597335418912444`*^9, 3.85973355932053*^9}},
 CellID->635277921,ExpressionUUID->"ba89daf8-9fdc-4a12-93ca-6c159ff9a494"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExactDimensionMatches", "[", 
  RowBox[{"<|", 
   RowBox[{"\"\<PersonUnit\>\"", "->", "1"}], "|>"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8597335601167526`*^9, 3.8597335658155637`*^9}},
 CellLabel->"In[425]:=",
 CellID->438548092,ExpressionUUID->"026bb2a5-947f-43ef-99b5-7f1c991ec1e1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"average population\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"AveragePopulation\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"AveragePopulation\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"human population\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"HumanPopulation\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"HumanPopulation\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"person count\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"PersonCount\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"PersonCount\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"population\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Population\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Population\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"world population\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"WorldPopulation\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"WorldPopulation\\\"]\"", 
     "\"physical quantity\""},
    "Entity"]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8597335674883127`*^9, 3.8940421677713013`*^9},
 CellLabel->"Out[425]=",
 CellID->59320940,ExpressionUUID->"9e483a4d-9b7e-47be-97b0-2dec051774cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExactDimensionMatches", "[", 
  RowBox[{"<|", 
   RowBox[{"\"\<MoneyUnit\>\"", "->", "1"}], "|>"}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.859733566916554*^9, 3.859733581031067*^9}},
 CellLabel->"In[426]:=",
 CellID->298127596,ExpressionUUID->"44e7d812-d57f-4636-9918-dd916f3c8186"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"amount of money\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"Money\""}], "]"}], 
     "\"Entity[\\\"PhysicalQuantity\\\", \\\"Money\\\"]\"", 
     "\"physical quantity\""},
    "Entity"], ",", 
   TemplateBox[{"\"money per CPU clock rate time\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"PhysicalQuantity\"", ",", "\"MoneyPerCPUClockRateTime\""}], 
       "]"}], "\"Entity[\\\"PhysicalQuantity\\\", \
\\\"MoneyPerCPUClockRateTime\\\"]\"", "\"physical quantity\""},
    "Entity"]}], "}"}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8597335825727773`*^9, 3.894042169926577*^9},
 CellLabel->"Out[426]=",
 CellID->14476562,ExpressionUUID->"9edbd530-f357-47ef-8e5f-a6ce101397d9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neat Examples", "Subsection",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->303071976,ExpressionUUID->"c2feff69-60ed-4b74-b83b-9f460798320a"],

Cell["\<\
Make an interactive manipulation for the seven SI base dimensions:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.85973359815187*^9, 3.8597336146680107`*^9}},
 CellID->36141950,ExpressionUUID->"eaffc869-b1fb-43f1-a858-6679a2fbd491"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ExactDimensionMatches", "[", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<Time\>\"", "->", "time"}], ",", 
      RowBox[{"\"\<Length\>\"", "->", "length"}], ",", 
      RowBox[{"\"\<Mass\>\"", "->", "mass"}], ",", 
      RowBox[{"\"\<ElectricCurrent\>\"", "->", "electriccurrent"}], ",", 
      RowBox[{"\"\<Amount\>\"", "->", "amountofsubstance"}], ",", 
      RowBox[{"\"\<Temperature\>\"", "->", "temperature"}], ",", 
      RowBox[{"\"\<LuminousIntensity\>\"", "->", "luminousintensity"}]}], 
     "|>"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "4"}], ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"length", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "4"}], ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mass", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "4"}], ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"electriccurrent", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "4"}], ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"amountofsubstance", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "4"}], ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"temperature", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "4"}], ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"luminousintensity", ",", "0"}], "}"}], ",", 
     RowBox[{"-", "4"}], ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.859733615850672*^9, 3.8597337894141264`*^9}},
 CellLabel->"In[427]:=",
 CellID->621896598,ExpressionUUID->"1fd96cbb-c455-485c-a349-4f014d60d4cf"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsfQd8lLfdP+37tn3/aZu2SdukaUabNKMJ2RMCYRMgixBIQgJh723MXsYM
LzAbzN7GYIwxNjbeZtl4gDfeA+9x0/btu0f/r/Scz+cFBg4MRt+POGSdxk8/
6fTVT4+k599jZw2Z+OtOnTrN/T98DBmzoJed3ZhF3/0ZfwybOXfKpJkTxg+c
aT9h0gS7T8b+DwK3IK4j/lG/Xq/XajRaDg4ODg4OjvsLk0m4HB2Tk5eXmZWT
mZ3LHXfccccdd9zdB5edk5eckpqbfyMpOZVwcHBwcHBw3F9odVqwcGJSiiAI
JljFHBwcHBwcHPcLdXW1IguDkfFne08KODg4ODg4HiGoVHWchTk4ODg4ONoF
nIU5ODg4ODjaC5yFOTg4ODg42guchTk4ODg4ONoLnIU5ODg4ODjaC5yFOTg4
ODg42guchTk4ODg4OGwOk8lkrAf8rUXjLMzBwcHBwWEriEyqVCozMzMvX74c
GhqKT/gRQlriWc7CHBwcHBwcNoFIozKZDMwbEBAQGBgYFBSET/gRgnDSjGo5
C3NwcHBwcNw9RA5VqVTx8fFnzpzx9fVNTEzUaDT4hN/Pz+/atWvNU3EW5uDg
4ODguHuIHFpRUREaGnr27FnYv6mpqQaDAZ/w+/v7X7hwga9Ic3BwcHBw3AuI
HFpQUHDq1KmUlJSamhqZTKZQKPAJPyzioKCg5tu0OAtzcHBwcHDcPTgLc3Bw
cHBwtBf4ijQHBwcHB0d7ofnurKSkJK1Wi0++O4uDg4ODg+NeQ2CQyWSXLl0C
7Z6pB/wI4SeVODg4ODg47gM0Gk1lZWVhYWFOTg4+4UdIizE5C3NwcHBwcLQX
OAtzcHBwcHC0FzgLc3C0F6wvezdwcHB0XFh+6XyPNAfHg4OCgoJr166lpKQk
c3BwdHTgl56QkFBWVkYasy1nYY57BL1J0BsF+mntjIKJ97J65OTkVFRUcEOY
g+NRAH7pmHjfuHGDcBbm4HgwABaWSCTtLQUHB8d9QlFREWdhjvsDrUFwipKu
CK12CJesqHeOEZIVQdVReWpEMPK+xli4urqa8J8eB0dHh/gbv8FAOAtz3EuI
fUihMXVakNlpRnqnWdcb3JyMTuNS5wdVEbZe3b5yPgjgLMzB8YiAszDHfYPY
h5Ra05Orcn+zJOu3S7N/U+8eW57zG7sMx3C6BstZmHAW5uB4ZNDhWdjE0N5S
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
paVZWuSW0oJ/8bl06dK4uDjSUZrynoKzsK2Azpabm5vFkJ6enp2dnZGRIZFI
mkSz2a0dGT7kYPdGN1jSm47EOyW0Zo7AeG5SuI3vB6MmPSbw8pm9M3s+d27/
WnY9VHn9rQ46dp1FVdNbOwQdSd5FjvQXf0KZmZlDhw7t2rUrakdaW5GuSiPb
XiPq4kZ3Z4k50226KEhBSaepnOxmY6Kjl1+x6yzYoC1ruN6K2qRUyHqBFczQ
rqwPr62/oaLWvOeZso+K3bYhHq2taVRH+iCV3Y/R/BIMqq76KzsglbjnrT5b
K0lUDfWikTXsNg92NYeYiiWnUsFmpDvH1PUXktTSDM33YLCyLFnpLSpiJ6f0
4uxF3XArSNO7JavYjSJ1FuFZTdklIcjcKLXSXuMmrk/F2F/G4mupti0XfrLL
OlpQuyDO3BqLJLC20Io11Yk1FcTq3Kx31bPwznfoS6hZr960aVPnzp1Xr17d
9p/Gg4+OwcLTp09PSsLkkI5dZWX0KQOMXJVKlZ+fb4mJoa+mpgYVQczJkydj
sFq4cGFISEhBQUE7yf4wQTyHdBMWrtE9oD3kQQN65pkzZ3x8fPz8/GJjY/39
/b28vEDEpPGvzBYszCiv+jrZ8hLR1m861VdZ7hUU74SklzfS2xHlsrL0w6sn
rx31mcu4PlHHN4q3F4qR6eWEmgozM+otrppo2H374fPIqRFs96oJv76wsLCm
JrCVmPRDX0c2v0iqk2BzEfGeQ72loAp2TWLLctJbHIW6kxvnRXptEExaWMoN
MfWNhGTXIYp8YRVujlZhWWFmV1BWNE8uhtTfmdnU1d+12CiCdbb1WVklt5Ql
Xt7YODltgvr4DfdeijdGsvshLUK2rCJNhZUSGiouthHd7Wat5PriLLVoqYkb
pTLHb1aoGKEFtbcuknVNWynauneV0cflKXvIgZ5iF8fHhQsXxAneA0tJd4CO
wcIzZsxA00RHR69btw4WLkawDRs2jBs3buXKle7u7hj3li9fvn79+pEjR+7b
ty8wMLBLly6hoaGwoEHHy5YtQypLVvg0cjSDRm+AXpaHVbfGwnKVHtEM7S3n
gwlrkxC9MTg4GCx89uxZhUKB3ggWhkVMbM7C7D9qEe/6gESvZWXLqJ3SghPX
BmvpJhzzBYP6VmI2djBhMMBuep5c92G/xgbybXV9SZwb+PxE38QEGBVtKsja
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
s/vllVk6eWFyzFGUfXTDnB1OP1WVZsaf2o2GsAd5wE01ILLbcYEgterSVNNG
MiLXyguhK3Gxpjydru3Ti7V6RfGNiMNZ18/C53R12uqwjgYHarGN3Eq4BSWg
cL2yhD6pZKhCCSnng25EHET5sD/18ok6s63PziI1FXk3rp7eCztzkiIr6NlZ
MrQIBSICn8PzVvFQWC7Qx4QV9WtUkgZPKt3ZR/y6WTv4vp7naBGeZRb+VTaq
lSCy8LIoyXMzU0X9WxcWpD+/IouzsG1hMxa+7EECB7Fj+etOY6D0KrCDO6iM
raGf9FmecnYwhZqeMmGsMqkh05ERKtPBFOJRG1qrIztMe43MxxqbzqlQmr4S
j4agh2AozaU1ETfxCM1FTap3cITOfIJlxExyaiJbABUyMjKGDBnSvn17cVdb
0yvSWaFkf7sGJ1iy071k7MANqzbWs1xlOpqDtg7OIYfXTmOHkBDxpBHBdOpX
hdlX2rqLGisHQtvWu6ihrRPPka53ZEcFO0BDUc9CekUjnhNCXWE6JIQVyyY8
zGn1HW45j4X2puVYkmqWTMl+iTZ7uFG8YY3Wx2dhgiToSNI2crif6OJf8DxH
i/AsszBH8yGy8Nrz0hecM15yzX5h1V0xQAW/sCLrDfecWs7CNoUNWFgko/w4
sv19E1fSR4bLxSDQYxVLBPr4Eg3mi+VGdSmC0DBlKYtXWMVpsI4LVrloCewr
MYF1rvvFxRIaVG0KGrZj81APcsVL/D2ppKQkKirqvkJM9FhtEfF+kyhy6akg
KKF+c6wramC5+BWCXlFEBE3sEa8g73mCscZA90hbu+W+vmp00eQQWqxVey1Z
GlxsohBzXdZOE5rylditSG/51tigX5qKW9VY3/MqdvZg6DhyegrzvOEXPM/R
InAW5mg+NHqhRm0E4dbUD7jC7w/bwkbvFzYSg5bs/oLELGB/a8wHGCqehiDa
yQ61u3OAUmptialRZtxXi4lpjg4iwUPZ37pHMEPFwhP3xuP3PH2chBTF0Xc0
F18X3f3Lnud4eHAW5uCwQ9iMhYGKNOL9Njn6PX3LcEE0KYgkBVFPQ4ik1mYF
k9DxxONFknHK0iLhPq+DtGq4QIOiguxsQ3w7k1t7yb2IJ92cpygwz2efpO80
hOevej+E5zkeHpyFOR4KdHgjTQQO28I2LEzMy7OKchI2kxzoQnZ9QnY+ReFj
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
gYqCgoKCgqKjAkj4/wPl0Vnc
    "], {{0, 329.5}, {321., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{472.20000000000005`, Automatic},
  ImageSizeRaw->{642., 659.},
  PlotRange->{{0, 321.}, {0, 329.5}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.8597337732581244`*^9, 3.859733789702485*^9}, {
  3.894042174454685*^9, 3.8940421812453346`*^9}},
 CellLabel->"Out[427]=",
 CellID->170048682,ExpressionUUID->"b989a24b-c279-4802-96e5-1d8ce2e8c5b0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->871630328,ExpressionUUID->"940a8cbc-fe8b-462d-a137-2c202cb9ee05"],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this function.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "0e76b9ee-1c75-41f6-83c3-246af089ed32"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Contributed By", "ContributorInformation", "TemplateCellGroup"},
 CellID->771147648,ExpressionUUID->"f9e2c84a-e565-4652-a8d0-700016a9e0b7"],

Cell["Peter Burbery", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8597346636019897`*^9, 3.8597346651240864`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->855757352,ExpressionUUID->"94f21c0f-b2d9-472a-94e1-6a459f7b9960"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the function in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a81d5353-bd91-40bb-9954-b945a2291f0e"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->854882061,ExpressionUUID->"59824d59-ffb7-485e-b0dd-dd6ba5d0b369"],

Cell["dimensional analysis", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8940421886678925`*^9, 3.894042192377637*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->560424104,ExpressionUUID->"5b6e51b5-379e-43e1-bdbc-1bbd1f92acf0"],

Cell["metrology", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8940421886678925`*^9, 3.8940421939642344`*^9}, {
  3.8959370204621053`*^9, 3.895937020561944*^9}},
 CellID->155887662,ExpressionUUID->"99b2820d-7ad4-4e7a-9795-57e875bb9264"],

Cell["units", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8940421886678925`*^9, 3.8940421939642344`*^9}, {
  3.895937020820841*^9, 3.8959370221234217`*^9}},
 CellID->16522560,ExpressionUUID->"85d1c21b-6fa8-4271-99a2-bf2eba04bef4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Categories", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->193940140,ExpressionUUID->"b6561e30-6319-498a-9e1d-8d9d7af1678a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
            "\"Cloud & Deployment\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "External Interfaces & Connections"}], 
            "\" \"", "\"External Interfaces & Connections\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
            "\"Graphs & Networks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "Knowledge Representation & Natural Language", {
             False, "Knowledge Representation & Natural Language"}], "\" \"", 
            "\"Knowledge Representation & Natural Language\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Repository Tools"}], "\" \"", 
            "\"Repository Tools\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Strings & Text"}], "\" \"", 
            "\"Strings & Text\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "User Interface Construction"}], 
            "\" \"", "\"User Interface Construction\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Core Language & Structure"}], "\" \"",
             "\"Core Language & Structure\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Financial Data & Computation"}], 
            "\" \"", "\"Financial Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
            "\" \"", "\"Higher Mathematical Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
            "\"Machine Learning\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[
            "Scientific and Medical Data & Computation", {
             False, "Scientific and Medical Data & Computation"}], "\" \"", 
            "\"Scientific and Medical Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Symbolic & Numeric Computation"}], 
            "\" \"", "\"Symbolic & Numeric Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Visualization & Graphics"}], "\" \"", 
            "\"Visualization & Graphics\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Data Manipulation & Analysis"}], 
            "\" \"", "\"Data Manipulation & Analysis\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geographic Data & Computation"}], 
            "\" \"", "\"Geographic Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Images"}], "\" \"", "\"Images\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
            "\" \"", "\"Notebook Documents & Presentation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}],
             "\" \"", "\"Social, Cultural & Linguistic Data\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
            "\"System Operation & Setup\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Wolfram Physics Project"}], "\" \"", 
            "\"Wolfram Physics Project\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Engineering Data & Computation"}], 
            "\" \"", "\"Engineering Data & Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Geometry"}], "\" \"", "\"Geometry\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Just For Fun"}], "\" \"", 
            "\"Just For Fun\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Programming Utilities"}], "\" \"", 
            "\"Programming Utilities\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
            "\"Sound & Video\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
            "\"Time-Related Computation\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxVj9FqwzAMRelo12SMfYOfCnvIR4S0hcJGS9UfcJ2bzdSxjSU/5O/\
nUCjrk4Surs5VWzW0Ipkc6PWYJWZpaN39wtzQDwteflkW+iRj4cUO1ijte/\
WN3hrt1FaLVhvVhbH4tNjgy7GDYGSu2yxhLDPTUHVKISLJRG+dFvyEZMEFc4yzhYeXO2au5+\
zA1a63oq+lW+21YzyEeguH/8qcNbg8+\
mfgx8ELUky4h6K69RPlK6M8934Gh5wMLlMEVfvszbzzB352W9U="},
 CellChangeTimes->{{3.8959370497149897`*^9, 3.895937049877925*^9}},
 CellTags->{"Categories-Checkboxes", "CheckboxCell"},
 CellID->248457794,ExpressionUUID->"54a36d4f-a826-4749-bf05-8794384e971a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Symbols", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List up to twenty documented, system-level Wolfram Language symbols \
related to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "ab84b069-12b9-4bfc-acb6-6caebf67e5b6"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Symbols"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Symbols", "TemplateCellGroup"},
 CellID->525877127,ExpressionUUID->"4cca4fd4-ca84-44a7-8d29-0e74f689f5a1"],

Cell["\<\
This needs to have related symbols filled in, for example UnitDimensions.\
\>", "ReviewerComment",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "Signature" -> 
   "OEM6eJxLYywWcMlMzyxJzAnOTM9LLCktSnVk1w1mCaksSA3mdc3JySwoyUx2Li0qS9UN5gTTfo\
m5qcGcxanJBUamZtmGusG8cK1gXQJ++XkuqSWpRbmZeZnFQN1AFR6JxRmZeem+qSUZ+\
SnBbMEejkC9usGMQU4KsZwzuhSfZp3Zuj/U9O464Z/\
ZhgYth7ZXz9Y7tPGgt59xK1BVsJOCzcytEy1XH3R9d23tsqD8DuOYxY9enHnl5Hokzmid1s0DfbrBg\
kGpyfllqUWVAYlFQBcC7XdmAACM71cD"},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      TemplateBox[{
        StyleBox[
         TemplateBox[{"\"WFR Team\""}, "ReviewerCommentLabelTemplate"], 
         ShowStringCharacters -> False, StripOnInput -> False], 
        3.859908690054149`16.339152020289045*^9}, 
       "CommentCellLabelTemplate"]], Background -> None]}, {None, None}},
 CellChangeTimes->{{3.859908693062333*^9, 3.859908737481681*^9}},
 CellTags->{"CommentCell", "ReviewerComment"},
 CellID->520921772,ExpressionUUID->"f81a4746-81b2-4976-bff8-39fd8a215692"],

Cell["UnitDimensions", "Subitem",
 TaggingRules->{},
 CellChangeTimes->{{3.8940422023596044`*^9, 3.8940422045246944`*^9}},
 CellID->71796081,ExpressionUUID->"54caee1b-de11-428d-a05b-4e9dcd4ff69d"],

Cell["QuantityVariableDimensions", "Subitem",
 TaggingRules->{},
 CellChangeTimes->{{3.8940422023596044`*^9, 3.894042212559328*^9}, {
  3.8959370765374556`*^9, 3.8959370765638566`*^9}},
 CellID->142656928,ExpressionUUID->"7689bd73-890b-407c-be46-4a19299a0b78"],

Cell["QuantityVariablePhysicalQuantity", "Subitem",
 TaggingRules->{},
 CellChangeTimes->{{3.8940422023596044`*^9, 3.894042212559328*^9}, 
   3.8959370770540457`*^9},
 CellID->408407213,ExpressionUUID->"3217ac4c-00ac-409c-9d61-6f24f9149298"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this function.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5505c589-779f-40b4-9a0d-97de1380d92b"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->869341850,ExpressionUUID->"58f9a730-08d6-42e7-91c9-113f9a68b6b8"],

Cell["PlanckUnitConversion", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.895937105604883*^9},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->694609509,ExpressionUUID->"0c7c708c-309e-4098-9b7d-581c16515dca"],

Cell["PhysicalQuantityLookup", "Item",
 TaggingRules->{},
 CellID->729407054,ExpressionUUID->"7c53b4ce-06f6-4274-8ef0-18209b30d074"],

Cell["SIConstantConvert", "Item",
 TaggingRules->{},
 CellID->887635027,ExpressionUUID->"1d5858aa-c2aa-4e9f-a161-e352173f43a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source/Reference Citation",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
function and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "2bca5fa5-4a0f-427d-8b1e-0a68f5a72f64"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Source/Reference Citation", "TemplateCellGroup"},
 CellID->788767010,ExpressionUUID->"a54be106-c066-4fac-872e-8483f6339a74"],

Cell["Source, reference or citation information", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->512303561,ExpressionUUID->"ac4a4588-9137-496c-bf02-9a56ec271209"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "57348d9d-d1e8-431b-b0c7-5bde130f497c"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->341958311,ExpressionUUID->"294a97f4-43a2-42f0-af7b-7a065019e584"],

Cell["Link to other related material", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->938599834,ExpressionUUID->"79ac17a0-721b-4507-98b5-5150b7522a01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tests",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"VerificationTests", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Specify an optional list of tests for verifying that the function \
is working properly in any environment. Tests can be specified as \
Input/Output cell pairs or as symbolic ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "VerificationTest", "SymbolsRefLink", ShowStringCharacters -> 
                 True, FontFamily -> "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> "paclet:ref/VerificationTest", 
                ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " expressions for including additional options."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoVerificationTests"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "aaebe64a-63ee-481f-886e-c8fe0d1b1f83"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "VerificationTests"},
 DefaultNewCellStyle->"Input",
 CellTags->{"TemplateCellGroup", "Tests", "VerificationTests"},
 CellID->187055128,ExpressionUUID->"3ec1044b-e1d3-496e-92da-42d58ab7b000"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyFunction", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellLabel->"In[3]:=",
 CellID->770806,ExpressionUUID->"d5aadc23-1fa0-4e47-afe0-6131ece3bc9e"],

Cell[BoxData[
 RowBox[{"x", " ", "y"}]], "Output",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellLabel->"Out[3]=",
 CellID->759771806,ExpressionUUID->"55eb0b4a-edb1-479a-b924-d17ad30b2aef"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your function to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "6616fe93-da69-44f5-bd2e-cb091978b9ba"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->465977791,ExpressionUUID->"6daafc08-7f0d-4cc9-a8a6-54f9d2099b8d"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "dd3e90d7-3420-4a4f-89d5-ac466cd56966"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->267876551,ExpressionUUID->"530d786f-e3d3-4113-8846-1604fa4ed1df"],

Cell["13.2+", "Text",
 TaggingRules->{},
 CellChangeTimes->{3.894042220293859*^9},
 CellTags->{"DefaultContent", "ScrapeDefault"},
 CellID->788185540,ExpressionUUID->"0181b13e-25b4-4499-9e5b-7dd9bdc686c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your function is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "eb015f60-9b23-4e19-b9f8-93bc4707b813"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->752514832,ExpressionUUID->"8aac333b-920c-4357-b32e-de156a48b0ae"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
            "\"Windows\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", "\"Mac\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Unix", {False, "Unix"}], "\" \"", "\"Unix\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNkNuKwkAMhsEerLDsE/gKfQipCoJLF7PL7m0PUQenM8Mkg87bmwot3iX5/\
3w5bIoSMuCoEfI6sAtcwrK6YnfD/pxQelTEsPxTprd3gvyr6Wr4h/\
TXqIc0HhgHmmznBaWnIKDZPgWzkkj/\
BJmLL9iELL69deg5wrqyg2tYtUorjrUUJTEXiCRDZcnasbLmxX6fTsWuV9y0EmX7RhPOwmqLGt+\
V8VKrw2CoSkr4PBhG77xYRjCsNiZCaAnlIx8nJBt8hz/RIRT7YLrR8wRtF2wJ"},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->124789369,ExpressionUUID->"04c4c7fc-deca-4308-9339-d08ffd94dd81"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your function."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "e28c79e4-2013-486e-a71f-d3fe6634d95e"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->789112653,ExpressionUUID->"64fb9057-8484-4566-b696-47f456bd3ec2"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Notebooks"}], "\" \"", 
            "\"Notebooks\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
            "\"Parallel Kernels\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
            "\"Cloud Access\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlUM1qwzAMHmuzJlDKLrv3BfIQIVugrKyl2gs4jsJMFdtY8sFvP2eDkLHb96cPSU1ZQw\
GSCOHpEsVHqWHXfqG+4zA+8PZsOCvFSXDicfPLx0fe3mKeqD6cYO/cnVdwcZ+vKigipOM7BovE/\
5Ulu2/JxeHYaI3Mf1kN5TU4j0ESvLRu8kpMb8hI6lBJDJgTu4sX4+\
xP33pDLt8GI6rPqOgUMS5G9YqEa2c+21GcLLebGg4nKxh8yJG5GKrGJog9Y37G/\
obsYtD4mTxC2UWr58w3NfBx2Q=="},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->323834170,ExpressionUUID->"d5f5f8c1-1cd6-40c6-a533-d1ac2b88079a"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your function is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "93ca0a41-5739-4dad-9d85-d15108a56769"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->939592672,ExpressionUUID->"54b5ee7c-cd29-420c-b08f-177f3ad0f942"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Session", {False, "Session"}], "\" \"", 
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Script", {False, "Script"}], "\" \"", 
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
            
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"]},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdUdtqwzAMha3NBbZ9xN7zEV2WQsagpRrsOReVmDq2seRC/\
n721jjpnnykI845kndZAVvgSSIkB8fGcQFpOWB3wf6c0uZTEEMKSCS0gudvbKtrI13DoczeGu6GD91\
CAp0VhiHxA7tjDTm49oJWofSwG7B3EnvvVDOONOueH2hz8sSiP4PIRN2/N/bv9GcY2X8x78tF+\
5b19q6058ArGNll54gKyI5WG7Q8wWupR+N9WiEFT4trpa7CajWiCgc+mNCjILo+\
BGVVL7hpPdruG0kYifwdJa6Z8EtaulFR+VjAS60YrbF+5HfjfKcmfxZCb/Z0QtLOdvg1GR9/\
71QXZn4A3oyuQA=="},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->1100362,ExpressionUUID->"345e1480-4716-41c9-ab2f-790e3cc4d0c9"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your function is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "797cc07d-12e4-4be7-91aa-81552536057f"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->624931977,ExpressionUUID->"f8701cc3-2a9e-4f08-a0e9-8cb38bd34a6e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox[
          TemplateBox[{
            CheckboxBox[True, {False, True}], "\" \"", 
            "\"Supported in cloud\""},
           "RowDefault"],
          StripOnInput->False,
          FontSize->12]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNjkEKwkAMRVGqVhAX7tx5gR5Cq0JBqBgvUNsUB6eTYZIsentnQMVdyH/vJ/\
u8gBnIaBHmtYpXKWBRPrF9YddPOLsYFs7uQTFyleDA320/\
5eym0duAek9BsNsZt2stafc18msgj0FG2JY0+EbMw1gjY5mgjxbv1V4MOU6N/\
82cnzojzSNOs3NjGX/B8ogW/5P0NFkdHJeTAtaVEww+RCQVw+\
JAZLFxBaxuyKShxfvoEfKzujYRb6FXWpA="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->609243646,ExpressionUUID->"77ed2784-ed79-47eb-8ca5-556145b4fa99"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the function documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "7ca94c45-d32c-4134-ba6c-a4723b17c8f9"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->897529167,ExpressionUUID->"c1c2607b-80e4-4a68-b51e-d5ebd8fb36e3"],

Cell["Additional information about limitations, issues, etc.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->908162033,ExpressionUUID->"07bbea8c-84c3-4a13-aa16-2bb392389381"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Submission Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter any additional information that you would like to communicate \
to the reviewer here. This section will not be included in the published \
resource.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "7e967c21-fdf9-4aed-959e-2c2d6f3b0b5e"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Submission Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Submission Notes", "TemplateCellGroup"},
 CellID->321610809,ExpressionUUID->"1ce3d441-f82f-4a28-94ad-c4a0b221e7cc"],

Cell["\<\
I would like to add a hyperlink to the UnitDimensions page in the Details \
pane.\
\>", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8597325578282166`*^9, 3.859732580268447*^9}, {
  3.8597330321851196`*^9, 3.8597330527303333`*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->711457694,ExpressionUUID->"1612f1bd-8d88-4939-9db4-0b67f0b5745c"],

Cell["I don't see any feedback. I don't know what to respond to.", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.894729464920191*^9, 3.894729477878887*^9}},
 CellID->488587408,ExpressionUUID->"d7a25822-e2ee-44f0-ab48-3f42f67f950b"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{582.6, 494.4},
WindowMargins->{{90, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.92157, 0.34118, 0.10588], CellTags -> {"MainDockedCell"}, 
   CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]},
TaggingRules->{"CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWVtT20YUrjEQBhxaMulMkyc98EAyadJpO9NL2iauDcQdIMCa9JW1dGQ0rHeV3RWg\
X9a/17MrydhGciTbTFNPJsja1XfOnut3LH9JPWqJQSgi7u3ehBKUCgT3a2rlJApA+/nLS2qp4+P/\
9Sb38M/K7seIMrW5/QGkWT+KBj2Q0refnbdmB6EDOMGLRiuSErj+QFkE/\
hfq0e4VXlFtnhIaekJc4q7lg0Bp1ejSfj/g/dOIgSKNU1Aiki504xDIcptqimouv+\
cuFGq58icT7qXZlgButwTXcKOPqb7w60UnPwLwFNnJ5JFYaRi0WIBqn7fBD3gwqu757SOOUSp7LG+\
rWj6KGEPFXt5dTAWcQh9VBYma+kE/ktY0w+O+KavUKYRCBVrIOAFMcFQKVLf+\
q6m1PRqwSKJnaurhMXUZ6A5XmjJGvinS0F+\
dxdgzmbXRFWOeWSdaYjz8JQIjr35IQ3uGiLvmSX8lkUyeFBrXKkeVCeuNBIuELNDmNmFCt2qkdk6Wf\
v195MbS63WrPMavIs/KKv/\
cXy6wUp2AkbfeFtfcJoFSv5RFzS7eRxrdCJ5JqHX0NKMuNDGuFgi7YZKuDYzG4CHuxjvBPHQkBiZXf\
5QFPpbBFQKeXyVlYV8CfpPqwRlXaTnIsUa7KjoNQ+DeGb+\
g3GPgtYAxNdUwi5IwxUb4tbKVXITFipcikK0uDPAAGoy4fSmicH5QzN1Gk5krLAdXGNBft3BTX8gA1\
LetC3Ave+IGb2/e3jbSSSNbs982UR6NmLb5zXWOpuTL7BaBJDdzXV26mg0doS674iz08Dqt+\
8VeXgD4mIPreONBlgJr+0z0KDu/MC1t1KLqp7Ji90G/\
CzwPeFKIyqfrHuVu3LoQgQvtgDLRH1WskSomNXZJ7K9YlCm/\
zFOd4uqWXTU9icDHCPDU5FFqAeZlAk+\
wXQzPOy5gBCxrKStdGdnUnrNKVGl22UUWdCkNUd9XVYH3quRYSmUmpY5ZKLPnEVwP7Zlr4yRB1GFVl\
bcjBQfQp27c6XMhk+qU+VotG2/kJ9/rspJycCcSb1oazilmWo1dUqsH+\
KQtjHtV7dYHnZWxcYkLSyVMiQ3UHLAuUgXqPtQtzEak0JY1r5rdnbbJS6ufetDBmt3HSF3rcCss/\
oSR60OtCw6eApeue9mJ1LAz3IHt3Vp7KH5EZk3tVm6DlAseuJQdSxECWsvyuVl1HlE0f4hYSotho6m\
UcAPLvU9Us3Juh6m2JEb144GJobWmJSNdsRg4GyZkk1igQ9DUM/\
NBOoGRtVagkwHkSbLj1Sn4IE10O9nSbXVZjFdGhE6olUxPwxkqGUGXD9Dmd0bPL+zn+\
VucCeYZVqZMEhX4/fNClGqEvhrONAb/YyESDoGXtA/ERYdU4+1nhZhJt8uLg0TYzET+3kROZ/\
YlrVeGz88E9Zmx+OP5vVCB1t+HtFl4/k6hHpPEvjht/ydMfqZqgQDffbJeTVLn1tzOtQz+\
VSHMfVD2YqXHzDMzUX9RiD8fM6+KW5aK/1bOHv8tAZ9Lyc+Idv9ceA7iShpi/ZnMkHl49+\
uS7SqXbc+s6ox0uzPlN/bsx3HMtiicFDuddi8UdpH0ex7nlCTdtbHf2yfeAuUz8R/sZ+etcc9oqyP/\
1LoXgXJ4qqpjqBiVytHC6YHj2i7iOb4UA4c6HK5BOmmHeeEogf8G4Pi4KcIocAY0NkjOtZCIpBy4CT\
F2wHvptIUTi8i5DtSFgdYydmikxQAPizZgseMKjrgaw8/RYwrhboqrgxC39hhk0t/cTg/\
1dHpYy6aH8TlCbaLrk2YjJJVx4TBiHTj5bmz4CqLgfdhDgg6L1CGioG9x+\
xY6tG9AO9zDs2EcDuvRetMalxpasHaEJNB0BOvNVRIPeoKRp8nbn0PKEUyeJ9+Snkce5811pZ/+\
KouXDOV2vNqeXMp9D7QyIujZnSeKiMG4/\
WyabbVsUI30dbWyR5mC4Y6npzAQV7A7CHW8e0ORJGTUV01ufdzMGR2GbTwVmCj3d8A9cd0NNHoiRcl\
98fkvn3IKDA=="]]], "CreationTimestamp" -> 
  3.8597281212428117`17.339131703261113*^9, "DefinitionNotebookFramework" -> 
  "DefinitionNotebookClient", "ResourceCreateNotebook" -> True, 
  "ResourceType" -> "Function", 
  "RuntimeConfiguration" -> {
   "LoadingMethod" -> "Paclet", "PacletName" -> "FunctionResource", 
    "Contexts" -> {
     "FunctionResource`", "FunctionResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Legacy"}, 
  "SubmissionReviewData" -> {
   "Review" -> True, "SubmissionID" -> "8733", "OriginalName" -> 
    "ExactDimensionMatches", "Internal" -> 
    "$a+8N6nAWZrm1hbC+LDWE12OmEaLAY5gtQb4uwI5ji8GQQAbFFpbpg4L8iv/nyxWKQ+\
OZImquzJVy3NtVf1nvy5m2ET1vJrXwNeENE6hyX6rBixvZ0/wd/fN7/9+0mro8LMI+\
8f6ImucP3FLbb8ftrfZj+ric6vXMgHbYUAGUJtp9FHU1yIz88vTYw7+\
AuPyfBM9E6i89aB4676zvcU3YW+Uin+LL9ayzFnCcQXYFoLA/\
uhbPJ2g9BCmDoVp8ZEQaDkLpLmUeoixJSXquOI1qKS7GETGmoNtcS33NrSqrcbpJHAnl4CrTyzRmV7\
6YBOyWpVYcplRqqziqz3cb31m9alLpnzT3RBGk1U2q0zVD2qqRZaspOcnomcmmA8YYNEFABzyRXOuf\
/Y2wlV/TG2oH59Y4IeHTQG5jGE1ONSJr7V92GPDnjXKpvgvPnHlmaPY3O+7PeH3DEyvHOn/\
s4lBMm76y8D8Q0DWj9AuvmbSfKezgPvMAsmznQPv117gFwX+CZJ/kc3JO4exeA/J08qkKW8x2G0ls+\
WSv91YOt3QCGWak6vc8xzxSCkpYx3m78kHHy1+gAkbNQoCWkR/8wy4ytaDgoNll/\
xpTXitC7osTSfqdJnHTZwPhvVrAAPv1fZm14IjiB7iS9WeMjXws1BHEqyUFz5L7FcD45lVFPs2Ve3i\
hGwATgXjOBU+DOn5j+fFjaHDo2PjILCETiON64uzGMSABY81qQOUT0wFtkaP56aQv+\
7rcboqHyhoa68z7gfi9M4scqb/\
lWcNz2lszN1dsdmQEHp2G6a0zwm2caPyLXqevaJq4mLYunKZ2LWgBnJWyKKcLzJez3GNl1SDXVXRXZ\
jn9oYPkCkC9wkhcDO9/\
OrPsjN3dyV2NXE2p5U5UL7Ou9WS8xY94qzRLP82RbPuagIMnt5JdBv49u4OxcngJBXpcbjRTT33Pmp\
lQanAhdyIG/xfc3lHXa6sA3iJMKY+Ps62LUovTnU4Yd3L5kPkSyXv9CjTnddtMf/O/\
4yXtCvBp2LNKdEHLej6Rfai4qZTsbaS0JNzBfws9van3NysiBL2BNPYgXXZeQK9rlpjIQSy0h4iWtW\
D4bMNGi8Qb5nPTUwvhLqkIuNyMLt6yF1e+\
rgyfBwtQwx2ouoFYxhrURva6ZefO1zkT0nZO8SH7jKqIhHOPxj1mTP8o4i2JyKVd0TKbtColejqlh+\
nkpd7DMe2l$foQoUNNRoS2a5jiZ1EPAhA=="}, "ToolsOpen" -> True, 
  "UpdatedTimestamp" -> 3.8959372235688557`17.34318693950275*^9, 
  "TemplateVersion" -> "1.6.4", "StatusMessage" -> ""},
CreateCellID->True,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (May 18, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell[
       StyleData[StyleDefinitions -> "Default.nb"]], 
      Cell[
       StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
         Cell[
          BoxData[
           TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
          CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
          RGBColor[0.92157, 0.34118, 0.10588], CellTags -> {"MainDockedCell"},
           CacheGraphics -> False], 
         Cell[
          BoxData[
           TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
          TaggingRules -> {"Tools" -> True}, 
          CellTags -> {"ToolbarDockedCell"}, 
          CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}},
           CacheGraphics -> False, CellOpen -> Dynamic[
            CurrentValue[
             EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
       PrivateNotebookOptions -> {
        "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
       CellLabelAutoDelete -> False, 
       CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
       AutoQuoteCharacters -> {}]}, Open]], 
   Cell["Hint Styles", "Section"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell["Template Boxes", "Section"], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Subscripted Variable\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert subscripted variable placeholder\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3787878858871814623; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Subscripted Variable"; 
                    DefinitionNotebookClient`SubscriptInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3787878858871814623]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> GrayLevel[1], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> GrayLevel[0.9], 
              Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
              Automatic], FrameStyle -> Directive[
               GrayLevel[0.9], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[3216557251994556740]
                    ], DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
               BaseStyle -> Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> GrayLevel[1], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.82745, 0.20784, 0.], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.95686, 0.80196, 0.75], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchjw5tvzu19maOx1UPSQgCsoEiQHGiDHl4/3Zz
6mVTBlwIKAtUg8eQR8f3XQtUAaq8as/zYkrFxwPrf718DEFANlAEKA6UBaoB
qsRuyMP7EBPuZTj8fHYfa+gBxYGyEHPg7kE2BOILoBqCEQExB+QvVEOAIQbx
BS43oLkH4i9IOMMNAYY8UBDoa4ImQABQJVA9UBeyIcAYBAoCQ49IQ4AqgeqB
uoB6IakRyACmBKAgMBaINASoEuR9D0mIIUBAuSFUccl/6oUJVWKHKumEKimW
WnmHOrmYSuUJwkkUlmykA4IR8Z+40h4AAyMnLQ==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchNw/sODmxYXeazzp7OQgCsoEiQHFiDHny4P7h
2ozl2my4EFAWqAaPIbeP7t/ooQlUuVqP87yn9MMwtU8p+hAEZANFgOJAWaAa
oEqshgDNh5iwx1rwY7Len2wTTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwB
hhjEF7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGq
BKoH6gLqhaRGIAOYEoCCwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8gQOKCzZyADEFOPElPYAYDEc1A==
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4BllAJchr1+//vjx4/fv3//AAJANFAGKE2PI8+fPv3z5
gsfZQFmgGjyGvHr16vfv30CRv9++vFrQ/rAk4Ia3DAQB2UARoDhQFqgGqBKr
IUDzISZ8ObP/pp/CZVMGTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQAbQ1wRNgCCgSqB6oC5kQ4AxCGQAQ49IQ4AqgeqB
uoB6IakRyACmBCADGAtEGgJUCVQP1AUxBAgoN4QqLqFimFAldqiSTqiSYqmV
d6iSi6lVnsABhSUbGQCPs+GAmNIeAMvulj0=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> GrayLevel[0.9], 
               Method -> "Queued", ImageSize -> {All, 20}, Evaluator -> 
               Automatic], FrameStyle -> Directive[
                GrayLevel[0.9], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2572781756330727330; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2572781756330727330]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              GrayLevel[0.9]}}, 
          GridBoxFrame -> {
           "Columns" -> False, "RowsIndexed" -> {1 -> GrayLevel[0.9]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.022222], {
                   FaceForm[{
                    RGBColor[0.87451, 0.27843, 0.031373], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{45., 22.5}, {45., 10.074}, {34.926, 0.}, {22.5, 
                    0.}, {10.074, 0.}, {0., 10.074}, {0., 22.5}, {0., 
                    34.926}, {10.074, 45.}, {22.5, 45.}, {34.926, 45.}, {45., 
                    34.926}, {45., 22.5}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLckSxqe7SdlhmnN3zvPblg4w/smyffOl/K0cEp5e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcLUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzAHLC+HjtHICGz32fruGQC1Zo57BASv+uCpsW
RP9Me4g9YjoQe3gcHICqlx/z1nNgAAEFB4j6Y/oOQMvOfVd2gLhjlgGEz+zg
oBnTf+irhiFEfw/UvDJDiP2+9g7qhhxrZGYZQtS9sHP48vdKxcs2Q4i72u0c
pEHOSTSEuxfsTiFDiPhCWwcXoHd+rzRwWOS67fPfEFuHx0tnH1EoMHDYUJQx
8a2MrUPQDrnW14IGUPfaOnzTAFq0VR8aXrYOoFA6V64HcccvWwfTuF2ePEy6
UPPtHIC+CH68VBvOP70QaNFeLTg/X6j5wKlELYdPl3yTBCLsIP7U0YK49y3U
PR80HQJ6p+cJHbaB88HqZ1jD1QNdUyWSZwWJH2stiHtuWcLdC+ND4lvfwbzT
MeHpBEt4+IPld1lA4p9DH+LuVgu4eeh8sH18hnA+2J6velB3aUHSyxE9iP8U
9aDpBMH3A/rWskQHYt8JBQw+TD0kPpTh5sHSMzgd/0TwYe6B8WHulY1Ksb7f
rwDng+PHSQES31csIPF7UREePgCOg02w
                    "], {{19.051, 14.242}, {19.051, 27.594}, {23.828, 
                    27.594}, {23.828, 26.543}, {21.426, 26.309}, {21.375, 
                    26.258}, {21.375, 24.219}, {21.375, 17.535}, {21.375, 
                    15.602}, {21.426, 15.547}, {23.828, 15.316}, {23.828, 
                    14.242}}, {{24.578, 18.75}, {24.578, 23.078}, {24.578, 
                    23.539}, {24.953, 23.914}, {25.418, 23.91}, {29.746, 
                    23.91}, {30.203, 23.91}, {30.578, 23.539}, {30.578, 
                    23.078}, {30.578, 18.75}, {30.582, 18.289}, {30.207, 
                    17.91}, {29.746, 17.91}, {25.418, 17.91}, {24.953, 
                    17.906}, {24.574, 18.285}, {24.578, 18.75}}, {{31.328, 
                    14.242}, {31.328, 15.316}, {33.684, 15.539}, {33.789, 
                    15.602}, {33.789, 17.641}, {33.789, 24.188}, {33.789, 
                    26.227}, {33.684, 26.281}, {31.328, 26.512}, {31.328, 
                    27.586}, {36.113, 27.586}, {36.113, 14.234}}}]}}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], AspectRatio -> Automatic, Background -> 
                  RGBColor[0.98824, 0.41961, 0.20392], 
                  ImageSize -> {45., 45.}, 
                  PlotRange -> {{0., 45.}, {0., 45.}}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Function Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {2 -> RGBColor[1., 1., 1.]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> RGBColor[1., 1., 1.], 
                 StripOnInput -> False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Function Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> RGBColor[1., 1., 1.], 
               StripOnInput -> False], 
              "https://resources.wolframcloud.com/FunctionRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Open Sample\"", 
                "\"View a completed sample definition notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 4393071033038384034; (
                DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                DefinitionNotebookClient`ViewExampleNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[4393071033038384034]]& , 
              "\"View a completed sample definition notebook\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
               "\"Style Guidelines\"", 
                "\"View general guidelines for authoring resource \
functions\""}, "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring resource functions\"", 
              False}, "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[0.99412, 0.7098, 0.60196]], "Grid"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Check\"", "\"Check notebook for potential errors\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 7891204313296928191; (
                DefinitionNotebookClient`$ClickedButton = "Check"; 
                DefinitionNotebookClient`CheckDefinitionNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[7891204313296928191]]& , 
              "\"Check notebook for potential errors\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{"\"Preview\"", "\"Generate a preview notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 4299709568580201021; (
                DefinitionNotebookClient`$ClickedButton = "Preview"; 
                DefinitionNotebookClient`PreviewResource[
                  ButtonNotebook[], "Notebook"]), 
               DefinitionNotebookClient`ButtonCodeID[4299709568580201021]]& , 
              "\"Generate a preview notebook\"", True}, 
             "OrangeButtonTemplate"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"For my cloud account\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1389539917011878958; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "For my cloud account"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPrivate"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1389539917011878958]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], 
              "\"In this session only (without documentation)\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8586347731213964380; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only (without documentation)"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8586347731213964380]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your function submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your function submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your function to the Wolfram Function \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your function to the Wolfram Function \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.98824, 0.41961, 0.20392], 
              RGBColor[0.92157, 0.34118, 0.10588]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.98824, 0.41961, 0.20392], 2 -> 
              RGBColor[0.92157, 0.34118, 0.10588]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[0.98824, 0.41961, 0.20392]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.022222], {
                FaceForm[{
                  RGBColor[0.87451, 0.27843, 0.031373], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{45., 22.5}, {45., 10.074}, {34.926, 0.}, {22.5, 
                 0.}, {10.074, 0.}, {0., 10.074}, {0., 22.5}, {0., 34.926}, {
                 10.074, 45.}, {22.5, 45.}, {34.926, 45.}, {45., 34.926}, {
                 45., 22.5}}}]}, {
                FaceForm[{
                  RGBColor[1., 1., 1.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                  2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLckSxqe7SdlhmnN3zvPblg4w/smyffOl/K0cEp5e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcLUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzAHLC+HjtHICGz32fruGQC1Zo57BASv+uCpsW
RP9Me4g9YjoQe3gcHICqlx/z1nNgAAEFB4j6Y/oOQMvOfVd2gLhjlgGEz+zg
oBnTf+irhiFEfw/UvDJDiP2+9g7qhhxrZGYZQtS9sHP48vdKxcs2Q4i72u0c
pEHOSTSEuxfsTiFDiPhCWwcXoHd+rzRwWOS67fPfEFuHx0tnH1EoMHDYUJQx
8a2MrUPQDrnW14IGUPfaOnzTAFq0VR8aXrYOoFA6V64HcccvWwfTuF2ePEy6
UPPtHIC+CH68VBvOP70QaNFeLTg/X6j5wKlELYdPl3yTBCLsIP7U0YK49y3U
PR80HQJ6p+cJHbaB88HqZ1jD1QNdUyWSZwWJH2stiHtuWcLdC+ND4lvfwbzT
MeHpBEt4+IPld1lA4p9DH+LuVgu4eeh8sH18hnA+2J6velB3aUHSyxE9iP8U
9aDpBMH3A/rWskQHYt8JBQw+TD0kPpTh5sHSMzgd/0TwYe6B8WHulY1Ksb7f
rwDng+PHSQES31csIPF7UREePgCOg02w
                  "], {{19.051, 14.242}, {19.051, 27.594}, {23.828, 27.594}, {
                  23.828, 26.543}, {21.426, 26.309}, {21.375, 26.258}, {
                  21.375, 24.219}, {21.375, 17.535}, {21.375, 15.602}, {
                  21.426, 15.547}, {23.828, 15.316}, {23.828, 14.242}}, {{
                  24.578, 18.75}, {24.578, 23.078}, {24.578, 23.539}, {24.953,
                   23.914}, {25.418, 23.91}, {29.746, 23.91}, {30.203, 
                  23.91}, {30.578, 23.539}, {30.578, 23.078}, {30.578, 
                  18.75}, {30.582, 18.289}, {30.207, 17.91}, {29.746, 
                  17.91}, {25.418, 17.91}, {24.953, 17.906}, {24.574, 
                  18.285}, {24.578, 18.75}}, {{31.328, 14.242}, {31.328, 
                  15.316}, {33.684, 15.539}, {33.789, 15.602}, {33.789, 
                  17.641}, {33.789, 24.188}, {33.789, 26.227}, {33.684, 
                  26.281}, {31.328, 26.512}, {31.328, 27.586}, {36.113, 
                  27.586}, {36.113, 14.234}}}]}}, {
              ImageSize -> 12, AspectRatio -> Automatic, Background -> None, 
               ImageSize -> {45., 45.}, PlotRange -> {{0., 45.}, {0., 45.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.95686, 0.80196, 0.75]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4HW4NCUIlyHPAkQfuPPftue4ZskMQUA2UAQoTpQhYVJ3
XXgumzLgQkBZoBo8hjwLFLtuzQJSbIbDELA4UA1QJXZDwqSgJhCBgCrh7kE2
BL8vsPsL1RBgiOHzBQ5/QcIZbggw5ElyBgQBdSEbAoxBMgwB6gLqhaRGIAOY
EsgwBKgLYggQUG4IVVxCxTChSuxQJZ1QJcVSK+9QJxdTqTyhWslGbhmLHxBT
2gMAMUz3Hw==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4HW4NCUIlyF3/cTOOAvtteRZb8ABQUA2UAQoTowhL0Ol
jtrxL9dmw4WAskA1eAy57y++yYgTjwkQBFQDVInVEKD5xJgANwfuHmRD8PsC
q7/QDAGGGEkmQBAknOGGAEOeDEOAupANAcYgGYYAdQH1QlIjkAFMCWQYAtQF
MQQIKDeEKi6hYphQJXaokk6okmKplXeokoupVZ5Qq2Qju4zFD4gp7QFpR8IT

             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4HW4NCUIlyHvKz2/LG7+eWr737fPIAjIBooAxYkx5E2M
0rets/E4GygLVIPHkHclTn+e3gaK/P76+drsrsN5IRudFCEIyAaKAMWBskA1
QJVYDQGaDzHh5amDm9xUl2uzYSKgOFAWYg7cPciGQHwBVINVOzKCmANUj2YI
MMQgvsDlBjT3QPwFCWe4IcCQBzKAviZoAgQBVQLVA3UhGwKMQSADGHpEGgJU
CVQP1AXUC0mNQAYwJQAZwFgg0hCgSqB6oC6IIUBAuSFUcQkVw4QqsUOVdEKV
FEutvEOVXEyt8oRaJRvZZSx+QExpDwAxBaHa
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.92157, 0.34118, 0.10588], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.92157, 0.34118, 0.10588], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell["Documentation", "Section"], 
   Cell["Usage", "Subsection"], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell["Details & Options", "Subsection"], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell["Examples", "Subsection"], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell["Links", "Section"], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell["Annotation", "Section"], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell["Special Input", "Section"], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 1053094956087266899; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Function", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[1053094956087266899]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 4898876371082581810; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Function", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[4898876371082581810]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell["Misc", "Section"], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[0.9]]}, Visible -> False, FrontEndVersion -> 
  "13.3 for Microsoft Windows (64-bit) (May 18, 2023)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"b704f082-487e-41f1-ac16-d6d7766bb761"
]
